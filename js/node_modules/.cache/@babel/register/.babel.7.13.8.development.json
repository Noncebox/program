{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/main.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/main.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/main.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/main.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/",
        "sourceFileName": "main.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _tokenSwapTest = require(\"./token-swap-test\");\n\nvar _tokens = require(\"./tokens\");\n\n/**\n * Exercises the token-swap program\n *\n * \n */\nconst FARMV1 = 'AP58G14hoy4GGgZS4L8TzZgqXnk3hBvciFKW2Cb1RQ2J';\nconst RAY = '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R';\n\nasync function aa(i) {\n  if (i < _tokens.one.length) {\n    _tokens.one[i].farm = FARMV1;\n    await (0, _tokenSwapTest.createFarmPool)(_tokens.one[i]);\n    await aa(i + 1);\n  }\n}\n\nasync function aa1(i) {\n  if (i < _tokens.one.length) {\n    _tokens.one[i].farm = FARMV1;\n    let reward = ONE_REWARD;\n\n    if (_tokens.one[i].name == 'FARMv1-USDC') {\n      reward = THREE_REWARD;\n    }\n\n    await (0, _tokenSwapTest.updateFarmPool)(_tokens.one[i], reward); // await aa1(i+1);\n  }\n}\n\nasync function bb(i) {\n  if (i < _tokens.two.length) {\n    _tokens.two[i].farm = FARMV1;\n    _tokens.two[i].ray = RAY;\n    _tokens.two[i].programid = 'EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q';\n    await (0, _tokenSwapTest.createVaultsPool)(_tokens.two[i]); // await bb(i+1);\n  }\n}\n\nasync function bb1(i) {\n  if (i < _tokens.two.length) {\n    _tokens.two[i].farm = FARMV1;\n    _tokens.two[i].ray = RAY;\n    _tokens.two[i].programid = 'EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q';\n    await (0, _tokenSwapTest.updateVaultsPool)(_tokens.two[i], TWO_REWARD); // await bb1(i+1);\n  }\n}\n\nasync function cc(i) {\n  if (i < _tokens.three.length) {\n    _tokens.three[i].farm = FARMV1;\n    _tokens.three[i].ray = RAY;\n    _tokens.three[i].programid = 'CBuCnLe26faBpcBP2fktp4rp8abpcAnTWft6ZrP5Q4T';\n\n    if (i >= 3) {\n      _tokens.three[i].programid = '9KEPoZmtHUrBbhWN1v1KWLMkkvwY6WLtAVUCPRtRjP4z';\n    }\n\n    await (0, _tokenSwapTest.createVaultsPoolV4)(_tokens.three[i]); // await cc(i+1);\n  }\n}\n\nasync function cc1(i) {\n  if (i < _tokens.three.length) {\n    _tokens.three[i].farm = FARMV1;\n    _tokens.three[i].ray = RAY;\n    _tokens.three[i].programid = 'CBuCnLe26faBpcBP2fktp4rp8abpcAnTWft6ZrP5Q4T';\n\n    if (i >= 2) {\n      _tokens.three[i].programid = '9KEPoZmtHUrBbhWN1v1KWLMkkvwY6WLtAVUCPRtRjP4z';\n    }\n\n    await (0, _tokenSwapTest.updateVaultsPoolV4)(_tokens.three[i], TWO_REWARD); // await cc1(i+1);\n  }\n}\n\nasync function dd(i) {\n  if (i < _tokens.three.length) {\n    _tokens.three[i].farm = FARMV1;\n    _tokens.three[i].ray = RAY;\n    _tokens.three[i].programid = '9KEPoZmtHUrBbhWN1v1KWLMkkvwY6WLtAVUCPRtRjP4z';\n    await (0, _tokenSwapTest.createVaultsPoolV4)(_tokens.three[i]);\n    await dd(i + 1);\n  }\n}\n\nasync function initFarms() {\n  console.log('Run test: startFarms'); // await aa(0);\n  // await bb(2);\n\n  await cc(3); // await cc(6);\n\n  console.log('==========================all success==========================');\n}\n\nasync function updateFarms() {\n  console.log('Run test: updateFarms');\n  await aa1(3); // await bb1(0);\n  // await cc1(3);\n  // await cc1(6);\n\n  console.log('==========================all success==========================');\n}\n\nconst ONE_REWARD = 115740; // 单币 每秒奖励\n\nconst TWO_REWARD = 115740; // LP 每秒奖励\n// const TWO_REWARD = 462962 // LP 每秒奖励\n\nconst THREE_REWARD = 231480; // farmv1-usdc 每秒奖励\n\nasync function main() {\n  // await initFarms();\n  // await updateFarms();\n  // await initFarms();\n  // await bb1(0);\n  // await cc1(3);\n  await (0, _tokenSwapTest.getAccounts)('AP58G14hoy4GGgZS4L8TzZgqXnk3hBvciFKW2Cb1RQ2J'); // These test cases are designed to run sequentially and in the following order\n  //   one[4].farm = FARMV1;\n  //   one[4].ray = RAY;\n  //   await cc1(6)\n  //   two[0].farm = FARMV1;\n  //   two[0].ray = RAY;\n  //   two[0].programid = 'EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q';\n  //   await createVaultsPool(two[0]);\n  //   three[0].farm = FARMV1;\n  //   three[0].ray = RAY;\n  //   three[0].programid = 'CBuCnLe26faBpcBP2fktp4rp8abpcAnTWft6ZrP5Q4T';\n  //   await updateVaultsPoolV4(three[0],1157407400);\n  // await updateFarms()\n  // await createFarmPool();\n  // console.log('Run test: depositPool and withdrawPool');\n  // await depositAndWithdrawPool();\n  // await createVaultsPool();\n  // await depositAndWithdrawPoolV2();\n  // await createVaultsPoolV4();\n  // await depositAndWithdrawPoolV4();\n}\n\nmain().catch(err => {\n  console.error(err);\n  process.exit(-1);\n}).then(() => process.exit());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "main.js"
      ],
      "names": [
        "FARMV1",
        "RAY",
        "aa",
        "i",
        "one",
        "length",
        "farm",
        "aa1",
        "reward",
        "ONE_REWARD",
        "name",
        "THREE_REWARD",
        "bb",
        "two",
        "ray",
        "programid",
        "bb1",
        "TWO_REWARD",
        "cc",
        "three",
        "cc1",
        "dd",
        "initFarms",
        "console",
        "log",
        "updateFarms",
        "main",
        "catch",
        "err",
        "error",
        "process",
        "exit",
        "then"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/",
      "sourcesContent": [
        "/**\n * Exercises the token-swap program\n *\n * @flow\n */\n\nimport {\n    depositAndWithdrawPool,\n    createFarmPool,updateFarmPool,\n    createVaultsPool, updateVaultsPool, depositAndWithdrawPoolV2,\n    createVaultsPoolV4,updateVaultsPoolV4,\n    depositAndWithdrawPoolV4,\n    getAccounts,\n} from './token-swap-test';\n\nimport {\n    one,two,three\n} from './tokens';\n\nconst FARMV1 = 'AP58G14hoy4GGgZS4L8TzZgqXnk3hBvciFKW2Cb1RQ2J';\nconst RAY = '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R';\n\n\n\nasync function aa(i) {\n    if(i<one.length) {\n        one[i].farm = FARMV1;\n        await createFarmPool(one[i]);\n        await aa(i+1);\n    }\n}\nasync function aa1(i) {\n    if(i<one.length) {\n        one[i].farm = FARMV1;\n        let reward = ONE_REWARD;\n        if (one[i].name=='FARMv1-USDC'){\n            reward = THREE_REWARD;\n        }\n        await updateFarmPool(one[i],reward);\n        // await aa1(i+1);\n    }\n}\n\nasync function bb(i) {\n    if(i<two.length) {\n        two[i].farm = FARMV1;\n        two[i].ray = RAY;\n        two[i].programid = 'EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q';\n        await createVaultsPool(two[i]);\n        // await bb(i+1);\n    }\n}\n\nasync function bb1(i) {\n    if(i<two.length) {\n        two[i].farm = FARMV1;\n        two[i].ray = RAY;\n        two[i].programid = 'EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q';\n        await updateVaultsPool(two[i],TWO_REWARD);\n        // await bb1(i+1);\n    }\n}\n\nasync function cc(i) {\n    if(i<three.length) {\n        three[i].farm = FARMV1;\n        three[i].ray = RAY;\n        three[i].programid = 'CBuCnLe26faBpcBP2fktp4rp8abpcAnTWft6ZrP5Q4T';\n        if (i >= 3){\n            three[i].programid = '9KEPoZmtHUrBbhWN1v1KWLMkkvwY6WLtAVUCPRtRjP4z';\n        }\n        await createVaultsPoolV4(three[i]);\n        // await cc(i+1);\n    }\n}\n\nasync function cc1(i) {\n    if(i<three.length) {\n        three[i].farm = FARMV1;\n        three[i].ray = RAY;\n        three[i].programid = 'CBuCnLe26faBpcBP2fktp4rp8abpcAnTWft6ZrP5Q4T';\n        if (i >= 2){\n            three[i].programid = '9KEPoZmtHUrBbhWN1v1KWLMkkvwY6WLtAVUCPRtRjP4z';\n        }\n        await updateVaultsPoolV4(three[i],TWO_REWARD);\n        // await cc1(i+1);\n    }\n}\n\nasync function dd(i) {\n    if(i<three.length) {\n        three[i].farm = FARMV1;\n        three[i].ray = RAY;\n        three[i].programid = '9KEPoZmtHUrBbhWN1v1KWLMkkvwY6WLtAVUCPRtRjP4z';\n        await createVaultsPoolV4(three[i]);\n        await dd(i+1);\n    }\n}\n\nasync function initFarms() {\n    console.log('Run test: startFarms');\n    // await aa(0);\n    // await bb(2);\n    await cc(3);\n    // await cc(6);\n    console.log('==========================all success==========================')\n}\n\nasync function updateFarms() {\n    console.log('Run test: updateFarms');\n    await aa1(3);\n    // await bb1(0);\n    // await cc1(3);\n    // await cc1(6);\n    console.log('==========================all success==========================')\n}\n\n\nconst ONE_REWARD = 115740 // 单币 每秒奖励\nconst TWO_REWARD = 115740 // LP 每秒奖励\n// const TWO_REWARD = 462962 // LP 每秒奖励\nconst THREE_REWARD = 231480 // farmv1-usdc 每秒奖励\n\nasync function main() {\n    // await initFarms();\n    // await updateFarms();\n    // await initFarms();\n    // await bb1(0);\n    // await cc1(3);\n    await getAccounts('AP58G14hoy4GGgZS4L8TzZgqXnk3hBvciFKW2Cb1RQ2J')\n\n  // These test cases are designed to run sequentially and in the following order\n  //   one[4].farm = FARMV1;\n  //   one[4].ray = RAY;\n  //   await cc1(6)\n  //   two[0].farm = FARMV1;\n  //   two[0].ray = RAY;\n  //   two[0].programid = 'EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q';\n  //   await createVaultsPool(two[0]);\n  //   three[0].farm = FARMV1;\n  //   three[0].ray = RAY;\n  //   three[0].programid = 'CBuCnLe26faBpcBP2fktp4rp8abpcAnTWft6ZrP5Q4T';\n  //   await updateVaultsPoolV4(three[0],1157407400);\n    // await updateFarms()\n  // await createFarmPool();\n  // console.log('Run test: depositPool and withdrawPool');\n  // await depositAndWithdrawPool();\n  // await createVaultsPool();\n  // await depositAndWithdrawPoolV2();\n  // await createVaultsPoolV4();\n  // await depositAndWithdrawPoolV4();\n}\n\nmain()\n  .catch(err => {\n    console.error(err);\n    process.exit(-1);\n  })\n  .then(() => process.exit());\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622815253151
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/token-swap-test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/token-swap-test.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/token-swap-test.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/token-swap-test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/",
        "sourceFileName": "token-swap-test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAccounts = getAccounts;\nexports.transfer = transfer;\nexports.createFarmPool = createFarmPool;\nexports.updateFarmPool = updateFarmPool;\nexports.createVaultsPool = createVaultsPool;\nexports.updateVaultsPool = updateVaultsPool;\nexports.createVaultsPoolV4 = createVaultsPoolV4;\nexports.updateVaultsPoolV4 = updateVaultsPoolV4;\nexports.depositAndWithdrawPool = depositAndWithdrawPool;\nexports.depositAndWithdrawPoolV2 = depositAndWithdrawPoolV2;\nexports.depositAndWithdrawPoolV4 = depositAndWithdrawPoolV4;\n\nvar _web = require(\"@solana/web3.js\");\n\nvar _tweetnacl = _interopRequireDefault(require(\"tweetnacl\"));\n\nvar _splToken = require(\"@solana/spl-token\");\n\nrequire(\"crypto\");\n\nvar _tokenSwap = require(\"../client/token-swap\");\n\nvar _sendAndConfirmTransaction = require(\"../client/util/send-and-confirm-transaction\");\n\nvar _newAccountWithLamports = require(\"../client/util/new-account-with-lamports\");\n\nvar _url = require(\"../url\");\n\nvar _sleep = require(\"../client/util/sleep\");\n\nconst {\n  createHash,\n  createHmac\n} = require('crypto');\n\nlet fs = require(\"fs\");\n/**\n * @param {string} algorithm\n * @param {any} content\n *  @return {string}\n */\n\n\nconst encrypt = (algorithm, content) => {\n  let hash = createHash(algorithm);\n  hash.update(content);\n  return hash.digest('hex');\n};\n/**\n * @param {any} content\n *  @return {string}\n */\n\n\nconst sha1 = content => encrypt('sha1', content);\n/**\n * @param {any} content\n *  @return {string}\n */\n\n\nconst md5 = content => encrypt('md5', content);\n\nconst hmacMd5 = (scretKey, content) => {\n  const hmac = createHmac('md5', scretKey);\n  const up = hmac.update(content);\n  const result = up.digest('hex');\n  return result;\n};\n\nconst hmacSha256 = (scretKey, content) => {\n  const hmac = createHmac('sha256', scretKey);\n  const up = hmac.update(content);\n  let result = up.digest('hex'); // result = result;\n  // result = result.replace(/\\+/g, '%2B');\n  // console.log('result', escape(encodeURI(result)));\n\n  return result; // var crypto = require('crypto');\n  // //creating hmac object\n  // var hmac = crypto.createHmac('sha256', 'yoursecretkeyhere');\n  // //passing the data to be hashed\n  // data = hmac.update('nodejsera');\n  // //Creating the hmac in the required format\n  // gen_hmac = data.digest('hex');\n}; // The following globals are created by `createTokenSwap` and used by subsequent tests\n// Token swap\n\n\nlet tokenSwap; // authority of the token and accounts\n\nlet authority; // nonce used to generate the authority public key\n\nlet nonce; // owner of the user accounts\n// Hard-coded fee address, for testing production mode\n\nconst SWAP_PROGRAM_OWNER_FEE_ADDRESS = process.env.SWAP_PROGRAM_OWNER_FEE_ADDRESS; // Pool fees\n\nconst TRADING_FEE_NUMERATOR = 0;\nconst TRADING_FEE_DENOMINATOR = 0;\nconst OWNER_TRADING_FEE_NUMERATOR = 0;\nconst OWNER_TRADING_FEE_DENOMINATOR = 0;\nconst OWNER_WITHDRAW_FEE_NUMERATOR = 0;\nconst OWNER_WITHDRAW_FEE_DENOMINATOR = 0;\nconst HOST_FEE_NUMERATOR = 0;\nconst HOST_FEE_DENOMINATOR = 0; // curve type used to calculate swaps and deposits\n\nconst CURVE_TYPE = _tokenSwap.CurveType.ConstantProduct; // 384 ms\n//\n\nconst REWARD_PER_PLOT = 925925; // Initial amount in each swap token\n\nfunction assert(condition, message) {\n  if (!condition) {\n    console.log(Error().stack + ':token-test.js');\n    throw message || 'Assertion failed';\n  }\n}\n\nlet connection;\n\nasync function getConnection() {\n  if (connection) return connection;\n  connection = new _web.Connection(_url.url, 'recent');\n  const version = await connection.getVersion();\n  console.log('Connection to cluster established:', _url.url, version);\n  return connection;\n}\n\nfunction getOwnedAccountsFilters(publicKey) {\n  console.log(_splToken.AccountLayout);\n  return [{\n    memcmp: {\n      offset: _splToken.AccountLayout.offsetOf('mint'),\n      bytes: publicKey.toBase58()\n    }\n  }, {\n    dataSize: _splToken.AccountLayout.span\n  }];\n}\n\nasync function getAccounts(programId) {\n  farm_payer = await new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]);\n  const filters = getOwnedAccountsFilters(new _web.PublicKey(programId));\n  let connection = await getConnection();\n  const resp = await connection._rpcRequest('getProgramAccounts', [_splToken.TOKEN_PROGRAM_ID.toBase58(), {\n    commitment: connection.commitment,\n    filters\n  }]);\n  let list = resp['result'];\n  let token = new _splToken.Token(connection, new _web.PublicKey(programId), _splToken.TOKEN_PROGRAM_ID, farm_payer);\n  let arr = [];\n\n  for (let i = 0; i < list.length; i++) {\n    await (0, _sleep.sleep)(100);\n    let detail = await token.getAccountInfo(new _web.PublicKey(list[i].pubkey));\n    let amount = Number(detail.amount) / 1e9;\n\n    if (amount > 0) {\n      arr.push({\n        address: list[i].pubkey,\n        amount: detail.amount.toString()\n      });\n      console.log(i, list[i].pubkey, amount);\n    }\n  }\n\n  fs.writeFile('input.txt', JSON.stringify(arr), function (err) {\n    if (err) {\n      return console.error(err);\n    }\n\n    console.log(\"数据写入成功！\");\n    console.log(\"--------我是分割线-------------\");\n    console.log(\"读取写入的数据！\");\n    fs.readFile('input.txt', function (err, data) {\n      if (err) {\n        return console.error(err);\n      }\n\n      console.log(\"异步读取文件数据: \" + data.toString());\n    });\n  });\n  return arr;\n} //// ------------------------------- farm 挖矿逻辑 ---------------------------\n\n\nlet farmToken;\nlet farm_payer;\nlet farm_info;\nlet farmAuth;\nlet farm_mint;\nlet pool_farm_address;\nlet lp_mint;\nlet pool_lp_address;\nlet pool_fee_lp_address;\nlet farmDetail;\nlet farm_config = {\n  'name': 'SRM',\n  'poolid': '',\n  'farm': 'CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d',\n  'mintAddress': 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt'\n}; // 转账\n\nasync function transfer(from, to, mint, amount) {\n  farm_payer = await new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]);\n  const connection = await getConnection();\n  let lp = new _splToken.Token(connection, new _web.PublicKey(mint), farm_payer);\n  let to_lp = lp.getOrCreateAssociatedAccountInfo(to);\n  let mint_info = await lp.getMintInfo();\n  let base_deciaml = Math.pow(10, mint_info.decimals);\n  amount = (amount * base_deciaml).toFixed(0);\n  await lp.transfer(from, to_lp, farm_payer, [], Number(amount));\n}\n\nasync function createFarmPool(farm_config) {\n  const connection = await getConnection();\n  farm_payer = await new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]);\n  console.log('farm_config.farm', farm_config.farm);\n  farm_mint = new _splToken.Token(connection, new _web.PublicKey(farm_config.farm), _splToken.TOKEN_PROGRAM_ID, farm_payer);\n  farm_info = new _web.Account();\n  console.log('farm_config.farm', farm_config.farm);\n  [authority, nonce] = await _web.PublicKey.findProgramAddress([farm_info.publicKey.toBuffer()], _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  pool_farm_address = await farm_mint.createAccount(authority);\n  await farm_mint.transfer(new _web.PublicKey('EikSzrgHqMqEmmjMZiPqetHpSRgNDv6yQ2c99Mn1Y1Vj'), pool_farm_address, farm_payer, [], 10 * 1e9);\n  console.log('farm_config.mintAddress', farm_config.mintAddress);\n  lp_mint = new _splToken.Token(connection, new _web.PublicKey(farm_config.mintAddress), _splToken.TOKEN_PROGRAM_ID, farm_payer);\n  pool_lp_address = await lp_mint.createAccount(authority);\n  pool_fee_lp_address = await lp_mint.createAccount(farm_payer.publicKey);\n  let pool_id = null;\n  let pool_user_info = null;\n  let pool_other_info = null;\n  console.log('开始创建矿池', authority.toString(), nonce);\n  tokenSwap = await _tokenSwap.TokenSwap.createTokenFarm(new _web.PublicKey(), connection, farm_payer, _splToken.TOKEN_PROGRAM_ID, farm_info, authority, pool_farm_address, pool_lp_address, pool_fee_lp_address, pool_farm_address, pool_id, pool_user_info, pool_other_info, _tokenSwap.TOKEN_SWAP_PROGRAM_ID, nonce, TRADING_FEE_NUMERATOR, TRADING_FEE_DENOMINATOR, OWNER_TRADING_FEE_NUMERATOR, OWNER_TRADING_FEE_DENOMINATOR, OWNER_WITHDRAW_FEE_NUMERATOR, OWNER_WITHDRAW_FEE_DENOMINATOR, HOST_FEE_NUMERATOR, HOST_FEE_DENOMINATOR, REWARD_PER_PLOT, _tokenSwap.TokenFarmUserLayout.span); //\n  // console.log(\"******************************************矿池初始化成功\");\n\n  console.log('加载farm矿池');\n  farmDetail = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('******************************************普通矿池信息校验成功---------', farm_config.name);\n  console.log(\"poolId:\", \"'\" + farm_info.publicKey.toString() + \"',\");\n  console.log(\"nonce:\", \"'\" + farmDetail.nonce + \"',\");\n  console.log(\"poolAuthority:\", \"'\" + farmDetail.authority.toString() + \"',\");\n  console.log(\"poolLpTokenAccount:\", \"'\" + farmDetail.pool_lp_address.toString() + \"',\");\n  console.log(\"poolRewardTokenAccount:\", \"'\" + farmDetail.pool_farm_address.toString() + \"',\");\n  console.log(\"poolRayAddress:\", \"'\" + farmDetail.pool_ray_address.toString() + \"',\");\n  console.log(\"poolRewardTokenAccountB:\", \"'\" + farmDetail.pool_other_address.toString() + \"',\");\n  console.log(\"poolFeeAccount:\", \"'\" + farmDetail.pool_fee_lp_address.toString() + \"',\");\n  console.log(\"threePoolUserInfo:\", \"'\" + farmDetail.pool_user_info.toString() + \"',\");\n  console.log(\"TOKEN_SWAP_PROGRAM_ID:\", \"'\" + _tokenSwap.TOKEN_SWAP_PROGRAM_ID.toBase58() + \"',\");\n  return;\n}\n\nasync function updateFarmPool(farm_config, reward_per_second) {\n  const connection = await getConnection();\n  farm_payer = await new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]);\n  farm_info = new _web.PublicKey(farm_config.poolid);\n  console.log('加载farm矿池');\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  pool_farm_address = farmDetail1.pool_farm_address;\n  pool_lp_address = farmDetail1.pool_lp_address;\n  pool_fee_lp_address = farmDetail1.pool_fee_lp_address;\n  let pool_id = new _web.PublicKey();\n  let pool_user_info = farmDetail1.pool_user_info;\n  let pool_other_info = farmDetail1.pool_other_address;\n  console.log('开始更新矿池------', farm_config.name); // tokenSwap = await TokenSwap.updateTokenFarm(\n  //     new PublicKey(),\n  //     connection,\n  //     farm_payer,\n  //     TOKEN_PROGRAM_ID,\n  //     farm_info,\n  //     farmDetail1.authority,\n  //     pool_farm_address,\n  //     pool_lp_address,\n  //     pool_fee_lp_address,\n  //     pool_farm_address,\n  //     pool_id,\n  //     pool_user_info,\n  //     pool_other_info,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.nonce,\n  //     TRADING_FEE_NUMERATOR,\n  //     TRADING_FEE_DENOMINATOR,\n  //     OWNER_TRADING_FEE_NUMERATOR,\n  //     OWNER_TRADING_FEE_DENOMINATOR,\n  //     OWNER_WITHDRAW_FEE_NUMERATOR,\n  //     OWNER_WITHDRAW_FEE_DENOMINATOR,\n  //     HOST_FEE_NUMERATOR,\n  //     HOST_FEE_DENOMINATOR,\n  //     reward_per_second\n  // );\n  //\n\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  const userAccount = createUniqueAssociatedAccount(new _web.PublicKey('AG86tBRGiG3tVW4oyPnEM1151mYbBk94STwbVoTP8pDd'), farm_info);\n  const userDetail = await _tokenSwap.TokenSwap.loadTokenFarmUser(connection, userAccount.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('address', farmDetail1.pool_farm_address.toString());\n  console.log('总', farmDetail1.total_supply.toString());\n  console.log('每秒奖励', farmDetail1.reward_per_second.toString());\n  console.log('每share奖励', farmDetail1.reward_per_share.toString());\n  console.log(' user amount', userDetail.amount.toString());\n  console.log('user debt', userDetail.reward_debt.toString());\n  console.log('******************************************普通矿池信息校验成功---------', farm_config.name);\n  return;\n}\n\nlet farm_mint1;\nlet farm_info1;\nlet authority1;\nlet pool_farm1_address1;\nlet pool_farm_address1;\nlet pool_lp_address1;\nlet pool_ray_address;\nlet farm_payer1;\nlet farmDetail1;\nlet pool_fee_lp_address1;\nlet other_mint;\nlet lp_config = {\n  'name': 'RAY-USDC',\n  'farm': 'CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d',\n  'ray': '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n  // todo\n  'programid': 'EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q',\n  // ray 2币的programid\n  'poolid': '',\n  'threePoolId': '8nEWqxeDNZ2yo1izbPzY4nwR55isBZRaQk7CM8ntwUwR',\n  'thirdAuth': '6vQGZLsHgpJdqh1ER7q2q6mjZ43QwzhtTofTzb2sUhNh',\n  'thirdLpAddr': '77ujS15hjUfFZkM8QAw4HMLvMGZg95Gcm6ixjA1bnk3M',\n  'thirdRayAddr': '3ejmkn5HpXR9KdVWkai1Ngo87sQSUyKXrx8wSakipkno',\n  'mintAddress': 'BZFGfXMrjG2sS7QT2eiCDEevPFnkYYF7kzJpWfYxPbcx'\n};\n\nasync function createVaultsPool(lp_config) {\n  const connection = await getConnection();\n  farm_payer1 = await new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]); // farm v1\n\n  farm_mint1 = new _splToken.Token(connection, new _web.PublicKey(lp_config.farm), _splToken.TOKEN_PROGRAM_ID, farm_payer1); // RAY\n\n  farm_mint = new _splToken.Token(connection, new _web.PublicKey(lp_config.ray), _splToken.TOKEN_PROGRAM_ID, farm_payer1); // RAY-USDC\n\n  lp_mint = new _splToken.Token(connection, new _web.PublicKey(lp_config.mintAddress), _splToken.TOKEN_PROGRAM_ID, farm_payer1); // RAY-USDC poolid\n\n  let pool_id = new _web.PublicKey(lp_config.threePoolId); // farm_mint1 = await Token.createMint(\n  //   connection,\n  //   farm_payer,\n  //   farm_payer.publicKey,\n  //   null,\n  //   2,\n  //   TOKEN_PROGRAM_ID,\n  // );\n  // let farmAuth = await farm_mint1.createAccount(farm_payer1.publicKey)\n  // await farm_mint1.mintTo(farmAuth, farm_payer, [], 1000000)\n\n  farm_info1 = new _web.Account();\n  [authority1, nonce] = await _web.PublicKey.findProgramAddress([farm_info1.publicKey.toBuffer()], _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  pool_farm_address1 = await farm_mint1.createAccount(authority1);\n  await farm_mint1.transfer(new _web.PublicKey('EikSzrgHqMqEmmjMZiPqetHpSRgNDv6yQ2c99Mn1Y1Vj'), pool_farm_address1, farm_payer1, [], 1000 * 1e9);\n  pool_lp_address1 = await lp_mint.createAccount(authority1);\n  pool_fee_lp_address1 = await lp_mint.createAccount(farm_payer1.publicKey); // await farm_mint.transfer(farmAuth,pool_farm_address,farm_payer,[],500000);\n  // await farm_mint1.mintTo(pool_farm_address1,farm_payer,[],500000);\n\n  pool_ray_address = await farm_mint.createAccount(authority1);\n  let pool_user_info = null;\n  let pool_other_address = null;\n  let raydium_stake_program_id = new _web.PublicKey(lp_config.programid);\n  console.log('--------------------------------开始创建复投矿池-----', lp_config.name);\n  tokenSwap = await _tokenSwap.TokenSwap.createTokenFarm(raydium_stake_program_id, connection, farm_payer1, _splToken.TOKEN_PROGRAM_ID, farm_info1, authority1, pool_farm_address1, pool_lp_address1, pool_fee_lp_address1, pool_ray_address, pool_id, pool_user_info, pool_other_address, _tokenSwap.TOKEN_SWAP_PROGRAM_ID, nonce, TRADING_FEE_NUMERATOR, TRADING_FEE_DENOMINATOR, OWNER_TRADING_FEE_NUMERATOR, OWNER_TRADING_FEE_DENOMINATOR, OWNER_WITHDRAW_FEE_NUMERATOR, OWNER_WITHDRAW_FEE_DENOMINATOR, HOST_FEE_NUMERATOR, HOST_FEE_DENOMINATOR, REWARD_PER_PLOT, _tokenSwap.TokenRayUserLayout.span); //\n  // console.log(\"******************************************矿池初始化成功\");\n\n  console.log('加载复投矿池');\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info1.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('******************************************复投矿池信息校验成功---------', lp_config.name);\n  console.log(\"poolId:\", \"'\" + farm_info1.publicKey.toString() + \"',\");\n  console.log(\"poolAuthority:\", \"'\" + farmDetail1.authority.toString() + \"',\");\n  console.log(\"poolLpTokenAccount:\", \"'\" + farmDetail1.pool_lp_address.toString() + \"',\");\n  console.log(\"poolRewardTokenAccount:\", \"'\" + farmDetail1.pool_farm_address.toString() + \"',\");\n  console.log(\"poolRayAddress:\", \"'\" + farmDetail1.pool_ray_address.toString() + \"',\");\n  console.log(\"poolRewardTokenAccountB:\", \"'\" + farmDetail1.pool_other_address.toString() + \"',\");\n  console.log(\"poolFeeAccount:\", \"'\" + farmDetail1.pool_fee_lp_address.toString() + \"',\");\n  console.log(\"threePoolUserInfo:\", \"'\" + farmDetail1.pool_user_info.toString() + \"',\");\n  console.log(\"TOKEN_SWAP_PROGRAM_ID:\", \"'\" + _tokenSwap.TOKEN_SWAP_PROGRAM_ID.toBase58() + \"',\");\n}\n\nasync function updateVaultsPool(lp_config, reward_per_second) {\n  const connection = await getConnection();\n  farm_payer1 = await new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]); // RAY-USDC poolid\n\n  let pool_id = new _web.PublicKey(lp_config.threePoolId);\n  console.log('加载复投矿池');\n  farm_info1 = new _web.PublicKey(lp_config.poolid);\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info1, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  pool_farm_address1 = farmDetail1.pool_farm_address;\n  pool_lp_address1 = farmDetail1.pool_lp_address;\n  pool_fee_lp_address1 = farmDetail1.pool_fee_lp_address;\n  pool_ray_address = farmDetail1.pool_ray_address;\n  let pool_user_info = farmDetail1.pool_user_info;\n  let pool_other_address = farmDetail1.pool_other_address;\n  let raydium_stake_program_id = new _web.PublicKey(lp_config.programid);\n  console.log('--------------------------------开始更新复投矿池-----', lp_config.name); // tokenSwap = await TokenSwap.updateTokenFarm(\n  //     raydium_stake_program_id,\n  //     connection,\n  //     farm_payer1,\n  //     TOKEN_PROGRAM_ID,\n  //     farm_info1,\n  //     farmDetail1.authority,\n  //     pool_farm_address1,\n  //     pool_lp_address1,\n  //     pool_fee_lp_address1,\n  //     pool_ray_address,\n  //     pool_id,\n  //     pool_user_info,\n  //     pool_other_address,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.nonce,\n  //     TRADING_FEE_NUMERATOR,\n  //     TRADING_FEE_DENOMINATOR,\n  //     OWNER_TRADING_FEE_NUMERATOR,\n  //     OWNER_TRADING_FEE_DENOMINATOR,\n  //     OWNER_WITHDRAW_FEE_NUMERATOR,\n  //     OWNER_WITHDRAW_FEE_DENOMINATOR,\n  //     HOST_FEE_NUMERATOR,\n  //     HOST_FEE_DENOMINATOR,\n  //     reward_per_second,\n  // );\n  //\n\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info1, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  const user = createUniqueAssociatedAccount(new _web.PublicKey('AG86tBRGiG3tVW4oyPnEM1151mYbBk94STwbVoTP8pDd'), farm_info1);\n  let userInfo = await _tokenSwap.TokenSwap.loadTokenFarmUser(connection, user.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('最后更新时间', farmDetail1.last_update.toString());\n  console.log('总数', farmDetail1.total_supply.toString());\n  console.log('每秒奖励', farmDetail1.reward_per_second.toString());\n  console.log('每份额奖励', farmDetail1.reward_per_share.toString());\n  console.log('第三方id', farmDetail1.pool_id.toString());\n  console.log('reward_debt', userInfo.reward_debt.toString());\n  console.log('amount', userInfo.amount.toString());\n  console.log('******************************************复投矿池信息更新成功---------', lp_config.name);\n}\n\nlet lp_config_v4 = {\n  'name': 'KIN-RAY',\n  'farm': 'CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d',\n  'ray': '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n  'poolid': '',\n  // 'poolid':'7RFY9eMaD3nsV7EBTzVzuKBr4X4cLuDh3JaoWZTcGiJK',\n  'poolAuthority': 'q42hNDzfBDQ1WzKjxkueEtBzX1VPJ2hnikJXFjSYC91',\n  'other': 'MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb',\n  'mintAddress': 'CHT8sft3h3gpLYbCcZ9o27mT5s3Z6VifBVbUiDvprHPW',\n  'programid': 'CBuCnLe26faBpcBP2fktp4rp8abpcAnTWft6ZrP5Q4T'\n};\n\nasync function createVaultsPoolV4(lp_config_v4) {\n  const connection = await getConnection();\n  farm_payer1 = await new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]); // farm v1\n\n  farm_mint1 = new _splToken.Token(connection, new _web.PublicKey(lp_config_v4.farm), _splToken.TOKEN_PROGRAM_ID, farm_payer1); // RAY\n\n  farm_mint = new _splToken.Token(connection, new _web.PublicKey(lp_config_v4.ray), _splToken.TOKEN_PROGRAM_ID, farm_payer1); // FIDA\n\n  other_mint = new _splToken.Token(connection, new _web.PublicKey(lp_config_v4.other), _splToken.TOKEN_PROGRAM_ID, farm_payer1); // RAY-FIDA\n\n  lp_mint = new _splToken.Token(connection, new _web.PublicKey(lp_config_v4.mintAddress), _splToken.TOKEN_PROGRAM_ID, farm_payer1); // RAY-FIDA poolid\n\n  let pool_id = new _web.PublicKey(lp_config_v4.threePoolId);\n  farm_info1 = new _web.Account();\n  [authority1, nonce] = await _web.PublicKey.findProgramAddress([farm_info1.publicKey.toBuffer()], _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  pool_farm_address1 = await farm_mint1.createAccount(authority1);\n  await farm_mint1.transfer(new _web.PublicKey('EikSzrgHqMqEmmjMZiPqetHpSRgNDv6yQ2c99Mn1Y1Vj'), pool_farm_address1, farm_payer1, [], 1 * 1e9);\n  pool_lp_address1 = await lp_mint.createAccount(authority1);\n  pool_fee_lp_address1 = await lp_mint.createAccount(farm_payer1.publicKey);\n  pool_ray_address = await farm_mint.createAccount(authority1);\n  let pool_user_info = null;\n  let pool_other_address = await other_mint.createAccount(authority1);\n  let raydium_stake_program_id = new _web.PublicKey(lp_config_v4.programid);\n  console.log('--------------------------------开始创建双币复投矿池----', lp_config_v4.name);\n  tokenSwap = await _tokenSwap.TokenSwap.createTokenFarm(raydium_stake_program_id, connection, farm_payer1, _splToken.TOKEN_PROGRAM_ID, farm_info1, authority1, pool_farm_address1, pool_lp_address1, pool_fee_lp_address1, pool_ray_address, pool_id, pool_user_info, pool_other_address, _tokenSwap.TOKEN_SWAP_PROGRAM_ID, nonce, TRADING_FEE_NUMERATOR, TRADING_FEE_DENOMINATOR, OWNER_TRADING_FEE_NUMERATOR, OWNER_TRADING_FEE_DENOMINATOR, OWNER_WITHDRAW_FEE_NUMERATOR, OWNER_WITHDRAW_FEE_DENOMINATOR, HOST_FEE_NUMERATOR, HOST_FEE_DENOMINATOR, REWARD_PER_PLOT, _tokenSwap.TokenRayUserV4Layout.span);\n  console.log('加载复投矿池');\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info1.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('******************************************双币复投矿池信息校验成功---------', lp_config_v4.name);\n  console.log(\"poolId:\", \"'\" + farm_info1.publicKey.toString() + \"',\");\n  console.log(\"poolAuthority:\", \"'\" + farmDetail1.authority.toString() + \"',\");\n  console.log(\"poolLpTokenAccount:\", \"'\" + farmDetail1.pool_lp_address.toString() + \"',\");\n  console.log(\"poolRewardTokenAccount:\", \"'\" + farmDetail1.pool_farm_address.toString() + \"',\");\n  console.log(\"poolRayAddress:\", \"'\" + farmDetail1.pool_ray_address.toString() + \"',\");\n  console.log(\"poolRewardTokenAccountB:\", \"'\" + farmDetail1.pool_other_address.toString() + \"',\");\n  console.log(\"poolFeeAccount:\", \"'\" + farmDetail1.pool_fee_lp_address.toString() + \"',\");\n  console.log(\"threePoolUserInfo:\", \"'\" + farmDetail1.pool_user_info.toString() + \"',\");\n  console.log(\"TOKEN_SWAP_PROGRAM_ID:\", \"'\" + _tokenSwap.TOKEN_SWAP_PROGRAM_ID.toBase58() + \"',\");\n}\n\nasync function updateVaultsPoolV4(lp_config_v4, reward_per_second) {\n  const connection = await getConnection();\n  farm_payer1 = await new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]); // RAY-FIDA poolid\n\n  let pool_id = new _web.PublicKey(lp_config_v4.threePoolId);\n  farm_info1 = new _web.PublicKey(lp_config_v4.poolid);\n  console.log('加载双币复投矿池');\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info1, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log(\"farmDetail1.reward_per_share====================\", farmDetail1.reward_per_share.toString());\n  console.log(\"farmDetail1.reward_per_second====================\", farmDetail1.reward_per_second.toString());\n  pool_farm_address1 = farmDetail1.pool_farm_address;\n  pool_lp_address1 = farmDetail1.pool_lp_address;\n  pool_fee_lp_address1 = farmDetail1.pool_fee_lp_address;\n  pool_ray_address = farmDetail1.pool_ray_address;\n  let pool_user_info = farmDetail1.pool_user_info;\n  let pool_other_address = farmDetail1.pool_other_address;\n  let raydium_stake_program_id = new _web.PublicKey(lp_config_v4.programid);\n  console.log('--------------------------------开始更新双币复投矿池----', lp_config_v4.name); // tokenSwap = await TokenSwap.updateTokenFarm(\n  //     raydium_stake_program_id,\n  //     connection,\n  //     farm_payer1,\n  //     TOKEN_PROGRAM_ID,\n  //     farm_info1,\n  //     farmDetail1.authority,\n  //     pool_farm_address1,\n  //     pool_lp_address1,\n  //     pool_fee_lp_address1,\n  //     pool_ray_address,\n  //     pool_id,\n  //     pool_user_info,\n  //     pool_other_address,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.nonce,\n  //     TRADING_FEE_NUMERATOR,\n  //     TRADING_FEE_DENOMINATOR,\n  //     OWNER_TRADING_FEE_NUMERATOR,\n  //     OWNER_TRADING_FEE_DENOMINATOR,\n  //     OWNER_WITHDRAW_FEE_NUMERATOR,\n  //     OWNER_WITHDRAW_FEE_DENOMINATOR,\n  //     HOST_FEE_NUMERATOR,\n  //     HOST_FEE_DENOMINATOR,\n  //     reward_per_second\n  // );\n\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info1, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  const use1r = createUniqueAssociatedAccount(new _web.PublicKey('GnxeeXBom4pYCk7ejigh5bGQ8M37hXt8xikjfzrctsMo'), farm_info1);\n  let userInfo = await _tokenSwap.TokenSwap.loadTokenFarmUser(connection, use1r.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('total ', farmDetail1.total_supply.toString()); // console.log('每秒奖励 ',farmDetail1.reward_per_second.toString());\n  // console.log('每share奖励 ',farmDetail1.reward_per_share.toString());\n\n  console.log('other address ', farmDetail1.pool_other_address.toString());\n  console.log('poolid ', farmDetail1.pool_id.toString());\n  console.log('pool_user_info ', farmDetail1.pool_user_info.toString());\n  console.log('pool ', lp_config_v4.name);\n  console.log('user amount ', userInfo.amount.toString());\n  console.log('user debt ', userInfo.reward_debt.toString());\n  console.log('******************************************双币复投矿池信息更新成功---------', lp_config_v4.name);\n} // 根据用户地址和合约地址生成一个唯一地址\n\n\nfunction createUniqueAssociatedAccount(user, farm_info) {\n  let user_info_account_seed = hmacSha256(user.toBase58(), farm_info.toBase58());\n  let b = Buffer.from(user_info_account_seed);\n\n  let keyPair = _tweetnacl.default.sign.keyPair.fromSeed(b.subarray(0, 32));\n\n  return new _web.Account(keyPair.secretKey);\n} // 质押与提现\n\n\nasync function depositAndWithdrawPool(lp_config) {\n  const connection = await getConnection();\n  farm_payer1 = await new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]); // 用户A sol\n\n  const user = await (0, _newAccountWithLamports.newAccountWithLamports)(connection, 100000000000);\n  const user_lp_address = await lp_mint.createAccount(user.publicKey); // lp mint\n\n  await lp_mint.mintTo(user_lp_address, farm_payer, [], 10000);\n  let user_farm_address = await farm_mint.createAccount(user.publicKey); // 唯一生成一个关联账户 用户pubkey 与farm_info 联合唯一\n\n  let user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info.publicKey);\n  console.log(\"初始化给用户lp数量 10000 \\n 开始质押: 10000 lp\");\n  tokenSwap = await _tokenSwap.TokenSwap.depositFarm(connection, user, // 客服端钱包获取\n  farm_info.publicKey, // 常量\n  farmDetail.authority, // 通过常量获取\n  user_lp_address, // 客服端钱包获取\n  user_farm_address, // 客服端钱包获取\n  user_info_account, // 客服端钱包生成\n  farmDetail.pool_lp_address, user, // 客服端钱包获取\n  farmDetail.token_program_id, _tokenSwap.TOKEN_SWAP_PROGRAM_ID, farmDetail.pool_farm_address, farmDetail.pool_fee_lp_address, 10000); // 比对结果 账户 minA 余额理论为0\n\n  let userLpAccount = await lp_mint.getAccountInfo(user_lp_address);\n  console.log(\"用户剩余lp数量 \", userLpAccount.amount.toString());\n  assert(userLpAccount.amount == 0); // 比对结果 矿池 lp 余额理论为 10000\n\n  let poolLpAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  console.log(\"矿池剩余lp数量\", poolLpAccount.amount.toString());\n  assert(poolLpAccount.amount == 10000); // 查看\n\n  console.log(\"******************************************用户质押成功\");\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info.publicKey);\n  let userDetail = await _tokenSwap.TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('用户质押矿池 ：', userDetail.pool_id.toString());\n  console.log('用户质押金额 ：', userDetail.amount.toString());\n  assert(userDetail.amount == 10000);\n  console.log('用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  let userFarmAccount = await farm_mint.getAccountInfo(user_farm_address);\n  console.log(\"收取收益之前 用户 farm 余额\", userFarmAccount.amount.toString());\n  let poolFarmAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  (0, _sleep.sleep)(1000 * 30);\n  console.log(\"用户收取收益\"); // 收取收益\n\n  await _tokenSwap.TokenSwap.harvestFarm(connection, user, // 客服端钱包获取\n  farm_info.publicKey, // 常量\n  farmDetail.authority, // 通过常量获取\n  user_lp_address, // 客服端钱包获取\n  user_farm_address, // 客服端钱包获取\n  user_info_account, // 客服端钱包获取\n  farmDetail.pool_lp_address, user, // 客服端钱包获取\n  farmDetail.token_program_id, _tokenSwap.TOKEN_SWAP_PROGRAM_ID, farmDetail.pool_farm_address, farmDetail.pool_fee_lp_address, 0);\n  userFarmAccount = await farm_mint.getAccountInfo(user_farm_address);\n  console.log(\"收取收益之后 用户  farm 余额\", userFarmAccount.amount.toString());\n  poolFarmAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info.publicKey);\n  userDetail = await _tokenSwap.TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('收取收益之后 用户质押金额 ：', userDetail.amount.toString());\n  console.log('收取收益之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString()); // 查看\n\n  console.log(\"******************************************用户收取收益成功\");\n  console.log('开始提现');\n  tokenSwap = await _tokenSwap.TokenSwap.withdrawFarm(connection, user, // 客服端钱包获取\n  farm_info.publicKey, // 常量\n  farmDetail.authority, // 通过常量获取\n  user_lp_address, // 客服端钱包获取\n  user_farm_address, // 客服端钱包获取\n  user_info_account, // 客服端钱包生成\n  farmDetail.pool_lp_address, farmDetail.token_program_id, _tokenSwap.TOKEN_SWAP_PROGRAM_ID, farmDetail.pool_farm_address, farmDetail.pool_fee_lp_address, 10000);\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info.publicKey);\n  userDetail = await _tokenSwap.TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID); //\n\n  console.log('提现之后 用户质押金额 ：', userDetail.amount.toString()); //\n\n  assert(userDetail.amount == 0);\n  console.log('提现之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString()); //\n\n  userFarmAccount = await lp_mint.getAccountInfo(user_lp_address);\n  console.log(\"提现之后 用户 lp 余额\", userFarmAccount.amount.toString());\n  poolFarmAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  console.log(\"提现之后 矿池 lp 余额：\", poolFarmAccount.amount.toString());\n  console.log(\"******************************************用户提现成功\");\n} // 复投\n\n\nasync function depositAndWithdrawPoolV2() {\n  const connection = await getConnection(); // 用户A sol\n  // const user = await newAccountWithLamports(connection, 100000000000);\n\n  const user = new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]); // farm v1\n\n  farm_mint1 = new _splToken.Token(connection, new _web.PublicKey('CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d'), _splToken.TOKEN_PROGRAM_ID, user); // RAY\n\n  farm_mint = new _splToken.Token(connection, new _web.PublicKey('4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R'), _splToken.TOKEN_PROGRAM_ID, user); // RAY-USDC\n\n  lp_mint = new _splToken.Token(connection, new _web.PublicKey(lp_config.lp), _splToken.TOKEN_PROGRAM_ID, user); // RAY-USDC poolid\n\n  let ray_usdc_pool_id = new _web.PublicKey(lp_config.poolid); // 复投池\n\n  farm_info1 = new _web.PublicKey('DSSRNh74r7AdrVFxeWZxdXqCW6icqC84C16bhcsQayUp');\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info1, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('farm_ray_address', farmDetail1.pool_ray_address.toString()); // 自己的LP地址\n\n  const user_lp_address = new _web.PublicKey('FBGvfryiPuTCr8dATruk2d1B2eJ23agAuwZ8fia1XiZH'); //=====\n  // lp mint\n  // await lp_mint.mintTo(user_lp_address, user, [], 10000);\n  // let user_farm_address = await farm_mint1.createAccount(user.publicKey);\n\n  let user_farm_address = new _web.PublicKey('EtKp9jWCTHEUnvUPXVRAj9D25Tg8vqr3KUGoNK66Qy7X'); // let user_ray_address = await farm_mint.createAccount(user.publicKey);\n\n  let user_ray_address = new _web.PublicKey('Ceo2j3wYZiWG6mvu3uxoUQ3GBefiUNBQnzBFf9xr4s73');\n  let raydium_stake_program_id = new _web.PublicKey(lp_config.programid); // 唯一生成一个关联账户 用户pubkey 与farm_info 联合唯一\n\n  let user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1); // let user_info_account = new PublicKey('75szQsdeVhet8civkSUxZW8sXGYCDATnrBqC1mcCVU5G');\n\n  console.log(\"初始化给用户lp数量 10000 \\n 开始质押: 10000 lp\");\n  let rayUsdcFarmAuth = new _web.PublicKey(lp_config.thirdAuth);\n  let rayUsdcFarmReward = new _web.PublicKey(lp_config.thirdRayAddr);\n  let rayUsdcLp = new _web.PublicKey(lp_config.thirdLpAddr);\n  let depositAmount = 1000000; // tokenSwap = await TokenSwap.depositRaydium(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     user, // 客服端钱包获取\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     raydium_stake_program_id,\n  //     ray_usdc_pool_id,\n  //     rayUsdcFarmAuth,\n  //     farmDetail1.pool_user_info,\n  //     rayUsdcFarmReward,\n  //     rayUsdcLp,\n  //     depositAmount,\n  // );\n\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info1, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('farmDetail1', farmDetail1.reward_per_share.toString(), farmDetail1.ray_per_share.toString(), farmDetail1.last_update.toString()); // 比对结果 账户 minA 余额理论为0\n  // let userLpAccount = await lp_mint.getAccountInfo(user_lp_address);\n  // console.log(\"用户剩余lp数量 \", userLpAccount.amount.toString())\n  // assert(userLpAccount.amount == 0)\n  //\n  // // 比对结果 矿池 lp 余额理论为 10000\n  // let poolLpAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  //\n  // console.log(\"矿池剩余lp数量\", poolLpAccount.amount.toString())\n  // assert(poolLpAccount.amount == 10000)\n  // 查看\n\n  console.log(\"******************************************用户质押成功\");\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1); //\n\n  let userDetail = await _tokenSwap.TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('用户质押矿池 ：', userDetail.pool_id.toString());\n  console.log('用户质押金额 ：', userDetail.amount.toString());\n  console.log('用户理论已领取金额 ：', userDetail.reward_debt.toString()); // assert(userDetail.amount == 10000)\n  // console.log('用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  //\n  // let userFarmAccount = await farm_mint1.getAccountInfo(user_farm_address);\n  // console.log(\"收取收益之前 用户 farm 余额\", userFarmAccount.amount.toString());\n  //\n  // let poolFarmAccount = await farm_mint1.getAccountInfo(farmDetail1.pool_farm_address);\n  // console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  //\n  // let userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"收取收益之前 用户 ray 余额\", userRayAccount.amount.toString());\n  //\n  // let poolRayAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  // console.log(\"矿池ray剩余：\", poolRayAccount.amount.toString());\n  // console.log(\"用户收取收益\")\n  // // 收取收益\n  // await TokenSwap.harvestFarmV2(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1.publicKey, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     user, // 客服端钱包获取\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farm_info.publicKey,\n  //     farmDetail.authority,\n  //     farmDetail1.pool_user_info,\n  //     farmDetail.pool_farm_address,\n  //     farmDetail.pool_lp_address,\n  //     farmDetail.pool_fee_lp_address,\n  //     0,\n  // );\n  // userFarmAccount = await farm_mint1.getAccountInfo(user_farm_address);\n  // console.log(\"收取收益之后 用户  farm 余额\", userFarmAccount.amount.toString());\n  // poolFarmAccount = await farm_mint1.getAccountInfo(farmDetail1.pool_farm_address);\n  // console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  //\n  // user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1.publicKey);\n  //\n  // userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  // console.log('收取收益之后 用户质押金额 ：', userDetail.amount.toString());\n  //\n  // console.log('收取收益之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  // console.log('收取收益之后 用户理论已收取RAY奖励 ：', userDetail.ray_debt.toString());\n  //\n  //\n  // userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"收取收益之后 用户 ray 余额\", userRayAccount.amount.toString());\n  //\n  // poolRayAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  // console.log(\"矿池ray剩余：\", poolRayAccount.amount.toString());\n  //\n  // // 查看\n  // console.log(\"******************************************用户收取收益成功\");\n\n  console.log('开始提现');\n  tokenSwap = await _tokenSwap.TokenSwap.withdrawRaydium(connection, user, // 客服端钱包获取\n  farm_info1, // 常量\n  farmDetail1.authority, // 通过常量获取\n  user_lp_address, // 客服端钱包获取\n  user_farm_address, // 客服端钱包获取\n  user_info_account, // 客服端钱包生成\n  farmDetail1.pool_lp_address, farmDetail1.token_program_id, _tokenSwap.TOKEN_SWAP_PROGRAM_ID, farmDetail1.pool_farm_address, farmDetail1.pool_fee_lp_address, farmDetail1.pool_ray_address, user_ray_address, raydium_stake_program_id, ray_usdc_pool_id, rayUsdcFarmAuth, farmDetail1.pool_user_info, rayUsdcFarmReward, rayUsdcLp, 990000); // user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1.publicKey);\n  //\n  // userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  //\n  // //\n  // console.log('提现之后 用户质押金额 ：', userDetail.amount.toString());\n  //\n  // //\n  // assert(userDetail.amount == 0);\n  //\n  // console.log('提现之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  // console.log('提现之后 用户理论已收取RAY奖励 ：', userDetail.ray_debt.toString());\n  // userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"提现之后 用户 ray 余额\", userRayAccount.amount.toString());\n  // //\n  // userFarmAccount = await lp_mint.getAccountInfo(user_lp_address);\n  // console.log(\"提现之后 用户 lp 余额\", userFarmAccount.amount.toString());\n  //\n  // poolFarmAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  // console.log(\"提现之后 矿池 lp 余额：\", poolFarmAccount.amount.toString());\n\n  console.log(\"******************************************用户提现成功\");\n} // 复投\n\n\nasync function depositAndWithdrawPoolV4() {\n  const connection = await getConnection(); // 用户A sol\n  // const user = await newAccountWithLamports(connection, 100000000000);\n\n  const user = new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]); // farm v1\n\n  farm_mint1 = new _splToken.Token(connection, new _web.PublicKey('CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d'), _splToken.TOKEN_PROGRAM_ID, user); // RAY\n\n  farm_mint = new _splToken.Token(connection, new _web.PublicKey('4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R'), _splToken.TOKEN_PROGRAM_ID, user); // FIDA\n\n  other_mint = new _splToken.Token(connection, new _web.PublicKey('EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp'), _splToken.TOKEN_PROGRAM_ID, user); // RAY-FIDA\n\n  lp_mint = new _splToken.Token(connection, new _web.PublicKey('DsBuznXRTmzvEdb36Dx3aVLVo1XmH7r1PRZUFugLPTFv'), _splToken.TOKEN_PROGRAM_ID, user); // RAY-FIDA poolid\n\n  let ray_usdc_pool_id = new _web.PublicKey('8rAdapvcC5vYNLXzChMgt56s6HCQGE6Lbo469g3WRTUh'); // 复投池\n\n  farm_info1 = new _web.PublicKey('7WRRSzFES8a13so6hQAhVtpkEBtLwsdBiQH6vhgSX7KG');\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info1, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log(farmDetail1.pool_other_address.toString(), \"pool_other_address\", farmDetail1.pool_user_info.toString());\n  console.log(farmDetail1.token_program_id.toString());\n  console.log(\"farmDetail1.ray_per_share\", farmDetail1.ray_per_share.toString());\n  console.log(\"farmDetail1.ray_per_share\", farmDetail1.ray_total_supply.toString());\n  console.log(\"farmDetail1.last_update\", farmDetail1.last_update.toString()); // 自己的LP地址\n\n  const user_lp_address = new _web.PublicKey('J5kjbdzBpAmseNHirskBw1Fg9Uj4eyVK8PLzVH4ZENLB'); //=====\n  // lp mint\n  // await lp_mint.mintTo(user_lp_address, user, [], 10000);\n  // let user_farm_address = await farm_mint1.createAccount(user.publicKey);\n\n  let user_farm_address = new _web.PublicKey('FpFtrv4ZNDzdhcUvU6ekdrL88RXTYzJSzpYBEP4pyHqT'); // let user_ray_address = await farm_mint.createAccount(user.publicKey);\n\n  let user_ray_address = new _web.PublicKey('Ceo2j3wYZiWG6mvu3uxoUQ3GBefiUNBQnzBFf9xr4s73');\n  let raydium_stake_program_id = new _web.PublicKey('CBuCnLe26faBpcBP2fktp4rp8abpcAnTWft6ZrP5Q4T'); // 唯一生成一个关联账户 用户pubkey 与farm_info 联合唯一\n\n  let user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1);\n  console.log(\"初始化给用户lp数量 10000 \\n 开始质押: 10000 lp\");\n  let rayUsdcFarmAuth = new _web.PublicKey('EcCKf3mgPtL6dNNAVG4gQQtLkAoTAUdf5vzFukkrviWq');\n  let rayUsdcFarmReward = new _web.PublicKey('7vnPTB2HAXFUAV5iiVZTNHgAnVYjgXcdumbbqfeK6ugp');\n  let rayUsdcLpAccount = new _web.PublicKey('H6kzwNNg9zbgC1YBjvCN4BdebtA4NusvgUhUSDZoz8rP');\n  let depositAmount = 1000000;\n  let farm_other_address = new _web.PublicKey('EGHdQm9KGLz6nw7W4rK13DyAMMJcGP9RpzCJaXiq75kQ');\n  let user_other_address = new _web.PublicKey('GCAo54WVTuoDyqzjeSB7YQDHFDU4a5Pz6YKi9g7P2p7a'); // tokenSwap = await TokenSwap.depositRaydiumV4(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     user, // 客服端钱包获取\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     raydium_stake_program_id,\n  //     ray_usdc_pool_id,\n  //     rayUsdcFarmAuth,\n  //     farmDetail1.pool_user_info,\n  //     rayUsdcFarmReward,\n  //     rayUsdcLpAccount,\n  //     farmDetail1.pool_other_address,\n  //     farm_other_address,\n  //     user_other_address,\n  //     depositAmount,\n  // );\n  // 比对结果 账户 minA 余额理论为0\n  // let userLpAccount = await lp_mint.getAccountInfo(user_lp_address);\n  // console.log(\"用户剩余lp数量 \", userLpAccount.amount.toString())\n  // assert(userLpAccount.amount == 0)\n  //\n  // // 比对结果 矿池 lp 余额理论为 10000\n  // let poolLpAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  //\n  // console.log(\"矿池剩余lp数量\", poolLpAccount.amount.toString())\n  // assert(poolLpAccount.amount == 10000)\n  // 查看\n\n  console.log(\"******************************************用户质押成功\");\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1); //\n\n  let userDetail = await _tokenSwap.TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('用户质押矿池 ：', userDetail.pool_id.toString());\n  console.log('用户质押金额 ：', userDetail.amount.toString());\n  console.log('用户理论已领取金额 ：', userDetail.reward_debt.toString()); // assert(userDetail.amount == 10000)\n  // console.log('用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  //\n  // let userFarmAccount = await farm_mint1.getAccountInfo(user_farm_address);\n  // console.log(\"收取收益之前 用户 farm 余额\", userFarmAccount.amount.toString());\n  //\n  // let poolFarmAccount = await farm_mint1.getAccountInfo(farmDetail1.pool_farm_address);\n  // console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  //\n  // let userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"收取收益之前 用户 ray 余额\", userRayAccount.amount.toString());\n  //\n  // let poolRayAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  // console.log(\"矿池ray剩余：\", poolRayAccount.amount.toString());\n  // console.log(\"用户收取收益\")\n  // // 收取收益\n  // await TokenSwap.harvestFarmV2(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1.publicKey, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     user, // 客服端钱包获取\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farm_info.publicKey,\n  //     farmDetail.authority,\n  //     farmDetail1.pool_user_info,\n  //     farmDetail.pool_farm_address,\n  //     farmDetail.pool_lp_address,\n  //     farmDetail.pool_fee_lp_address,\n  //     0,\n  // );\n  // userFarmAccount = await farm_mint1.getAccountInfo(user_farm_address);\n  // console.log(\"收取收益之后 用户  farm 余额\", userFarmAccount.amount.toString());\n  // poolFarmAccount = await farm_mint1.getAccountInfo(farmDetail1.pool_farm_address);\n  // console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  //\n  // user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1.publicKey);\n  //\n  // userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  // console.log('收取收益之后 用户质押金额 ：', userDetail.amount.toString());\n  //\n  // console.log('收取收益之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  // console.log('收取收益之后 用户理论已收取RAY奖励 ：', userDetail.ray_debt.toString());\n  //\n  //\n  // userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"收取收益之后 用户 ray 余额\", userRayAccount.amount.toString());\n  //\n  // poolRayAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  // console.log(\"矿池ray剩余：\", poolRayAccount.amount.toString());\n  //\n  // // 查看\n  // console.log(\"******************************************用户收取收益成功\");\n\n  console.log('开始提现'); // tokenSwap = await TokenSwap.withdrawRaydiumV4(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     raydium_stake_program_id,\n  //     ray_usdc_pool_id,\n  //     rayUsdcFarmAuth,\n  //     farmDetail1.pool_user_info,\n  //     rayUsdcFarmReward,\n  //     rayUsdcLpAccount,\n  //     farmDetail1.pool_other_address,\n  //     farm_other_address,\n  //     user_other_address,\n  //     depositAmount,\n  // );\n  // user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1.publicKey);\n  //\n  // userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  //\n  // //\n  // console.log('提现之后 用户质押金额 ：', userDetail.amount.toString());\n  //\n  // //\n  // assert(userDetail.amount == 0);\n  //\n  // console.log('提现之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  // console.log('提现之后 用户理论已收取RAY奖励 ：', userDetail.ray_debt.toString());\n  // userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"提现之后 用户 ray 余额\", userRayAccount.amount.toString());\n  // //\n  // userFarmAccount = await lp_mint.getAccountInfo(user_lp_address);\n  // console.log(\"提现之后 用户 lp 余额\", userFarmAccount.amount.toString());\n  //\n  // poolFarmAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  // console.log(\"提现之后 矿池 lp 余额：\", poolFarmAccount.amount.toString());\n\n  console.log(\"******************************************用户提现成功\");\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "token-swap-test.js"
      ],
      "names": [
        "createHash",
        "createHmac",
        "require",
        "fs",
        "encrypt",
        "algorithm",
        "content",
        "hash",
        "update",
        "digest",
        "sha1",
        "md5",
        "hmacMd5",
        "scretKey",
        "hmac",
        "up",
        "result",
        "hmacSha256",
        "tokenSwap",
        "authority",
        "nonce",
        "SWAP_PROGRAM_OWNER_FEE_ADDRESS",
        "process",
        "env",
        "TRADING_FEE_NUMERATOR",
        "TRADING_FEE_DENOMINATOR",
        "OWNER_TRADING_FEE_NUMERATOR",
        "OWNER_TRADING_FEE_DENOMINATOR",
        "OWNER_WITHDRAW_FEE_NUMERATOR",
        "OWNER_WITHDRAW_FEE_DENOMINATOR",
        "HOST_FEE_NUMERATOR",
        "HOST_FEE_DENOMINATOR",
        "CURVE_TYPE",
        "CurveType",
        "ConstantProduct",
        "REWARD_PER_PLOT",
        "assert",
        "condition",
        "message",
        "console",
        "log",
        "Error",
        "stack",
        "connection",
        "getConnection",
        "Connection",
        "url",
        "version",
        "getVersion",
        "getOwnedAccountsFilters",
        "publicKey",
        "AccountLayout",
        "memcmp",
        "offset",
        "offsetOf",
        "bytes",
        "toBase58",
        "dataSize",
        "span",
        "getAccounts",
        "programId",
        "farm_payer",
        "Account",
        "filters",
        "PublicKey",
        "resp",
        "_rpcRequest",
        "TOKEN_PROGRAM_ID",
        "commitment",
        "list",
        "token",
        "Token",
        "arr",
        "i",
        "length",
        "detail",
        "getAccountInfo",
        "pubkey",
        "amount",
        "Number",
        "push",
        "address",
        "toString",
        "writeFile",
        "JSON",
        "stringify",
        "err",
        "error",
        "readFile",
        "data",
        "farmToken",
        "farm_info",
        "farmAuth",
        "farm_mint",
        "pool_farm_address",
        "lp_mint",
        "pool_lp_address",
        "pool_fee_lp_address",
        "farmDetail",
        "farm_config",
        "transfer",
        "from",
        "to",
        "mint",
        "lp",
        "to_lp",
        "getOrCreateAssociatedAccountInfo",
        "mint_info",
        "getMintInfo",
        "base_deciaml",
        "Math",
        "pow",
        "decimals",
        "toFixed",
        "createFarmPool",
        "farm",
        "findProgramAddress",
        "toBuffer",
        "TOKEN_SWAP_PROGRAM_ID",
        "createAccount",
        "mintAddress",
        "pool_id",
        "pool_user_info",
        "pool_other_info",
        "TokenSwap",
        "createTokenFarm",
        "TokenFarmUserLayout",
        "loadTokenFarm",
        "name",
        "pool_ray_address",
        "pool_other_address",
        "updateFarmPool",
        "reward_per_second",
        "poolid",
        "farmDetail1",
        "userAccount",
        "createUniqueAssociatedAccount",
        "userDetail",
        "loadTokenFarmUser",
        "total_supply",
        "reward_per_share",
        "reward_debt",
        "farm_mint1",
        "farm_info1",
        "authority1",
        "pool_farm1_address1",
        "pool_farm_address1",
        "pool_lp_address1",
        "farm_payer1",
        "pool_fee_lp_address1",
        "other_mint",
        "lp_config",
        "createVaultsPool",
        "ray",
        "threePoolId",
        "raydium_stake_program_id",
        "programid",
        "TokenRayUserLayout",
        "updateVaultsPool",
        "user",
        "userInfo",
        "last_update",
        "lp_config_v4",
        "createVaultsPoolV4",
        "other",
        "TokenRayUserV4Layout",
        "updateVaultsPoolV4",
        "use1r",
        "user_info_account_seed",
        "b",
        "Buffer",
        "keyPair",
        "nacl",
        "sign",
        "fromSeed",
        "subarray",
        "secretKey",
        "depositAndWithdrawPool",
        "user_lp_address",
        "mintTo",
        "user_farm_address",
        "user_info_account",
        "depositFarm",
        "token_program_id",
        "userLpAccount",
        "poolLpAccount",
        "userFarmAccount",
        "poolFarmAccount",
        "harvestFarm",
        "withdrawFarm",
        "depositAndWithdrawPoolV2",
        "ray_usdc_pool_id",
        "user_ray_address",
        "rayUsdcFarmAuth",
        "thirdAuth",
        "rayUsdcFarmReward",
        "thirdRayAddr",
        "rayUsdcLp",
        "thirdLpAddr",
        "depositAmount",
        "ray_per_share",
        "withdrawRaydium",
        "depositAndWithdrawPoolV4",
        "ray_total_supply",
        "rayUsdcLpAccount",
        "farm_other_address",
        "user_other_address"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;AAEA;;AAKA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACA,MAAM;AAAEA,EAAAA,UAAF;AAAcC,EAAAA;AAAd,IAA6BC,OAAO,CAAC,QAAD,CAA1C;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,OAAO,GAAG,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AACtC,MAAIC,IAAI,GAAGP,UAAU,CAACK,SAAD,CAArB;AACAE,EAAAA,IAAI,CAACC,MAAL,CAAYF,OAAZ;AACA,SAAOC,IAAI,CAACE,MAAL,CAAY,KAAZ,CAAP;AACD,CAJD;AAKA;AACA;AACA;AACA;;;AACA,MAAMC,IAAI,GAAIJ,OAAD,IAAaF,OAAO,CAAC,MAAD,EAASE,OAAT,CAAjC;AACA;AACA;AACA;AACA;;;AACA,MAAMK,GAAG,GAAIL,OAAD,IAAaF,OAAO,CAAC,KAAD,EAAQE,OAAR,CAAhC;;AAIA,MAAMM,OAAO,GAAG,CAACC,QAAD,EAAWP,OAAX,KAAuB;AACrC,QAAMQ,IAAI,GAAGb,UAAU,CAAC,KAAD,EAAQY,QAAR,CAAvB;AACA,QAAME,EAAE,GAAGD,IAAI,CAACN,MAAL,CAAYF,OAAZ,CAAX;AACA,QAAMU,MAAM,GAAGD,EAAE,CAACN,MAAH,CAAU,KAAV,CAAf;AACA,SAAOO,MAAP;AACD,CALD;;AAOA,MAAMC,UAAU,GAAG,CAACJ,QAAD,EAAWP,OAAX,KAAuB;AACxC,QAAMQ,IAAI,GAAGb,UAAU,CAAC,QAAD,EAAWY,QAAX,CAAvB;AACA,QAAME,EAAE,GAAGD,IAAI,CAACN,MAAL,CAAYF,OAAZ,CAAX;AAEA,MAAIU,MAAM,GAAGD,EAAE,CAACN,MAAH,CAAU,KAAV,CAAb,CAJwC,CAKxC;AACA;AACA;;AACA,SAAOO,MAAP,CARwC,CAWxC;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAlBD,C,CAmBA;AACA;;;AACA,IAAIE,SAAJ,C,CACA;;AACA,IAAIC,SAAJ,C,CACA;;AACA,IAAIC,KAAJ,C,CACA;AAEA;;AACA,MAAMC,8BAA8B,GAClCC,OAAO,CAACC,GAAR,CAAYF,8BADd,C,CAGA;;AACA,MAAMG,qBAAqB,GAAG,CAA9B;AACA,MAAMC,uBAAuB,GAAG,CAAhC;AACA,MAAMC,2BAA2B,GAAG,CAApC;AACA,MAAMC,6BAA6B,GAAG,CAAtC;AACA,MAAMC,4BAA4B,GAAG,CAArC;AACA,MAAMC,8BAA8B,GAAG,CAAvC;AACA,MAAMC,kBAAkB,GAAG,CAA3B;AACA,MAAMC,oBAAoB,GAAG,CAA7B,C,CAEA;;AACA,MAAMC,UAAU,GAAGC,qBAAUC,eAA7B,C,CACA;AACA;;AACA,MAAMC,eAAe,GAAG,MAAxB,C,CAEA;;AAEA,SAASC,MAAT,CAAgBC,SAAhB,EAA2BC,OAA3B,EAAoC;AAClC,MAAI,CAACD,SAAL,EAAgB;AACdE,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,GAAGC,KAAR,GAAgB,gBAA5B;AACA,UAAMJ,OAAO,IAAI,kBAAjB;AACD;AACF;;AAED,IAAIK,UAAJ;;AACA,eAAeC,aAAf,GAAoD;AAClD,MAAID,UAAJ,EAAgB,OAAOA,UAAP;AAEhBA,EAAAA,UAAU,GAAG,IAAIE,eAAJ,CAAeC,QAAf,EAAoB,QAApB,CAAb;AACA,QAAMC,OAAO,GAAG,MAAMJ,UAAU,CAACK,UAAX,EAAtB;AAEAT,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDM,QAAlD,EAAuDC,OAAvD;AACA,SAAOJ,UAAP;AACD;;AAED,SAASM,uBAAT,CAAiCC,SAAjC,EAAsD;AACpDX,EAAAA,OAAO,CAACC,GAAR,CAAYW,uBAAZ;AACA,SAAO,CACL;AACEC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAEF,wBAAcG,QAAd,CAAuB,MAAvB,CADF;AAENC,MAAAA,KAAK,EAAEL,SAAS,CAACM,QAAV;AAFD;AADV,GADK,EAOL;AACEC,IAAAA,QAAQ,EAAEN,wBAAcO;AAD1B,GAPK,CAAP;AAWD;;AAEM,eAAeC,WAAf,CAA2BC,SAA3B,EAAqC;AAC1CC,EAAAA,UAAU,GAAG,MAAM,IAAIC,YAAJ,CAAY,CAAC,EAAD,EAAI,EAAJ,EAAO,GAAP,EAAW,EAAX,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,EAA0B,GAA1B,EAA8B,GAA9B,EAAkC,GAAlC,EAAsC,GAAtC,EAA0C,EAA1C,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,EAAzD,EAA4D,GAA5D,EAAgE,EAAhE,EAAmE,GAAnE,EAAuE,GAAvE,EAA2E,EAA3E,EAA8E,GAA9E,EAAkF,GAAlF,EAAsF,GAAtF,EAA0F,GAA1F,EAA8F,GAA9F,EAAkG,GAAlG,EAAsG,EAAtG,EAAyG,EAAzG,EAA4G,GAA5G,EAAgH,GAAhH,EAAoH,EAApH,EAAuH,GAAvH,EAA2H,EAA3H,EAA8H,GAA9H,EAAkI,GAAlI,EAAsI,GAAtI,EAA0I,GAA1I,EAA8I,GAA9I,EAAkJ,GAAlJ,EAAsJ,CAAtJ,EAAwJ,GAAxJ,EAA4J,GAA5J,EAAgK,GAAhK,EAAoK,GAApK,EAAwK,GAAxK,EAA4K,EAA5K,EAA+K,EAA/K,EAAkL,GAAlL,EAAsL,GAAtL,EAA0L,GAA1L,EAA8L,GAA9L,EAAkM,GAAlM,EAAsM,GAAtM,EAA0M,EAA1M,EAA6M,GAA7M,EAAiN,GAAjN,EAAqN,GAArN,EAAyN,GAAzN,EAA6N,GAA7N,EAAiO,EAAjO,EAAoO,EAApO,EAAuO,GAAvO,EAA2O,GAA3O,CAAZ,CAAnB;AACA,QAAMC,OAAO,GAAGd,uBAAuB,CAAC,IAAIe,cAAJ,CAAcJ,SAAd,CAAD,CAAvC;AACA,MAAIjB,UAAU,GAAG,MAAMC,aAAa,EAApC;AAEA,QAAMqB,IAAI,GAAG,MAAMtB,UAAU,CAACuB,WAAX,CAAuB,oBAAvB,EAA6C,CAC9DC,2BAAiBX,QAAjB,EAD8D,EAE9D;AACEY,IAAAA,UAAU,EAACzB,UAAU,CAACyB,UADxB;AAEEL,IAAAA;AAFF,GAF8D,CAA7C,CAAnB;AAOA,MAAIM,IAAI,GAAGJ,IAAI,CAAC,QAAD,CAAf;AACA,MAAIK,KAAK,GAAG,IAAIC,eAAJ,CAAU5B,UAAV,EAAqB,IAAIqB,cAAJ,CAAcJ,SAAd,CAArB,EAA8CO,0BAA9C,EAA+DN,UAA/D,CAAZ;AACA,MAAIW,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAeA,CAAC,GAACJ,IAAI,CAACK,MAAtB,EAA6BD,CAAC,EAA9B,EAAiC;AAC/B,UAAM,kBAAM,GAAN,CAAN;AACA,QAAIE,MAAM,GAAG,MAAML,KAAK,CAACM,cAAN,CAAqB,IAAIZ,cAAJ,CAAcK,IAAI,CAACI,CAAD,CAAJ,CAAQI,MAAtB,CAArB,CAAnB;AACA,QAAIC,MAAM,GAAGC,MAAM,CAACJ,MAAM,CAACG,MAAR,CAAN,GAAwB,GAArC;;AACA,QAAIA,MAAM,GAAG,CAAb,EAAe;AACbN,MAAAA,GAAG,CAACQ,IAAJ,CAAS;AACPC,QAAAA,OAAO,EAAGZ,IAAI,CAACI,CAAD,CAAJ,CAAQI,MADX;AAEPC,QAAAA,MAAM,EAAGH,MAAM,CAACG,MAAP,CAAcI,QAAd;AAFF,OAAT;AAIA3C,MAAAA,OAAO,CAACC,GAAR,CAAYiC,CAAZ,EAAcJ,IAAI,CAACI,CAAD,CAAJ,CAAQI,MAAtB,EAA6BC,MAA7B;AACD;AACF;;AACD3E,EAAAA,EAAE,CAACgF,SAAH,CAAa,WAAb,EAA0BC,IAAI,CAACC,SAAL,CAAeb,GAAf,CAA1B,EAAgD,UAASc,GAAT,EAAc;AAC5D,QAAIA,GAAJ,EAAS;AACP,aAAO/C,OAAO,CAACgD,KAAR,CAAcD,GAAd,CAAP;AACD;;AACD/C,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACArC,IAAAA,EAAE,CAACqF,QAAH,CAAY,WAAZ,EAAyB,UAAUF,GAAV,EAAeG,IAAf,EAAqB;AAC5C,UAAIH,GAAJ,EAAS;AACP,eAAO/C,OAAO,CAACgD,KAAR,CAAcD,GAAd,CAAP;AACD;;AACD/C,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeiD,IAAI,CAACP,QAAL,EAA3B;AACD,KALD;AAMD,GAbD;AAcA,SAAOV,GAAP;AACD,C,CAED;;;AACA,IAAIkB,SAAJ;AACA,IAAI7B,UAAJ;AACA,IAAI8B,SAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,iBAAJ;AACA,IAAIC,OAAJ;AACA,IAAIC,eAAJ;AACA,IAAIC,mBAAJ;AACA,IAAIC,UAAJ;AACA,IAAIC,WAAW,GAAG;AAChB,UAAO,KADS;AAEhB,YAAS,EAFO;AAGhB,UAAO,8CAHS;AAIhB,iBAAc;AAJE,CAAlB,C,CAMA;;AACO,eAAeC,QAAf,CAAwBC,IAAxB,EAA6BC,EAA7B,EAAgCC,IAAhC,EAAqCzB,MAArC,EAA6C;AAClDjB,EAAAA,UAAU,GAAG,MAAM,IAAIC,YAAJ,CAAY,CAAC,EAAD,EAAI,EAAJ,EAAO,GAAP,EAAW,EAAX,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,EAA0B,GAA1B,EAA8B,GAA9B,EAAkC,GAAlC,EAAsC,GAAtC,EAA0C,EAA1C,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,EAAzD,EAA4D,GAA5D,EAAgE,EAAhE,EAAmE,GAAnE,EAAuE,GAAvE,EAA2E,EAA3E,EAA8E,GAA9E,EAAkF,GAAlF,EAAsF,GAAtF,EAA0F,GAA1F,EAA8F,GAA9F,EAAkG,GAAlG,EAAsG,EAAtG,EAAyG,EAAzG,EAA4G,GAA5G,EAAgH,GAAhH,EAAoH,EAApH,EAAuH,GAAvH,EAA2H,EAA3H,EAA8H,GAA9H,EAAkI,GAAlI,EAAsI,GAAtI,EAA0I,GAA1I,EAA8I,GAA9I,EAAkJ,GAAlJ,EAAsJ,CAAtJ,EAAwJ,GAAxJ,EAA4J,GAA5J,EAAgK,GAAhK,EAAoK,GAApK,EAAwK,GAAxK,EAA4K,EAA5K,EAA+K,EAA/K,EAAkL,GAAlL,EAAsL,GAAtL,EAA0L,GAA1L,EAA8L,GAA9L,EAAkM,GAAlM,EAAsM,GAAtM,EAA0M,EAA1M,EAA6M,GAA7M,EAAiN,GAAjN,EAAqN,GAArN,EAAyN,GAAzN,EAA6N,GAA7N,EAAiO,EAAjO,EAAoO,EAApO,EAAuO,GAAvO,EAA2O,GAA3O,CAAZ,CAAnB;AACA,QAAMnB,UAAU,GAAG,MAAMC,aAAa,EAAtC;AACA,MAAI4D,EAAE,GAAG,IAAIjC,eAAJ,CAAU5B,UAAV,EAAqB,IAAIqB,cAAJ,CAAcuC,IAAd,CAArB,EAAyC1C,UAAzC,CAAT;AACA,MAAI4C,KAAK,GAAGD,EAAE,CAACE,gCAAH,CAAoCJ,EAApC,CAAZ;AACA,MAAIK,SAAS,GAAG,MAAMH,EAAE,CAACI,WAAH,EAAtB;AACA,MAAIC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAYJ,SAAS,CAACK,QAAtB,CAAnB;AACAlC,EAAAA,MAAM,GAAG,CAACA,MAAM,GAAC+B,YAAR,EAAsBI,OAAtB,CAA8B,CAA9B,CAAT;AACA,QAAMT,EAAE,CAACJ,QAAH,CAAYC,IAAZ,EAAiBI,KAAjB,EAAuB5C,UAAvB,EAAkC,EAAlC,EAAqCkB,MAAM,CAACD,MAAD,CAA3C,CAAN;AACD;;AACM,eAAeoC,cAAf,CAA8Bf,WAA9B,EAA0D;AAE/D,QAAMxD,UAAU,GAAG,MAAMC,aAAa,EAAtC;AACAiB,EAAAA,UAAU,GAAG,MAAM,IAAIC,YAAJ,CAAY,CAAC,EAAD,EAAI,EAAJ,EAAO,GAAP,EAAW,EAAX,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,EAA0B,GAA1B,EAA8B,GAA9B,EAAkC,GAAlC,EAAsC,GAAtC,EAA0C,EAA1C,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,EAAzD,EAA4D,GAA5D,EAAgE,EAAhE,EAAmE,GAAnE,EAAuE,GAAvE,EAA2E,EAA3E,EAA8E,GAA9E,EAAkF,GAAlF,EAAsF,GAAtF,EAA0F,GAA1F,EAA8F,GAA9F,EAAkG,GAAlG,EAAsG,EAAtG,EAAyG,EAAzG,EAA4G,GAA5G,EAAgH,GAAhH,EAAoH,EAApH,EAAuH,GAAvH,EAA2H,EAA3H,EAA8H,GAA9H,EAAkI,GAAlI,EAAsI,GAAtI,EAA0I,GAA1I,EAA8I,GAA9I,EAAkJ,GAAlJ,EAAsJ,CAAtJ,EAAwJ,GAAxJ,EAA4J,GAA5J,EAAgK,GAAhK,EAAoK,GAApK,EAAwK,GAAxK,EAA4K,EAA5K,EAA+K,EAA/K,EAAkL,GAAlL,EAAsL,GAAtL,EAA0L,GAA1L,EAA8L,GAA9L,EAAkM,GAAlM,EAAsM,GAAtM,EAA0M,EAA1M,EAA6M,GAA7M,EAAiN,GAAjN,EAAqN,GAArN,EAAyN,GAAzN,EAA6N,GAA7N,EAAiO,EAAjO,EAAoO,EAApO,EAAuO,GAAvO,EAA2O,GAA3O,CAAZ,CAAnB;AACAvB,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+B2D,WAAW,CAACgB,IAA3C;AACAtB,EAAAA,SAAS,GAAG,IAAItB,eAAJ,CAAU5B,UAAV,EAAqB,IAAIqB,cAAJ,CAAcmC,WAAW,CAACgB,IAA1B,CAArB,EAAqDhD,0BAArD,EAAsEN,UAAtE,CAAZ;AACA8B,EAAAA,SAAS,GAAG,IAAI7B,YAAJ,EAAZ;AACAvB,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+B2D,WAAW,CAACgB,IAA3C;AACA,GAAChG,SAAD,EAAYC,KAAZ,IAAqB,MAAM4C,eAAUoD,kBAAV,CACzB,CAACzB,SAAS,CAACzC,SAAV,CAAoBmE,QAApB,EAAD,CADyB,EAEzBC,gCAFyB,CAA3B;AAIAxB,EAAAA,iBAAiB,GAAG,MAAMD,SAAS,CAAC0B,aAAV,CAAwBpG,SAAxB,CAA1B;AACA,QAAM0E,SAAS,CAACO,QAAV,CAAmB,IAAIpC,cAAJ,CAAc,8CAAd,CAAnB,EAAiF8B,iBAAjF,EAAmGjC,UAAnG,EAA8G,EAA9G,EAAiH,KAAG,GAApH,CAAN;AACAtB,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsC2D,WAAW,CAACqB,WAAlD;AACAzB,EAAAA,OAAO,GAAG,IAAIxB,eAAJ,CAAU5B,UAAV,EAAqB,IAAIqB,cAAJ,CAAcmC,WAAW,CAACqB,WAA1B,CAArB,EAA4DrD,0BAA5D,EAA6EN,UAA7E,CAAV;AACAmC,EAAAA,eAAe,GAAG,MAAMD,OAAO,CAACwB,aAAR,CAAsBpG,SAAtB,CAAxB;AACA8E,EAAAA,mBAAmB,GAAG,MAAMF,OAAO,CAACwB,aAAR,CAAsB1D,UAAU,CAACX,SAAjC,CAA5B;AACA,MAAIuE,OAAO,GAAG,IAAd;AACA,MAAIC,cAAc,GAAG,IAArB;AACA,MAAIC,eAAe,GAAG,IAAtB;AACApF,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBrB,SAAS,CAAC+D,QAAV,EAArB,EAA0C9D,KAA1C;AACAF,EAAAA,SAAS,GAAG,MAAM0G,qBAAUC,eAAV,CACd,IAAI7D,cAAJ,EADc,EAEdrB,UAFc,EAGdkB,UAHc,EAIdM,0BAJc,EAKdwB,SALc,EAMdxE,SANc,EAOd2E,iBAPc,EAQdE,eARc,EASdC,mBATc,EAUdH,iBAVc,EAWd2B,OAXc,EAYdC,cAZc,EAadC,eAbc,EAcdL,gCAdc,EAedlG,KAfc,EAgBdI,qBAhBc,EAiBdC,uBAjBc,EAkBdC,2BAlBc,EAmBdC,6BAnBc,EAoBdC,4BApBc,EAqBdC,8BArBc,EAsBdC,kBAtBc,EAuBdC,oBAvBc,EAwBdI,eAxBc,EAyBd2F,+BAAoBpE,IAzBN,CAAlB,CAtB+D,CAiD/D;AACA;;AAEAnB,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEA0D,EAAAA,UAAU,GAAG,MAAM0B,qBAAUG,aAAV,CACjBpF,UADiB,EAEjBgD,SAAS,CAACzC,SAFO,EAGjBoE,gCAHiB,CAAnB;AAMA/E,EAAAA,OAAO,CAACC,GAAR,CAAY,+DAAZ,EAA4E2D,WAAW,CAAC6B,IAAxF;AACAzF,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,MAAImD,SAAS,CAACzC,SAAV,CAAoBgC,QAApB,EAAJ,GAAmC,IAA1D;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,MAAI0D,UAAU,CAAC9E,KAAf,GAAqB,IAA3C;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,MAAI0D,UAAU,CAAC/E,SAAX,CAAqB+D,QAArB,EAAJ,GAAoC,IAAlE;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,MAAI0D,UAAU,CAACF,eAAX,CAA2Bd,QAA3B,EAAJ,GAA0C,IAA7E;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC,MAAI0D,UAAU,CAACJ,iBAAX,CAA6BZ,QAA7B,EAAJ,GAA4C,IAAnF;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,MAAI0D,UAAU,CAAC+B,gBAAX,CAA4B/C,QAA5B,EAAJ,GAA2C,IAA1E;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwC,MAAI0D,UAAU,CAACgC,kBAAX,CAA8BhD,QAA9B,EAAJ,GAA6C,IAArF;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,MAAI0D,UAAU,CAACD,mBAAX,CAA+Bf,QAA/B,EAAJ,GAA8C,IAA7E;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,MAAI0D,UAAU,CAACwB,cAAX,CAA0BxC,QAA1B,EAAJ,GAAyC,IAA3E;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC,MAAI8E,iCAAsB9D,QAAtB,EAAJ,GAAqC,IAA3E;AACA;AACD;;AACM,eAAe2E,cAAf,CAA8BhC,WAA9B,EAA0CiC,iBAA1C,EAA4E;AACjF,QAAMzF,UAAU,GAAG,MAAMC,aAAa,EAAtC;AACAiB,EAAAA,UAAU,GAAG,MAAM,IAAIC,YAAJ,CAAY,CAAC,EAAD,EAAI,EAAJ,EAAO,GAAP,EAAW,EAAX,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,EAA0B,GAA1B,EAA8B,GAA9B,EAAkC,GAAlC,EAAsC,GAAtC,EAA0C,EAA1C,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,EAAzD,EAA4D,GAA5D,EAAgE,EAAhE,EAAmE,GAAnE,EAAuE,GAAvE,EAA2E,EAA3E,EAA8E,GAA9E,EAAkF,GAAlF,EAAsF,GAAtF,EAA0F,GAA1F,EAA8F,GAA9F,EAAkG,GAAlG,EAAsG,EAAtG,EAAyG,EAAzG,EAA4G,GAA5G,EAAgH,GAAhH,EAAoH,EAApH,EAAuH,GAAvH,EAA2H,EAA3H,EAA8H,GAA9H,EAAkI,GAAlI,EAAsI,GAAtI,EAA0I,GAA1I,EAA8I,GAA9I,EAAkJ,GAAlJ,EAAsJ,CAAtJ,EAAwJ,GAAxJ,EAA4J,GAA5J,EAAgK,GAAhK,EAAoK,GAApK,EAAwK,GAAxK,EAA4K,EAA5K,EAA+K,EAA/K,EAAkL,GAAlL,EAAsL,GAAtL,EAA0L,GAA1L,EAA8L,GAA9L,EAAkM,GAAlM,EAAsM,GAAtM,EAA0M,EAA1M,EAA6M,GAA7M,EAAiN,GAAjN,EAAqN,GAArN,EAAyN,GAAzN,EAA6N,GAA7N,EAAiO,EAAjO,EAAoO,EAApO,EAAuO,GAAvO,EAA2O,GAA3O,CAAZ,CAAnB;AACA6B,EAAAA,SAAS,GAAG,IAAI3B,cAAJ,CAAcmC,WAAW,CAACkC,MAA1B,CAAZ;AACA9F,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA8F,EAAAA,WAAW,GAAG,MAAMV,qBAAUG,aAAV,CAChBpF,UADgB,EAEhBgD,SAFgB,EAGhB2B,gCAHgB,CAApB;AAKAxB,EAAAA,iBAAiB,GAAGwC,WAAW,CAACxC,iBAAhC;AACAE,EAAAA,eAAe,GAAGsC,WAAW,CAACtC,eAA9B;AACAC,EAAAA,mBAAmB,GAAGqC,WAAW,CAACrC,mBAAlC;AACA,MAAIwB,OAAO,GAAG,IAAIzD,cAAJ,EAAd;AACA,MAAI0D,cAAc,GAAGY,WAAW,CAACZ,cAAjC;AACA,MAAIC,eAAe,GAAGW,WAAW,CAACJ,kBAAlC;AACA3F,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B2D,WAAW,CAAC6B,IAAvC,EAhBiF,CAiBjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAM,EAAAA,WAAW,GAAG,MAAMV,qBAAUG,aAAV,CAChBpF,UADgB,EAEhBgD,SAFgB,EAGhB2B,gCAHgB,CAApB;AAKA,QAAMiB,WAAW,GAAGC,6BAA6B,CAAC,IAAIxE,cAAJ,CAAc,8CAAd,CAAD,EAA+D2B,SAA/D,CAAjD;AACA,QAAM8C,UAAU,GAAG,MAAMb,qBAAUc,iBAAV,CACrB/F,UADqB,EAErB4F,WAAW,CAACrF,SAFS,EAGrBoE,gCAHqB,CAAzB;AAKA/E,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsB8F,WAAW,CAACxC,iBAAZ,CAA8BZ,QAA9B,EAAtB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgB8F,WAAW,CAACK,YAAZ,CAAyBzD,QAAzB,EAAhB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmB8F,WAAW,CAACF,iBAAZ,CAA8BlD,QAA9B,EAAnB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuB8F,WAAW,CAACM,gBAAZ,CAA6B1D,QAA7B,EAAvB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BiG,UAAU,CAAC3D,MAAX,CAAkBI,QAAlB,EAA3B;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBiG,UAAU,CAACI,WAAX,CAAuB3D,QAAvB,EAAxB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,+DAAZ,EAA4E2D,WAAW,CAAC6B,IAAxF;AACA;AACD;;AACD,IAAIc,UAAJ;AACA,IAAIC,UAAJ;AACA,IAAIC,UAAJ;AACA,IAAIC,mBAAJ;AACA,IAAIC,kBAAJ;AACA,IAAIC,gBAAJ;AACA,IAAIlB,gBAAJ;AACA,IAAImB,WAAJ;AACA,IAAId,WAAJ;AACA,IAAIe,oBAAJ;AACA,IAAIC,UAAJ;AACA,IAAIC,SAAS,GAAG;AACd,UAAO,UADO;AAEd,UAAO,8CAFO;AAGd,SAAM,8CAHQ;AAId;AACA,eAAY,8CALE;AAK8C;AAC5D,YAAS,EANK;AAOd,iBAAc,8CAPA;AAQd,eAAY,8CARE;AASd,iBAAc,8CATA;AAUd,kBAAe,8CAVD;AAWd,iBAAc;AAXA,CAAhB;;AAaO,eAAeC,gBAAf,CAAgCD,SAAhC,EAA0D;AAC/D,QAAM5G,UAAU,GAAG,MAAMC,aAAa,EAAtC;AACAwG,EAAAA,WAAW,GAAG,MAAM,IAAItF,YAAJ,CAAY,CAAC,EAAD,EAAI,EAAJ,EAAO,GAAP,EAAW,EAAX,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,EAA0B,GAA1B,EAA8B,GAA9B,EAAkC,GAAlC,EAAsC,GAAtC,EAA0C,EAA1C,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,EAAzD,EAA4D,GAA5D,EAAgE,EAAhE,EAAmE,GAAnE,EAAuE,GAAvE,EAA2E,EAA3E,EAA8E,GAA9E,EAAkF,GAAlF,EAAsF,GAAtF,EAA0F,GAA1F,EAA8F,GAA9F,EAAkG,GAAlG,EAAsG,EAAtG,EAAyG,EAAzG,EAA4G,GAA5G,EAAgH,GAAhH,EAAoH,EAApH,EAAuH,GAAvH,EAA2H,EAA3H,EAA8H,GAA9H,EAAkI,GAAlI,EAAsI,GAAtI,EAA0I,GAA1I,EAA8I,GAA9I,EAAkJ,GAAlJ,EAAsJ,CAAtJ,EAAwJ,GAAxJ,EAA4J,GAA5J,EAAgK,GAAhK,EAAoK,GAApK,EAAwK,GAAxK,EAA4K,EAA5K,EAA+K,EAA/K,EAAkL,GAAlL,EAAsL,GAAtL,EAA0L,GAA1L,EAA8L,GAA9L,EAAkM,GAAlM,EAAsM,GAAtM,EAA0M,EAA1M,EAA6M,GAA7M,EAAiN,GAAjN,EAAqN,GAArN,EAAyN,GAAzN,EAA6N,GAA7N,EAAiO,EAAjO,EAAoO,EAApO,EAAuO,GAAvO,EAA2O,GAA3O,CAAZ,CAApB,CAF+D,CAG/D;;AACAgF,EAAAA,UAAU,GAAG,IAAIvE,eAAJ,CAAU5B,UAAV,EAAqB,IAAIqB,cAAJ,CAAcuF,SAAS,CAACpC,IAAxB,CAArB,EAAmDhD,0BAAnD,EAAoEiF,WAApE,CAAb,CAJ+D,CAK/D;;AACAvD,EAAAA,SAAS,GAAG,IAAItB,eAAJ,CAAU5B,UAAV,EAAqB,IAAIqB,cAAJ,CAAcuF,SAAS,CAACE,GAAxB,CAArB,EAAkDtF,0BAAlD,EAAmEiF,WAAnE,CAAZ,CAN+D,CAQ/D;;AACArD,EAAAA,OAAO,GAAG,IAAIxB,eAAJ,CAAU5B,UAAV,EAAqB,IAAIqB,cAAJ,CAAcuF,SAAS,CAAC/B,WAAxB,CAArB,EAA0DrD,0BAA1D,EAA2EiF,WAA3E,CAAV,CAT+D,CAU/D;;AACA,MAAI3B,OAAO,GAAG,IAAIzD,cAAJ,CAAcuF,SAAS,CAACG,WAAxB,CAAd,CAX+D,CAa/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAX,EAAAA,UAAU,GAAG,IAAIjF,YAAJ,EAAb;AACA,GAACkF,UAAD,EAAa5H,KAAb,IAAsB,MAAM4C,eAAUoD,kBAAV,CAC1B,CAAC2B,UAAU,CAAC7F,SAAX,CAAqBmE,QAArB,EAAD,CAD0B,EAE1BC,gCAF0B,CAA5B;AAIA4B,EAAAA,kBAAkB,GAAG,MAAMJ,UAAU,CAACvB,aAAX,CAAyByB,UAAzB,CAA3B;AACA,QAAMF,UAAU,CAAC1C,QAAX,CAAoB,IAAIpC,cAAJ,CAAc,8CAAd,CAApB,EAAkFkF,kBAAlF,EAAqGE,WAArG,EAAiH,EAAjH,EAAoH,OAAK,GAAzH,CAAN;AACAD,EAAAA,gBAAgB,GAAG,MAAMpD,OAAO,CAACwB,aAAR,CAAsByB,UAAtB,CAAzB;AACAK,EAAAA,oBAAoB,GAAG,MAAMtD,OAAO,CAACwB,aAAR,CAAsB6B,WAAW,CAAClG,SAAlC,CAA7B,CAhC+D,CAiC/D;AACA;;AAEA+E,EAAAA,gBAAgB,GAAG,MAAMpC,SAAS,CAAC0B,aAAV,CAAwByB,UAAxB,CAAzB;AACA,MAAItB,cAAc,GAAG,IAArB;AACA,MAAIQ,kBAAkB,GAAG,IAAzB;AACA,MAAIyB,wBAAwB,GAAG,IAAI3F,cAAJ,CAAcuF,SAAS,CAACK,SAAxB,CAA/B;AACArH,EAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EAA4D+G,SAAS,CAACvB,IAAtE;AACA9G,EAAAA,SAAS,GAAG,MAAM0G,qBAAUC,eAAV,CACd8B,wBADc,EAEdhH,UAFc,EAGdyG,WAHc,EAIdjF,0BAJc,EAKd4E,UALc,EAMdC,UANc,EAOdE,kBAPc,EAQdC,gBARc,EASdE,oBATc,EAUdpB,gBAVc,EAWdR,OAXc,EAYdC,cAZc,EAadQ,kBAbc,EAcdZ,gCAdc,EAedlG,KAfc,EAgBdI,qBAhBc,EAiBdC,uBAjBc,EAkBdC,2BAlBc,EAmBdC,6BAnBc,EAoBdC,4BApBc,EAqBdC,8BArBc,EAsBdC,kBAtBc,EAuBdC,oBAvBc,EAwBdI,eAxBc,EAyBd0H,8BAAmBnG,IAzBL,CAAlB,CAzC+D,CAoE/D;AACA;;AAEAnB,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEA8F,EAAAA,WAAW,GAAG,MAAMV,qBAAUG,aAAV,CAClBpF,UADkB,EAElBoG,UAAU,CAAC7F,SAFO,EAGlBoE,gCAHkB,CAApB;AAMA/E,EAAAA,OAAO,CAACC,GAAR,CAAY,+DAAZ,EAA4E+G,SAAS,CAACvB,IAAtF;AACAzF,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,MAAIuG,UAAU,CAAC7F,SAAX,CAAqBgC,QAArB,EAAJ,GAAoC,IAA3D;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,MAAI8F,WAAW,CAACnH,SAAZ,CAAsB+D,QAAtB,EAAJ,GAAqC,IAAnE;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,MAAI8F,WAAW,CAACtC,eAAZ,CAA4Bd,QAA5B,EAAJ,GAA2C,IAA9E;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC,MAAI8F,WAAW,CAACxC,iBAAZ,CAA8BZ,QAA9B,EAAJ,GAA6C,IAApF;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,MAAI8F,WAAW,CAACL,gBAAZ,CAA6B/C,QAA7B,EAAJ,GAA4C,IAA3E;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwC,MAAI8F,WAAW,CAACJ,kBAAZ,CAA+BhD,QAA/B,EAAJ,GAA8C,IAAtF;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,MAAI8F,WAAW,CAACrC,mBAAZ,CAAgCf,QAAhC,EAAJ,GAA+C,IAA9E;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,MAAI8F,WAAW,CAACZ,cAAZ,CAA2BxC,QAA3B,EAAJ,GAA0C,IAA5E;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC,MAAI8E,iCAAsB9D,QAAtB,EAAJ,GAAqC,IAA3E;AACD;;AAEM,eAAesG,gBAAf,CAAgCP,SAAhC,EAA0CnB,iBAA1C,EAA4E;AACjF,QAAMzF,UAAU,GAAG,MAAMC,aAAa,EAAtC;AACAwG,EAAAA,WAAW,GAAG,MAAM,IAAItF,YAAJ,CAAY,CAAC,EAAD,EAAI,EAAJ,EAAO,GAAP,EAAW,EAAX,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,EAA0B,GAA1B,EAA8B,GAA9B,EAAkC,GAAlC,EAAsC,GAAtC,EAA0C,EAA1C,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,EAAzD,EAA4D,GAA5D,EAAgE,EAAhE,EAAmE,GAAnE,EAAuE,GAAvE,EAA2E,EAA3E,EAA8E,GAA9E,EAAkF,GAAlF,EAAsF,GAAtF,EAA0F,GAA1F,EAA8F,GAA9F,EAAkG,GAAlG,EAAsG,EAAtG,EAAyG,EAAzG,EAA4G,GAA5G,EAAgH,GAAhH,EAAoH,EAApH,EAAuH,GAAvH,EAA2H,EAA3H,EAA8H,GAA9H,EAAkI,GAAlI,EAAsI,GAAtI,EAA0I,GAA1I,EAA8I,GAA9I,EAAkJ,GAAlJ,EAAsJ,CAAtJ,EAAwJ,GAAxJ,EAA4J,GAA5J,EAAgK,GAAhK,EAAoK,GAApK,EAAwK,GAAxK,EAA4K,EAA5K,EAA+K,EAA/K,EAAkL,GAAlL,EAAsL,GAAtL,EAA0L,GAA1L,EAA8L,GAA9L,EAAkM,GAAlM,EAAsM,GAAtM,EAA0M,EAA1M,EAA6M,GAA7M,EAAiN,GAAjN,EAAqN,GAArN,EAAyN,GAAzN,EAA6N,GAA7N,EAAiO,EAAjO,EAAoO,EAApO,EAAuO,GAAvO,EAA2O,GAA3O,CAAZ,CAApB,CAFiF,CAGjF;;AACA,MAAI2D,OAAO,GAAG,IAAIzD,cAAJ,CAAcuF,SAAS,CAACG,WAAxB,CAAd;AACAnH,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAuG,EAAAA,UAAU,GAAG,IAAI/E,cAAJ,CAAcuF,SAAS,CAAClB,MAAxB,CAAb;AACAC,EAAAA,WAAW,GAAG,MAAMV,qBAAUG,aAAV,CAChBpF,UADgB,EAEhBoG,UAFgB,EAGhBzB,gCAHgB,CAApB;AAKA4B,EAAAA,kBAAkB,GAAGZ,WAAW,CAACxC,iBAAjC;AACAqD,EAAAA,gBAAgB,GAAGb,WAAW,CAACtC,eAA/B;AACAqD,EAAAA,oBAAoB,GAAGf,WAAW,CAACrC,mBAAnC;AAEAgC,EAAAA,gBAAgB,GAAGK,WAAW,CAACL,gBAA/B;AACA,MAAIP,cAAc,GAAGY,WAAW,CAACZ,cAAjC;AACA,MAAIQ,kBAAkB,GAAGI,WAAW,CAACJ,kBAArC;AACA,MAAIyB,wBAAwB,GAAG,IAAI3F,cAAJ,CAAcuF,SAAS,CAACK,SAAxB,CAA/B;AACArH,EAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EAA4D+G,SAAS,CAACvB,IAAtE,EApBiF,CAqBjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAM,EAAAA,WAAW,GAAG,MAAMV,qBAAUG,aAAV,CAChBpF,UADgB,EAEhBoG,UAFgB,EAGhBzB,gCAHgB,CAApB;AAKA,QAAMyC,IAAI,GAAGvB,6BAA6B,CAAC,IAAIxE,cAAJ,CAAc,8CAAd,CAAD,EAA+D+E,UAA/D,CAA1C;AACA,MAAIiB,QAAQ,GAAG,MAAMpC,qBAAUc,iBAAV,CAA4B/F,UAA5B,EAAuCoH,IAAI,CAAC7G,SAA5C,EAAsDoE,gCAAtD,CAArB;AACA/E,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqB8F,WAAW,CAAC2B,WAAZ,CAAwB/E,QAAxB,EAArB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiB8F,WAAW,CAACK,YAAZ,CAAyBzD,QAAzB,EAAjB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmB8F,WAAW,CAACF,iBAAZ,CAA8BlD,QAA9B,EAAnB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB8F,WAAW,CAACM,gBAAZ,CAA6B1D,QAA7B,EAApB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB8F,WAAW,CAACb,OAAZ,CAAoBvC,QAApB,EAApB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BwH,QAAQ,CAACnB,WAAT,CAAqB3D,QAArB,EAA1B;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBwH,QAAQ,CAAClF,MAAT,CAAgBI,QAAhB,EAArB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,+DAAZ,EAA4E+G,SAAS,CAACvB,IAAtF;AACD;;AAED,IAAIkC,YAAY,GAAG;AACjB,UAAO,SADU;AAEjB,UAAO,8CAFU;AAGjB,SAAM,8CAHW;AAIjB,YAAS,EAJQ;AAKjB;AACA,mBAAgB,6CANC;AAOjB,WAAQ,6CAPS;AAQjB,iBAAc,8CARG;AASjB,eAAY;AATK,CAAnB;;AAWO,eAAeC,kBAAf,CAAkCD,YAAlC,EAA+D;AACpE,QAAMvH,UAAU,GAAG,MAAMC,aAAa,EAAtC;AACAwG,EAAAA,WAAW,GAAG,MAAM,IAAItF,YAAJ,CAAY,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,EAAc,EAAd,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,GAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAqD,EAArD,EAAyD,GAAzD,EAA8D,GAA9D,EAAmE,GAAnE,EAAwE,EAAxE,EAA4E,GAA5E,EAAiF,EAAjF,EAAqF,GAArF,EAA0F,GAA1F,EAA+F,EAA/F,EAAmG,GAAnG,EAAwG,GAAxG,EAA6G,GAA7G,EAAkH,GAAlH,EAAuH,GAAvH,EAA4H,GAA5H,EAAiI,EAAjI,EAAqI,EAArI,EAAyI,GAAzI,EAA8I,GAA9I,EAAmJ,EAAnJ,EAAuJ,GAAvJ,EAA4J,EAA5J,EAAgK,GAAhK,EAAqK,GAArK,EAA0K,GAA1K,EAA+K,GAA/K,EAAoL,GAApL,EAAyL,GAAzL,EAA8L,CAA9L,EAAiM,GAAjM,EAAsM,GAAtM,EAA2M,GAA3M,EAAgN,GAAhN,EAAqN,GAArN,EAA0N,EAA1N,EAA8N,EAA9N,EAAkO,GAAlO,EAAuO,GAAvO,EAA4O,GAA5O,EAAiP,GAAjP,EAAsP,GAAtP,EAA2P,GAA3P,EAAgQ,EAAhQ,EAAoQ,GAApQ,EAAyQ,GAAzQ,EAA8Q,GAA9Q,EAAmR,GAAnR,EAAwR,GAAxR,EAA6R,EAA7R,EAAiS,EAAjS,EAAqS,GAArS,EAA0S,GAA1S,CAAZ,CAApB,CAFoE,CAGpE;;AACAgF,EAAAA,UAAU,GAAG,IAAIvE,eAAJ,CAAU5B,UAAV,EAAsB,IAAIqB,cAAJ,CAAckG,YAAY,CAAC/C,IAA3B,CAAtB,EAAwDhD,0BAAxD,EAA0EiF,WAA1E,CAAb,CAJoE,CAKpE;;AACAvD,EAAAA,SAAS,GAAG,IAAItB,eAAJ,CAAU5B,UAAV,EAAsB,IAAIqB,cAAJ,CAAckG,YAAY,CAACT,GAA3B,CAAtB,EAAuDtF,0BAAvD,EAAyEiF,WAAzE,CAAZ,CANoE,CAOpE;;AACAE,EAAAA,UAAU,GAAG,IAAI/E,eAAJ,CAAU5B,UAAV,EAAsB,IAAIqB,cAAJ,CAAckG,YAAY,CAACE,KAA3B,CAAtB,EAAyDjG,0BAAzD,EAA2EiF,WAA3E,CAAb,CARoE,CAUpE;;AACArD,EAAAA,OAAO,GAAG,IAAIxB,eAAJ,CAAU5B,UAAV,EAAsB,IAAIqB,cAAJ,CAAckG,YAAY,CAAC1C,WAA3B,CAAtB,EAA+DrD,0BAA/D,EAAiFiF,WAAjF,CAAV,CAXoE,CAapE;;AACA,MAAI3B,OAAO,GAAG,IAAIzD,cAAJ,CAAckG,YAAY,CAACR,WAA3B,CAAd;AAEAX,EAAAA,UAAU,GAAG,IAAIjF,YAAJ,EAAb;AACA,GAACkF,UAAD,EAAa5H,KAAb,IAAsB,MAAM4C,eAAUoD,kBAAV,CACxB,CAAC2B,UAAU,CAAC7F,SAAX,CAAqBmE,QAArB,EAAD,CADwB,EAExBC,gCAFwB,CAA5B;AAIA4B,EAAAA,kBAAkB,GAAG,MAAMJ,UAAU,CAACvB,aAAX,CAAyByB,UAAzB,CAA3B;AACA,QAAMF,UAAU,CAAC1C,QAAX,CAAoB,IAAIpC,cAAJ,CAAc,8CAAd,CAApB,EAAkFkF,kBAAlF,EAAqGE,WAArG,EAAiH,EAAjH,EAAoH,IAAE,GAAtH,CAAN;AACAD,EAAAA,gBAAgB,GAAG,MAAMpD,OAAO,CAACwB,aAAR,CAAsByB,UAAtB,CAAzB;AACAK,EAAAA,oBAAoB,GAAG,MAAMtD,OAAO,CAACwB,aAAR,CAAsB6B,WAAW,CAAClG,SAAlC,CAA7B;AAEA+E,EAAAA,gBAAgB,GAAG,MAAMpC,SAAS,CAAC0B,aAAV,CAAwByB,UAAxB,CAAzB;AACA,MAAItB,cAAc,GAAG,IAArB;AACA,MAAIQ,kBAAkB,GAAG,MAAMoB,UAAU,CAAC/B,aAAX,CAAyByB,UAAzB,CAA/B;AACA,MAAIW,wBAAwB,GAAG,IAAI3F,cAAJ,CAAckG,YAAY,CAACN,SAA3B,CAA/B;AACArH,EAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ,EAA8D0H,YAAY,CAAClC,IAA3E;AACA9G,EAAAA,SAAS,GAAG,MAAM0G,qBAAUC,eAAV,CACd8B,wBADc,EAEdhH,UAFc,EAGdyG,WAHc,EAIdjF,0BAJc,EAKd4E,UALc,EAMdC,UANc,EAOdE,kBAPc,EAQdC,gBARc,EASdE,oBATc,EAUdpB,gBAVc,EAWdR,OAXc,EAYdC,cAZc,EAadQ,kBAbc,EAcdZ,gCAdc,EAedlG,KAfc,EAgBdI,qBAhBc,EAiBdC,uBAjBc,EAkBdC,2BAlBc,EAmBdC,6BAnBc,EAoBdC,4BApBc,EAqBdC,8BArBc,EAsBdC,kBAtBc,EAuBdC,oBAvBc,EAwBdI,eAxBc,EAyBdkI,gCAAqB3G,IAzBP,CAAlB;AA4BAnB,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEA8F,EAAAA,WAAW,GAAG,MAAMV,qBAAUG,aAAV,CAChBpF,UADgB,EAEhBoG,UAAU,CAAC7F,SAFK,EAGhBoE,gCAHgB,CAApB;AAMA/E,EAAAA,OAAO,CAACC,GAAR,CAAY,iEAAZ,EAA8E0H,YAAY,CAAClC,IAA3F;AACAzF,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,MAAIuG,UAAU,CAAC7F,SAAX,CAAqBgC,QAArB,EAAJ,GAAoC,IAA3D;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,MAAI8F,WAAW,CAACnH,SAAZ,CAAsB+D,QAAtB,EAAJ,GAAqC,IAAnE;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,MAAI8F,WAAW,CAACtC,eAAZ,CAA4Bd,QAA5B,EAAJ,GAA2C,IAA9E;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC,MAAI8F,WAAW,CAACxC,iBAAZ,CAA8BZ,QAA9B,EAAJ,GAA6C,IAApF;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,MAAI8F,WAAW,CAACL,gBAAZ,CAA6B/C,QAA7B,EAAJ,GAA4C,IAA3E;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwC,MAAI8F,WAAW,CAACJ,kBAAZ,CAA+BhD,QAA/B,EAAJ,GAA8C,IAAtF;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,MAAI8F,WAAW,CAACrC,mBAAZ,CAAgCf,QAAhC,EAAJ,GAA+C,IAA9E;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,MAAI8F,WAAW,CAACZ,cAAZ,CAA2BxC,QAA3B,EAAJ,GAA0C,IAA5E;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC,MAAI8E,iCAAsB9D,QAAtB,EAAJ,GAAqC,IAA3E;AACD;;AAEM,eAAe8G,kBAAf,CAAkCJ,YAAlC,EAA+C9B,iBAA/C,EAAiF;AACtF,QAAMzF,UAAU,GAAG,MAAMC,aAAa,EAAtC;AACAwG,EAAAA,WAAW,GAAG,MAAM,IAAItF,YAAJ,CAAY,CAAC,EAAD,EAAI,EAAJ,EAAO,GAAP,EAAW,EAAX,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,EAA0B,GAA1B,EAA8B,GAA9B,EAAkC,GAAlC,EAAsC,GAAtC,EAA0C,EAA1C,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,EAAzD,EAA4D,GAA5D,EAAgE,EAAhE,EAAmE,GAAnE,EAAuE,GAAvE,EAA2E,EAA3E,EAA8E,GAA9E,EAAkF,GAAlF,EAAsF,GAAtF,EAA0F,GAA1F,EAA8F,GAA9F,EAAkG,GAAlG,EAAsG,EAAtG,EAAyG,EAAzG,EAA4G,GAA5G,EAAgH,GAAhH,EAAoH,EAApH,EAAuH,GAAvH,EAA2H,EAA3H,EAA8H,GAA9H,EAAkI,GAAlI,EAAsI,GAAtI,EAA0I,GAA1I,EAA8I,GAA9I,EAAkJ,GAAlJ,EAAsJ,CAAtJ,EAAwJ,GAAxJ,EAA4J,GAA5J,EAAgK,GAAhK,EAAoK,GAApK,EAAwK,GAAxK,EAA4K,EAA5K,EAA+K,EAA/K,EAAkL,GAAlL,EAAsL,GAAtL,EAA0L,GAA1L,EAA8L,GAA9L,EAAkM,GAAlM,EAAsM,GAAtM,EAA0M,EAA1M,EAA6M,GAA7M,EAAiN,GAAjN,EAAqN,GAArN,EAAyN,GAAzN,EAA6N,GAA7N,EAAiO,EAAjO,EAAoO,EAApO,EAAuO,GAAvO,EAA2O,GAA3O,CAAZ,CAApB,CAFsF,CAItF;;AACA,MAAI2D,OAAO,GAAG,IAAIzD,cAAJ,CAAckG,YAAY,CAACR,WAA3B,CAAd;AAEAX,EAAAA,UAAU,GAAG,IAAI/E,cAAJ,CAAckG,YAAY,CAAC7B,MAA3B,CAAb;AACA9F,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEA8F,EAAAA,WAAW,GAAG,MAAMV,qBAAUG,aAAV,CAChBpF,UADgB,EAEhBoG,UAFgB,EAGhBzB,gCAHgB,CAApB;AAKA/E,EAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ,EAA+D8F,WAAW,CAACM,gBAAZ,CAA6B1D,QAA7B,EAA/D;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ,EAAgE8F,WAAW,CAACF,iBAAZ,CAA8BlD,QAA9B,EAAhE;AACAgE,EAAAA,kBAAkB,GAAGZ,WAAW,CAACxC,iBAAjC;AACAqD,EAAAA,gBAAgB,GAAGb,WAAW,CAACtC,eAA/B;AACAqD,EAAAA,oBAAoB,GAAGf,WAAW,CAACrC,mBAAnC;AACAgC,EAAAA,gBAAgB,GAAGK,WAAW,CAACL,gBAA/B;AACA,MAAIP,cAAc,GAAGY,WAAW,CAACZ,cAAjC;AACA,MAAIQ,kBAAkB,GAAGI,WAAW,CAACJ,kBAArC;AACA,MAAIyB,wBAAwB,GAAG,IAAI3F,cAAJ,CAAckG,YAAY,CAACN,SAA3B,CAA/B;AAEArH,EAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ,EAA6D0H,YAAY,CAAClC,IAA1E,EAzBsF,CA0BtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAM,EAAAA,WAAW,GAAG,MAAMV,qBAAUG,aAAV,CAChBpF,UADgB,EAEhBoG,UAFgB,EAGhBzB,gCAHgB,CAApB;AAKA,QAAMiD,KAAK,GAAG/B,6BAA6B,CAAC,IAAIxE,cAAJ,CAAc,8CAAd,CAAD,EAA+D+E,UAA/D,CAA3C;AACA,MAAIiB,QAAQ,GAAG,MAAMpC,qBAAUc,iBAAV,CAA4B/F,UAA5B,EAAuC4H,KAAK,CAACrH,SAA7C,EAAuDoE,gCAAvD,CAArB;AACA/E,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqB8F,WAAW,CAACK,YAAZ,CAAyBzD,QAAzB,EAArB,EA3DsF,CA4DtF;AACA;;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6B8F,WAAW,CAACJ,kBAAZ,CAA+BhD,QAA/B,EAA7B;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsB8F,WAAW,CAACb,OAAZ,CAAoBvC,QAApB,EAAtB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B8F,WAAW,CAACZ,cAAZ,CAA2BxC,QAA3B,EAA9B;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB0H,YAAY,CAAClC,IAAjC;AACAzF,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BwH,QAAQ,CAAClF,MAAT,CAAgBI,QAAhB,EAA3B;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBwH,QAAQ,CAACnB,WAAT,CAAqB3D,QAArB,EAAzB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,iEAAZ,EAA8E0H,YAAY,CAAClC,IAA3F;AACD,C,CAED;;;AACA,SAASQ,6BAAT,CAAuCuB,IAAvC,EAAwDpE,SAAxD,EAAuF;AACrF,MAAI6E,sBAAsB,GAAGvJ,UAAU,CAAC8I,IAAI,CAACvG,QAAL,EAAD,EAAkBmC,SAAS,CAACnC,QAAV,EAAlB,CAAvC;AACA,MAAIiH,CAAC,GAAGC,MAAM,CAACrE,IAAP,CAAYmE,sBAAZ,CAAR;;AACA,MAAIG,OAAO,GAAGC,mBAAKC,IAAL,CAAUF,OAAV,CAAkBG,QAAlB,CAA2BL,CAAC,CAACM,QAAF,CAAW,CAAX,EAAc,EAAd,CAA3B,CAAd;;AACA,SAAO,IAAIjH,YAAJ,CAAY6G,OAAO,CAACK,SAApB,CAAP;AACD,C,CAED;;;AACO,eAAeC,sBAAf,CAAsC1B,SAAtC,EAAgE;AACrE,QAAM5G,UAAU,GAAG,MAAMC,aAAa,EAAtC;AACAwG,EAAAA,WAAW,GAAG,MAAM,IAAItF,YAAJ,CAAY,CAAC,EAAD,EAAI,EAAJ,EAAO,GAAP,EAAW,EAAX,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,EAA0B,GAA1B,EAA8B,GAA9B,EAAkC,GAAlC,EAAsC,GAAtC,EAA0C,EAA1C,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,EAAzD,EAA4D,GAA5D,EAAgE,EAAhE,EAAmE,GAAnE,EAAuE,GAAvE,EAA2E,EAA3E,EAA8E,GAA9E,EAAkF,GAAlF,EAAsF,GAAtF,EAA0F,GAA1F,EAA8F,GAA9F,EAAkG,GAAlG,EAAsG,EAAtG,EAAyG,EAAzG,EAA4G,GAA5G,EAAgH,GAAhH,EAAoH,EAApH,EAAuH,GAAvH,EAA2H,EAA3H,EAA8H,GAA9H,EAAkI,GAAlI,EAAsI,GAAtI,EAA0I,GAA1I,EAA8I,GAA9I,EAAkJ,GAAlJ,EAAsJ,CAAtJ,EAAwJ,GAAxJ,EAA4J,GAA5J,EAAgK,GAAhK,EAAoK,GAApK,EAAwK,GAAxK,EAA4K,EAA5K,EAA+K,EAA/K,EAAkL,GAAlL,EAAsL,GAAtL,EAA0L,GAA1L,EAA8L,GAA9L,EAAkM,GAAlM,EAAsM,GAAtM,EAA0M,EAA1M,EAA6M,GAA7M,EAAiN,GAAjN,EAAqN,GAArN,EAAyN,GAAzN,EAA6N,GAA7N,EAAiO,EAAjO,EAAoO,EAApO,EAAuO,GAAvO,EAA2O,GAA3O,CAAZ,CAApB,CAFqE,CAIrE;;AACA,QAAMiG,IAAI,GAAG,MAAM,oDAAuBpH,UAAvB,EAAmC,YAAnC,CAAnB;AACA,QAAMuI,eAAe,GAAG,MAAMnF,OAAO,CAACwB,aAAR,CAAsBwC,IAAI,CAAC7G,SAA3B,CAA9B,CANqE,CAQrE;;AACA,QAAM6C,OAAO,CAACoF,MAAR,CAAeD,eAAf,EAAgCrH,UAAhC,EAA4C,EAA5C,EAAgD,KAAhD,CAAN;AACA,MAAIuH,iBAAiB,GAAG,MAAMvF,SAAS,CAAC0B,aAAV,CAAwBwC,IAAI,CAAC7G,SAA7B,CAA9B,CAVqE,CAarE;;AAEA,MAAImI,iBAAiB,GAAG7C,6BAA6B,CAACuB,IAAI,CAAC7G,SAAN,EAAiByC,SAAS,CAACzC,SAA3B,CAArD;AAEAX,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AAEAtB,EAAAA,SAAS,GAAG,MAAM0G,qBAAU0D,WAAV,CAChB3I,UADgB,EAEhBoH,IAFgB,EAEV;AACNpE,EAAAA,SAAS,CAACzC,SAHM,EAGK;AACrBgD,EAAAA,UAAU,CAAC/E,SAJK,EAIM;AACtB+J,EAAAA,eALgB,EAKC;AACjBE,EAAAA,iBANgB,EAMG;AACnBC,EAAAA,iBAPgB,EAOG;AACnBnF,EAAAA,UAAU,CAACF,eARK,EAShB+D,IATgB,EASV;AACN7D,EAAAA,UAAU,CAACqF,gBAVK,EAWhBjE,gCAXgB,EAYhBpB,UAAU,CAACJ,iBAZK,EAahBI,UAAU,CAACD,mBAbK,EAchB,KAdgB,CAAlB,CAnBqE,CAoCrE;;AACA,MAAIuF,aAAa,GAAG,MAAMzF,OAAO,CAACnB,cAAR,CAAuBsG,eAAvB,CAA1B;AACA3I,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBgJ,aAAa,CAAC1G,MAAd,CAAqBI,QAArB,EAAzB;AACA9C,EAAAA,MAAM,CAACoJ,aAAa,CAAC1G,MAAd,IAAwB,CAAzB,CAAN,CAvCqE,CAyCrE;;AACA,MAAI2G,aAAa,GAAG,MAAM1F,OAAO,CAACnB,cAAR,CAAuBsB,UAAU,CAACF,eAAlC,CAA1B;AAEAzD,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBiJ,aAAa,CAAC3G,MAAd,CAAqBI,QAArB,EAAxB;AACA9C,EAAAA,MAAM,CAACqJ,aAAa,CAAC3G,MAAd,IAAwB,KAAzB,CAAN,CA7CqE,CA8CrE;;AACAvC,EAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AAEA6I,EAAAA,iBAAiB,GAAG7C,6BAA6B,CAACuB,IAAI,CAAC7G,SAAN,EAAiByC,SAAS,CAACzC,SAA3B,CAAjD;AAEA,MAAIuF,UAAU,GAAG,MAAMb,qBAAUc,iBAAV,CAA4B/F,UAA5B,EAAwC0I,iBAAiB,CAACnI,SAA1D,EAAqEoE,gCAArE,CAAvB;AACA/E,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBiG,UAAU,CAAChB,OAAX,CAAmBvC,QAAnB,EAAxB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBiG,UAAU,CAAC3D,MAAX,CAAkBI,QAAlB,EAAxB;AACA9C,EAAAA,MAAM,CAACqG,UAAU,CAAC3D,MAAX,IAAqB,KAAtB,CAAN;AACAvC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BiG,UAAU,CAACI,WAAX,CAAuB3D,QAAvB,EAA3B;AAEA,MAAIwG,eAAe,GAAG,MAAM7F,SAAS,CAACjB,cAAV,CAAyBwG,iBAAzB,CAA5B;AACA7I,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCkJ,eAAe,CAAC5G,MAAhB,CAAuBI,QAAvB,EAAjC;AAEA,MAAIyG,eAAe,GAAG,MAAM9F,SAAS,CAACjB,cAAV,CAAyBsB,UAAU,CAACJ,iBAApC,CAA5B;AACAvD,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBmJ,eAAe,CAAC7G,MAAhB,CAAuBI,QAAvB,EAAzB;AAEA,oBAAM,OAAO,EAAb;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAhEqE,CAiErE;;AACA,QAAMoF,qBAAUgE,WAAV,CACJjJ,UADI,EAEJoH,IAFI,EAEE;AACNpE,EAAAA,SAAS,CAACzC,SAHN,EAGiB;AACrBgD,EAAAA,UAAU,CAAC/E,SAJP,EAIkB;AACtB+J,EAAAA,eALI,EAKa;AACjBE,EAAAA,iBANI,EAMe;AACnBC,EAAAA,iBAPI,EAOe;AACnBnF,EAAAA,UAAU,CAACF,eARP,EASJ+D,IATI,EASE;AACN7D,EAAAA,UAAU,CAACqF,gBAVP,EAWJjE,gCAXI,EAYJpB,UAAU,CAACJ,iBAZP,EAaJI,UAAU,CAACD,mBAbP,EAcJ,CAdI,CAAN;AAgBAyF,EAAAA,eAAe,GAAG,MAAM7F,SAAS,CAACjB,cAAV,CAAyBwG,iBAAzB,CAAxB;AACA7I,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCkJ,eAAe,CAAC5G,MAAhB,CAAuBI,QAAvB,EAAlC;AACAyG,EAAAA,eAAe,GAAG,MAAM9F,SAAS,CAACjB,cAAV,CAAyBsB,UAAU,CAACJ,iBAApC,CAAxB;AACAvD,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBmJ,eAAe,CAAC7G,MAAhB,CAAuBI,QAAvB,EAAzB;AAEAmG,EAAAA,iBAAiB,GAAG7C,6BAA6B,CAACuB,IAAI,CAAC7G,SAAN,EAAiByC,SAAS,CAACzC,SAA3B,CAAjD;AAEAuF,EAAAA,UAAU,GAAG,MAAMb,qBAAUc,iBAAV,CAA4B/F,UAA5B,EAAwC0I,iBAAiB,CAACnI,SAA1D,EAAqEoE,gCAArE,CAAnB;AACA/E,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BiG,UAAU,CAAC3D,MAAX,CAAkBI,QAAlB,EAA/B;AAEA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCiG,UAAU,CAACI,WAAX,CAAuB3D,QAAvB,EAAlC,EA5FqE,CA8FrE;;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ;AAEAD,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEAtB,EAAAA,SAAS,GAAG,MAAM0G,qBAAUiE,YAAV,CAChBlJ,UADgB,EAEhBoH,IAFgB,EAEV;AACNpE,EAAAA,SAAS,CAACzC,SAHM,EAGK;AACrBgD,EAAAA,UAAU,CAAC/E,SAJK,EAIM;AACtB+J,EAAAA,eALgB,EAKC;AACjBE,EAAAA,iBANgB,EAMG;AACnBC,EAAAA,iBAPgB,EAOG;AACnBnF,EAAAA,UAAU,CAACF,eARK,EAShBE,UAAU,CAACqF,gBATK,EAUhBjE,gCAVgB,EAWhBpB,UAAU,CAACJ,iBAXK,EAYhBI,UAAU,CAACD,mBAZK,EAahB,KAbgB,CAAlB;AAgBAoF,EAAAA,iBAAiB,GAAG7C,6BAA6B,CAACuB,IAAI,CAAC7G,SAAN,EAAiByC,SAAS,CAACzC,SAA3B,CAAjD;AAEAuF,EAAAA,UAAU,GAAG,MAAMb,qBAAUc,iBAAV,CAA4B/F,UAA5B,EAAwC0I,iBAAiB,CAACnI,SAA1D,EAAqEoE,gCAArE,CAAnB,CArHqE,CAuHrE;;AACA/E,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BiG,UAAU,CAAC3D,MAAX,CAAkBI,QAAlB,EAA7B,EAxHqE,CA0HrE;;AACA9C,EAAAA,MAAM,CAACqG,UAAU,CAAC3D,MAAX,IAAqB,CAAtB,CAAN;AAEAvC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCiG,UAAU,CAACI,WAAX,CAAuB3D,QAAvB,EAAhC,EA7HqE,CA+HrE;;AACAwG,EAAAA,eAAe,GAAG,MAAM3F,OAAO,CAACnB,cAAR,CAAuBsG,eAAvB,CAAxB;AACA3I,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BkJ,eAAe,CAAC5G,MAAhB,CAAuBI,QAAvB,EAA7B;AAEAyG,EAAAA,eAAe,GAAG,MAAM5F,OAAO,CAACnB,cAAR,CAAuBsB,UAAU,CAACF,eAAlC,CAAxB;AACAzD,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BmJ,eAAe,CAAC7G,MAAhB,CAAuBI,QAAvB,EAA9B;AAEA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AACD,C,CAED;;;AACO,eAAesJ,wBAAf,GAAyD;AAC9D,QAAMnJ,UAAU,GAAG,MAAMC,aAAa,EAAtC,CAD8D,CAG9D;AACA;;AACA,QAAMmH,IAAI,GAAG,IAAIjG,YAAJ,CAAY,CAAC,EAAD,EAAI,EAAJ,EAAO,GAAP,EAAW,EAAX,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,EAA0B,GAA1B,EAA8B,GAA9B,EAAkC,GAAlC,EAAsC,GAAtC,EAA0C,EAA1C,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,EAAzD,EAA4D,GAA5D,EAAgE,EAAhE,EAAmE,GAAnE,EAAuE,GAAvE,EAA2E,EAA3E,EAA8E,GAA9E,EAAkF,GAAlF,EAAsF,GAAtF,EAA0F,GAA1F,EAA8F,GAA9F,EAAkG,GAAlG,EAAsG,EAAtG,EAAyG,EAAzG,EAA4G,GAA5G,EAAgH,GAAhH,EAAoH,EAApH,EAAuH,GAAvH,EAA2H,EAA3H,EAA8H,GAA9H,EAAkI,GAAlI,EAAsI,GAAtI,EAA0I,GAA1I,EAA8I,GAA9I,EAAkJ,GAAlJ,EAAsJ,CAAtJ,EAAwJ,GAAxJ,EAA4J,GAA5J,EAAgK,GAAhK,EAAoK,GAApK,EAAwK,GAAxK,EAA4K,EAA5K,EAA+K,EAA/K,EAAkL,GAAlL,EAAsL,GAAtL,EAA0L,GAA1L,EAA8L,GAA9L,EAAkM,GAAlM,EAAsM,GAAtM,EAA0M,EAA1M,EAA6M,GAA7M,EAAiN,GAAjN,EAAqN,GAArN,EAAyN,GAAzN,EAA6N,GAA7N,EAAiO,EAAjO,EAAoO,EAApO,EAAuO,GAAvO,EAA2O,GAA3O,CAAZ,CAAb,CAL8D,CAO9D;;AACAgF,EAAAA,UAAU,GAAG,IAAIvE,eAAJ,CAAU5B,UAAV,EAAqB,IAAIqB,cAAJ,CAAc,8CAAd,CAArB,EAAmFG,0BAAnF,EAAoG4F,IAApG,CAAb,CAR8D,CAS9D;;AACAlE,EAAAA,SAAS,GAAG,IAAItB,eAAJ,CAAU5B,UAAV,EAAqB,IAAIqB,cAAJ,CAAc,8CAAd,CAArB,EAAmFG,0BAAnF,EAAoG4F,IAApG,CAAZ,CAV8D,CAY9D;;AACAhE,EAAAA,OAAO,GAAG,IAAIxB,eAAJ,CAAU5B,UAAV,EAAqB,IAAIqB,cAAJ,CAAcuF,SAAS,CAAC/C,EAAxB,CAArB,EAAiDrC,0BAAjD,EAAkE4F,IAAlE,CAAV,CAb8D,CAc9D;;AACA,MAAIgC,gBAAgB,GAAG,IAAI/H,cAAJ,CAAcuF,SAAS,CAAClB,MAAxB,CAAvB,CAf8D,CAgB9D;;AACAU,EAAAA,UAAU,GAAG,IAAI/E,cAAJ,CAAc,8CAAd,CAAb;AACAsE,EAAAA,WAAW,GAAG,MAAMV,qBAAUG,aAAV,CAChBpF,UADgB,EAEhBoG,UAFgB,EAGhBzB,gCAHgB,CAApB;AAMA/E,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+B8F,WAAW,CAACL,gBAAZ,CAA6B/C,QAA7B,EAA/B,EAxB8D,CAyB9D;;AACA,QAAMgG,eAAe,GAAG,IAAIlH,cAAJ,CAAc,8CAAd,CAAxB,CA1B8D,CA2B9D;AACA;AACA;AACA;;AACA,MAAIoH,iBAAiB,GAAG,IAAIpH,cAAJ,CAAc,8CAAd,CAAxB,CA/B8D,CAiC9D;;AACA,MAAIgI,gBAAgB,GAAG,IAAIhI,cAAJ,CAAc,8CAAd,CAAvB;AACA,MAAI2F,wBAAwB,GAAG,IAAI3F,cAAJ,CAAcuF,SAAS,CAACK,SAAxB,CAA/B,CAnC8D,CAqC9D;;AAEA,MAAIyB,iBAAiB,GAAG7C,6BAA6B,CAACuB,IAAI,CAAC7G,SAAN,EAAiB6F,UAAjB,CAArD,CAvC8D,CAwC9D;;AAEAxG,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACA,MAAIyJ,eAAe,GAAG,IAAIjI,cAAJ,CAAcuF,SAAS,CAAC2C,SAAxB,CAAtB;AACA,MAAIC,iBAAiB,GAAG,IAAInI,cAAJ,CAAcuF,SAAS,CAAC6C,YAAxB,CAAxB;AACA,MAAIC,SAAS,GAAG,IAAIrI,cAAJ,CAAcuF,SAAS,CAAC+C,WAAxB,CAAhB;AACA,MAAIC,aAAa,GAAG,OAApB,CA9C8D,CA+C9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAjE,EAAAA,WAAW,GAAG,MAAMV,qBAAUG,aAAV,CAChBpF,UADgB,EAEhBoG,UAFgB,EAGhBzB,gCAHgB,CAApB;AAMA/E,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B8F,WAAW,CAACM,gBAAZ,CAA6B1D,QAA7B,EAA1B,EAAkEoD,WAAW,CAACkE,aAAZ,CAA0BtH,QAA1B,EAAlE,EACIoD,WAAW,CAAC2B,WAAZ,CAAwB/E,QAAxB,EADJ,EA9E8D,CAiF9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AAEA6I,EAAAA,iBAAiB,GAAG7C,6BAA6B,CAACuB,IAAI,CAAC7G,SAAN,EAAiB6F,UAAjB,CAAjD,CA9F8D,CA+F9D;;AACA,MAAIN,UAAU,GAAG,MAAMb,qBAAUc,iBAAV,CAA4B/F,UAA5B,EAAwC0I,iBAAiB,CAACnI,SAA1D,EAAqEoE,gCAArE,CAAvB;AACA/E,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBiG,UAAU,CAAChB,OAAX,CAAmBvC,QAAnB,EAAxB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBiG,UAAU,CAAC3D,MAAX,CAAkBI,QAAlB,EAAxB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BiG,UAAU,CAACI,WAAX,CAAuB3D,QAAvB,EAA3B,EAnG8D,CAoG9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEAtB,EAAAA,SAAS,GAAG,MAAM0G,qBAAU6E,eAAV,CACd9J,UADc,EAEdoH,IAFc,EAER;AACNhB,EAAAA,UAHc,EAGF;AACZT,EAAAA,WAAW,CAACnH,SAJE,EAIS;AACvB+J,EAAAA,eALc,EAKG;AACjBE,EAAAA,iBANc,EAMK;AACnBC,EAAAA,iBAPc,EAOK;AACnB/C,EAAAA,WAAW,CAACtC,eARE,EASdsC,WAAW,CAACiD,gBATE,EAUdjE,gCAVc,EAWdgB,WAAW,CAACxC,iBAXE,EAYdwC,WAAW,CAACrC,mBAZE,EAadqC,WAAW,CAACL,gBAbE,EAcd+D,gBAdc,EAedrC,wBAfc,EAgBdoC,gBAhBc,EAiBdE,eAjBc,EAkBd3D,WAAW,CAACZ,cAlBE,EAmBdyE,iBAnBc,EAoBdE,SApBc,EAqBd,MArBc,CAAlB,CAvK8D,CA+L9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA9J,EAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AACD,C,CACD;;;AACO,eAAekK,wBAAf,GAAyD;AAC9D,QAAM/J,UAAU,GAAG,MAAMC,aAAa,EAAtC,CAD8D,CAG9D;AACA;;AACA,QAAMmH,IAAI,GAAG,IAAIjG,YAAJ,CAAY,CAAC,EAAD,EAAI,EAAJ,EAAO,GAAP,EAAW,EAAX,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,EAA0B,GAA1B,EAA8B,GAA9B,EAAkC,GAAlC,EAAsC,GAAtC,EAA0C,EAA1C,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,EAAzD,EAA4D,GAA5D,EAAgE,EAAhE,EAAmE,GAAnE,EAAuE,GAAvE,EAA2E,EAA3E,EAA8E,GAA9E,EAAkF,GAAlF,EAAsF,GAAtF,EAA0F,GAA1F,EAA8F,GAA9F,EAAkG,GAAlG,EAAsG,EAAtG,EAAyG,EAAzG,EAA4G,GAA5G,EAAgH,GAAhH,EAAoH,EAApH,EAAuH,GAAvH,EAA2H,EAA3H,EAA8H,GAA9H,EAAkI,GAAlI,EAAsI,GAAtI,EAA0I,GAA1I,EAA8I,GAA9I,EAAkJ,GAAlJ,EAAsJ,CAAtJ,EAAwJ,GAAxJ,EAA4J,GAA5J,EAAgK,GAAhK,EAAoK,GAApK,EAAwK,GAAxK,EAA4K,EAA5K,EAA+K,EAA/K,EAAkL,GAAlL,EAAsL,GAAtL,EAA0L,GAA1L,EAA8L,GAA9L,EAAkM,GAAlM,EAAsM,GAAtM,EAA0M,EAA1M,EAA6M,GAA7M,EAAiN,GAAjN,EAAqN,GAArN,EAAyN,GAAzN,EAA6N,GAA7N,EAAiO,EAAjO,EAAoO,EAApO,EAAuO,GAAvO,EAA2O,GAA3O,CAAZ,CAAb,CAL8D,CAM9D;;AACAgF,EAAAA,UAAU,GAAG,IAAIvE,eAAJ,CAAU5B,UAAV,EAAqB,IAAIqB,cAAJ,CAAc,8CAAd,CAArB,EAAmFG,0BAAnF,EAAoG4F,IAApG,CAAb,CAP8D,CAQ9D;;AACAlE,EAAAA,SAAS,GAAG,IAAItB,eAAJ,CAAU5B,UAAV,EAAqB,IAAIqB,cAAJ,CAAc,8CAAd,CAArB,EAAmFG,0BAAnF,EAAoG4F,IAApG,CAAZ,CAT8D,CAU9D;;AACAT,EAAAA,UAAU,GAAG,IAAI/E,eAAJ,CAAU5B,UAAV,EAAqB,IAAIqB,cAAJ,CAAc,8CAAd,CAArB,EAAmFG,0BAAnF,EAAoG4F,IAApG,CAAb,CAX8D,CAY9D;;AACAhE,EAAAA,OAAO,GAAG,IAAIxB,eAAJ,CAAU5B,UAAV,EAAqB,IAAIqB,cAAJ,CAAc,8CAAd,CAArB,EAAmFG,0BAAnF,EAAoG4F,IAApG,CAAV,CAb8D,CAc9D;;AACA,MAAIgC,gBAAgB,GAAG,IAAI/H,cAAJ,CAAc,8CAAd,CAAvB,CAf8D,CAgB9D;;AACA+E,EAAAA,UAAU,GAAG,IAAI/E,cAAJ,CAAc,8CAAd,CAAb;AACAsE,EAAAA,WAAW,GAAG,MAAMV,qBAAUG,aAAV,CAChBpF,UADgB,EAEhBoG,UAFgB,EAGhBzB,gCAHgB,CAApB;AAKA/E,EAAAA,OAAO,CAACC,GAAR,CAAY8F,WAAW,CAACJ,kBAAZ,CAA+BhD,QAA/B,EAAZ,EAAsD,oBAAtD,EAA2EoD,WAAW,CAACZ,cAAZ,CAA2BxC,QAA3B,EAA3E;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY8F,WAAW,CAACiD,gBAAZ,CAA6BrG,QAA7B,EAAZ;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwC8F,WAAW,CAACkE,aAAZ,CAA0BtH,QAA1B,EAAxC;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwC8F,WAAW,CAACqE,gBAAZ,CAA6BzH,QAA7B,EAAxC;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsC8F,WAAW,CAAC2B,WAAZ,CAAwB/E,QAAxB,EAAtC,EA3B8D,CA4B9D;;AACA,QAAMgG,eAAe,GAAG,IAAIlH,cAAJ,CAAc,8CAAd,CAAxB,CA7B8D,CA8B9D;AACA;AACA;AACA;;AACA,MAAIoH,iBAAiB,GAAG,IAAIpH,cAAJ,CAAc,8CAAd,CAAxB,CAlC8D,CAoC9D;;AACA,MAAIgI,gBAAgB,GAAG,IAAIhI,cAAJ,CAAc,8CAAd,CAAvB;AACA,MAAI2F,wBAAwB,GAAG,IAAI3F,cAAJ,CAAc,6CAAd,CAA/B,CAtC8D,CAwC9D;;AAEA,MAAIqH,iBAAiB,GAAG7C,6BAA6B,CAACuB,IAAI,CAAC7G,SAAN,EAAiB6F,UAAjB,CAArD;AAEAxG,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACA,MAAIyJ,eAAe,GAAG,IAAIjI,cAAJ,CAAc,8CAAd,CAAtB;AACA,MAAImI,iBAAiB,GAAG,IAAInI,cAAJ,CAAc,8CAAd,CAAxB;AACA,MAAI4I,gBAAgB,GAAG,IAAI5I,cAAJ,CAAc,8CAAd,CAAvB;AACA,MAAIuI,aAAa,GAAG,OAApB;AACA,MAAIM,kBAAkB,GAAG,IAAI7I,cAAJ,CAAc,8CAAd,CAAzB;AACA,MAAI8I,kBAAkB,GAAG,IAAI9I,cAAJ,CAAc,8CAAd,CAAzB,CAlD8D,CAmD9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAzB,EAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AAEA6I,EAAAA,iBAAiB,GAAG7C,6BAA6B,CAACuB,IAAI,CAAC7G,SAAN,EAAiB6F,UAAjB,CAAjD,CA5F8D,CA6F9D;;AACA,MAAIN,UAAU,GAAG,MAAMb,qBAAUc,iBAAV,CAA4B/F,UAA5B,EAAwC0I,iBAAiB,CAACnI,SAA1D,EAAqEoE,gCAArE,CAAvB;AACA/E,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBiG,UAAU,CAAChB,OAAX,CAAmBvC,QAAnB,EAAxB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBiG,UAAU,CAAC3D,MAAX,CAAkBI,QAAlB,EAAxB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BiG,UAAU,CAACI,WAAX,CAAuB3D,QAAvB,EAA3B,EAjG8D,CAkG9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAnK8D,CAqK9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIAD,EAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AACD",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/",
      "sourcesContent": [
        "// @flow\n\nimport {\n  Account,\n  Connection,\n  PublicKey,\n} from '@solana/web3.js';\nimport nacl from 'tweetnacl';\nimport { AccountLayout, Token, TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport 'crypto'\nimport {\n  TokenSwap,\n  CurveType,\n  TOKEN_SWAP_PROGRAM_ID, TokenRayUserLayout, TokenRayUserV4Layout, TokenFarmUserLayout,\n} from '../client/token-swap';\nimport { sendAndConfirmTransaction } from '../client/util/send-and-confirm-transaction';\nimport { newAccountWithLamports } from '../client/util/new-account-with-lamports';\nimport { url } from '../url';\nimport { sleep } from '../client/util/sleep';\nconst { createHash, createHmac } = require('crypto');\nlet fs = require(\"fs\");\n/**\n * @param {string} algorithm\n * @param {any} content\n *  @return {string}\n */\nconst encrypt = (algorithm, content) => {\n  let hash = createHash(algorithm)\n  hash.update(content)\n  return hash.digest('hex')\n}\n/**\n * @param {any} content\n *  @return {string}\n */\nconst sha1 = (content) => encrypt('sha1', content);\n/**\n * @param {any} content\n *  @return {string}\n */\nconst md5 = (content) => encrypt('md5', content);\n\n\n\nconst hmacMd5 = (scretKey, content) => {\n  const hmac = createHmac('md5', scretKey);\n  const up = hmac.update(content);\n  const result = up.digest('hex');\n  return result;\n}\n\nconst hmacSha256 = (scretKey, content) => {\n  const hmac = createHmac('sha256', scretKey);\n  const up = hmac.update(content);\n\n  let result = up.digest('hex');\n  // result = result;\n  // result = result.replace(/\\+/g, '%2B');\n  // console.log('result', escape(encodeURI(result)));\n  return result;\n\n\n  // var crypto = require('crypto');\n  // //creating hmac object\n  // var hmac = crypto.createHmac('sha256', 'yoursecretkeyhere');\n  // //passing the data to be hashed\n  // data = hmac.update('nodejsera');\n  // //Creating the hmac in the required format\n  // gen_hmac = data.digest('hex');\n}\n// The following globals are created by `createTokenSwap` and used by subsequent tests\n// Token swap\nlet tokenSwap: TokenSwap;\n// authority of the token and accounts\nlet authority: PublicKey;\n// nonce used to generate the authority public key\nlet nonce: number;\n// owner of the user accounts\n\n// Hard-coded fee address, for testing production mode\nconst SWAP_PROGRAM_OWNER_FEE_ADDRESS =\n  process.env.SWAP_PROGRAM_OWNER_FEE_ADDRESS;\n\n// Pool fees\nconst TRADING_FEE_NUMERATOR = 0;\nconst TRADING_FEE_DENOMINATOR = 0;\nconst OWNER_TRADING_FEE_NUMERATOR = 0;\nconst OWNER_TRADING_FEE_DENOMINATOR = 0;\nconst OWNER_WITHDRAW_FEE_NUMERATOR = 0;\nconst OWNER_WITHDRAW_FEE_DENOMINATOR = 0;\nconst HOST_FEE_NUMERATOR = 0;\nconst HOST_FEE_DENOMINATOR = 0;\n\n// curve type used to calculate swaps and deposits\nconst CURVE_TYPE = CurveType.ConstantProduct;\n// 384 ms\n//\nconst REWARD_PER_PLOT = 925925;\n\n// Initial amount in each swap token\n\nfunction assert(condition, message) {\n  if (!condition) {\n    console.log(Error().stack + ':token-test.js');\n    throw message || 'Assertion failed';\n  }\n}\n\nlet connection;\nasync function getConnection(): Promise<Connection> {\n  if (connection) return connection;\n\n  connection = new Connection(url, 'recent');\n  const version = await connection.getVersion();\n\n  console.log('Connection to cluster established:', url, version);\n  return connection;\n}\n\nfunction getOwnedAccountsFilters(publicKey:PublicKey) {\n  console.log(AccountLayout);\n  return [\n    {\n      memcmp: {\n        offset: AccountLayout.offsetOf('mint'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: AccountLayout.span,\n    },\n  ];\n}\n\nexport async function getAccounts(programId){\n  farm_payer = await new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n  const filters = getOwnedAccountsFilters(new PublicKey(programId));\n  let connection = await getConnection();\n\n  const resp = await connection._rpcRequest('getProgramAccounts', [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment:connection.commitment,\n      filters,\n    }\n  ]);\n  let list = resp['result'];\n  let token = new Token(connection,new PublicKey(programId),TOKEN_PROGRAM_ID,farm_payer);\n  let arr = [];\n  for (let i = 0;i<list.length;i++){\n    await sleep(100);\n    let detail = await token.getAccountInfo(new PublicKey(list[i].pubkey));\n    let amount = Number(detail.amount) / 1e9;\n    if (amount > 0){\n      arr.push({\n        address : list[i].pubkey,\n        amount : detail.amount.toString(),\n      });\n      console.log(i,list[i].pubkey,amount);\n    }\n  }\n  fs.writeFile('input.txt', JSON.stringify(arr),  function(err) {\n    if (err) {\n      return console.error(err);\n    }\n    console.log(\"数据写入成功！\");\n    console.log(\"--------我是分割线-------------\")\n    console.log(\"读取写入的数据！\");\n    fs.readFile('input.txt', function (err, data) {\n      if (err) {\n        return console.error(err);\n      }\n      console.log(\"异步读取文件数据: \" + data.toString());\n    });\n  });\n  return arr;\n}\n\n//// ------------------------------- farm 挖矿逻辑 ---------------------------\nlet farmToken;\nlet farm_payer;\nlet farm_info;\nlet farmAuth;\nlet farm_mint;\nlet pool_farm_address;\nlet lp_mint;\nlet pool_lp_address;\nlet pool_fee_lp_address;\nlet farmDetail\nlet farm_config = {\n  'name':'SRM',\n  'poolid':'',\n  'farm':'CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d',\n  'mintAddress':'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt',\n}\n// 转账\nexport async function transfer(from,to,mint,amount) {\n  farm_payer = await new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n  const connection = await getConnection();\n  let lp = new Token(connection,new PublicKey(mint),farm_payer);\n  let to_lp = lp.getOrCreateAssociatedAccountInfo(to);\n  let mint_info = await lp.getMintInfo();\n  let base_deciaml = Math.pow(10,mint_info.decimals);\n  amount = (amount*base_deciaml).toFixed(0)\n  await lp.transfer(from,to_lp,farm_payer,[],Number(amount));\n}\nexport async function createFarmPool(farm_config): Promise<void> {\n\n  const connection = await getConnection();\n  farm_payer = await new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n  console.log('farm_config.farm',farm_config.farm)\n  farm_mint = new Token(connection,new PublicKey(farm_config.farm),TOKEN_PROGRAM_ID,farm_payer);\n  farm_info = new Account();\n  console.log('farm_config.farm',farm_config.farm);\n  [authority, nonce] = await PublicKey.findProgramAddress(\n    [farm_info.publicKey.toBuffer()],\n    TOKEN_SWAP_PROGRAM_ID,\n  );\n  pool_farm_address = await farm_mint.createAccount(authority);\n  await farm_mint.transfer(new PublicKey('EikSzrgHqMqEmmjMZiPqetHpSRgNDv6yQ2c99Mn1Y1Vj'),pool_farm_address,farm_payer,[],10*1e9);\n  console.log('farm_config.mintAddress',farm_config.mintAddress);\n  lp_mint = new Token(connection,new PublicKey(farm_config.mintAddress),TOKEN_PROGRAM_ID,farm_payer);\n  pool_lp_address = await lp_mint.createAccount(authority);\n  pool_fee_lp_address = await lp_mint.createAccount(farm_payer.publicKey);\n  let pool_id = null;\n  let pool_user_info = null;\n  let pool_other_info = null;\n  console.log('开始创建矿池',authority.toString(),nonce);\n  tokenSwap = await TokenSwap.createTokenFarm(\n      new PublicKey(),\n      connection,\n      farm_payer,\n      TOKEN_PROGRAM_ID,\n      farm_info,\n      authority,\n      pool_farm_address,\n      pool_lp_address,\n      pool_fee_lp_address,\n      pool_farm_address,\n      pool_id,\n      pool_user_info,\n      pool_other_info,\n      TOKEN_SWAP_PROGRAM_ID,\n      nonce,\n      TRADING_FEE_NUMERATOR,\n      TRADING_FEE_DENOMINATOR,\n      OWNER_TRADING_FEE_NUMERATOR,\n      OWNER_TRADING_FEE_DENOMINATOR,\n      OWNER_WITHDRAW_FEE_NUMERATOR,\n      OWNER_WITHDRAW_FEE_DENOMINATOR,\n      HOST_FEE_NUMERATOR,\n      HOST_FEE_DENOMINATOR,\n      REWARD_PER_PLOT,\n      TokenFarmUserLayout.span,\n  );\n  //\n  // console.log(\"******************************************矿池初始化成功\");\n\n  console.log('加载farm矿池');\n\n  farmDetail = await TokenSwap.loadTokenFarm(\n    connection,\n    farm_info.publicKey,\n    TOKEN_SWAP_PROGRAM_ID,\n  );\n\n  console.log('******************************************普通矿池信息校验成功---------',farm_config.name);\n  console.log(\"poolId:\", \"'\"+farm_info.publicKey.toString()+\"',\");\n  console.log(\"nonce:\", \"'\"+farmDetail.nonce+\"',\");\n  console.log(\"poolAuthority:\", \"'\"+farmDetail.authority.toString()+\"',\");\n  console.log(\"poolLpTokenAccount:\", \"'\"+farmDetail.pool_lp_address.toString()+\"',\");\n  console.log(\"poolRewardTokenAccount:\", \"'\"+farmDetail.pool_farm_address.toString()+\"',\");\n  console.log(\"poolRayAddress:\", \"'\"+farmDetail.pool_ray_address.toString()+\"',\");\n  console.log(\"poolRewardTokenAccountB:\", \"'\"+farmDetail.pool_other_address.toString()+\"',\");\n  console.log(\"poolFeeAccount:\", \"'\"+farmDetail.pool_fee_lp_address.toString()+\"',\");\n  console.log(\"threePoolUserInfo:\", \"'\"+farmDetail.pool_user_info.toString()+\"',\");\n  console.log(\"TOKEN_SWAP_PROGRAM_ID:\", \"'\"+TOKEN_SWAP_PROGRAM_ID.toBase58()+\"',\");\n  return\n}\nexport async function updateFarmPool(farm_config,reward_per_second): Promise<void> {\n  const connection = await getConnection();\n  farm_payer = await new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n  farm_info = new PublicKey(farm_config.poolid);\n  console.log('加载farm矿池');\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n  pool_farm_address = farmDetail1.pool_farm_address;\n  pool_lp_address = farmDetail1.pool_lp_address;\n  pool_fee_lp_address = farmDetail1.pool_fee_lp_address;\n  let pool_id = new PublicKey();\n  let pool_user_info = farmDetail1.pool_user_info;\n  let pool_other_info = farmDetail1.pool_other_address;\n  console.log('开始更新矿池------',farm_config.name);\n  // tokenSwap = await TokenSwap.updateTokenFarm(\n  //     new PublicKey(),\n  //     connection,\n  //     farm_payer,\n  //     TOKEN_PROGRAM_ID,\n  //     farm_info,\n  //     farmDetail1.authority,\n  //     pool_farm_address,\n  //     pool_lp_address,\n  //     pool_fee_lp_address,\n  //     pool_farm_address,\n  //     pool_id,\n  //     pool_user_info,\n  //     pool_other_info,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.nonce,\n  //     TRADING_FEE_NUMERATOR,\n  //     TRADING_FEE_DENOMINATOR,\n  //     OWNER_TRADING_FEE_NUMERATOR,\n  //     OWNER_TRADING_FEE_DENOMINATOR,\n  //     OWNER_WITHDRAW_FEE_NUMERATOR,\n  //     OWNER_WITHDRAW_FEE_DENOMINATOR,\n  //     HOST_FEE_NUMERATOR,\n  //     HOST_FEE_DENOMINATOR,\n  //     reward_per_second\n  // );\n  //\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n  const userAccount = createUniqueAssociatedAccount(new PublicKey('AG86tBRGiG3tVW4oyPnEM1151mYbBk94STwbVoTP8pDd'),farm_info);\n  const userDetail = await TokenSwap.loadTokenFarmUser(\n      connection,\n      userAccount.publicKey,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n  console.log('address',farmDetail1.pool_farm_address.toString());\n  console.log('总',farmDetail1.total_supply.toString());\n  console.log('每秒奖励',farmDetail1.reward_per_second.toString());\n  console.log('每share奖励',farmDetail1.reward_per_share.toString());\n  console.log(' user amount',userDetail.amount.toString());\n  console.log('user debt',userDetail.reward_debt.toString());\n  console.log('******************************************普通矿池信息校验成功---------',farm_config.name);\n  return\n}\nlet farm_mint1;\nlet farm_info1;\nlet authority1;\nlet pool_farm1_address1;\nlet pool_farm_address1;\nlet pool_lp_address1;\nlet pool_ray_address;\nlet farm_payer1;\nlet farmDetail1;\nlet pool_fee_lp_address1;\nlet other_mint;\nlet lp_config = {\n  'name':'RAY-USDC',\n  'farm':'CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d',\n  'ray':'4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n  // todo\n  'programid':'EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q', // ray 2币的programid\n  'poolid':'',\n  'threePoolId':'8nEWqxeDNZ2yo1izbPzY4nwR55isBZRaQk7CM8ntwUwR',\n  'thirdAuth':'6vQGZLsHgpJdqh1ER7q2q6mjZ43QwzhtTofTzb2sUhNh',\n  'thirdLpAddr':'77ujS15hjUfFZkM8QAw4HMLvMGZg95Gcm6ixjA1bnk3M',\n  'thirdRayAddr':'3ejmkn5HpXR9KdVWkai1Ngo87sQSUyKXrx8wSakipkno',\n  'mintAddress':'BZFGfXMrjG2sS7QT2eiCDEevPFnkYYF7kzJpWfYxPbcx',\n};\nexport async function createVaultsPool(lp_config): Promise<void> {\n  const connection = await getConnection();\n  farm_payer1 = await new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n  // farm v1\n  farm_mint1 = new Token(connection,new PublicKey(lp_config.farm),TOKEN_PROGRAM_ID,farm_payer1);\n  // RAY\n  farm_mint = new Token(connection,new PublicKey(lp_config.ray),TOKEN_PROGRAM_ID,farm_payer1);\n\n  // RAY-USDC\n  lp_mint = new Token(connection,new PublicKey(lp_config.mintAddress),TOKEN_PROGRAM_ID,farm_payer1);\n  // RAY-USDC poolid\n  let pool_id = new PublicKey(lp_config.threePoolId);\n\n  // farm_mint1 = await Token.createMint(\n  //   connection,\n  //   farm_payer,\n  //   farm_payer.publicKey,\n  //   null,\n  //   2,\n  //   TOKEN_PROGRAM_ID,\n  // );\n  // let farmAuth = await farm_mint1.createAccount(farm_payer1.publicKey)\n  // await farm_mint1.mintTo(farmAuth, farm_payer, [], 1000000)\n\n  farm_info1 = new Account();\n  [authority1, nonce] = await PublicKey.findProgramAddress(\n    [farm_info1.publicKey.toBuffer()],\n    TOKEN_SWAP_PROGRAM_ID,\n  );\n  pool_farm_address1 = await farm_mint1.createAccount(authority1);\n  await farm_mint1.transfer(new PublicKey('EikSzrgHqMqEmmjMZiPqetHpSRgNDv6yQ2c99Mn1Y1Vj'),pool_farm_address1,farm_payer1,[],1000*1e9);\n  pool_lp_address1 = await lp_mint.createAccount(authority1);\n  pool_fee_lp_address1 = await lp_mint.createAccount(farm_payer1.publicKey);\n  // await farm_mint.transfer(farmAuth,pool_farm_address,farm_payer,[],500000);\n  // await farm_mint1.mintTo(pool_farm_address1,farm_payer,[],500000);\n\n  pool_ray_address = await farm_mint.createAccount(authority1);\n  let pool_user_info = null;\n  let pool_other_address = null;\n  let raydium_stake_program_id = new PublicKey(lp_config.programid)\n  console.log('--------------------------------开始创建复投矿池-----',lp_config.name);\n  tokenSwap = await TokenSwap.createTokenFarm(\n      raydium_stake_program_id,\n      connection,\n      farm_payer1,\n      TOKEN_PROGRAM_ID,\n      farm_info1,\n      authority1,\n      pool_farm_address1,\n      pool_lp_address1,\n      pool_fee_lp_address1,\n      pool_ray_address,\n      pool_id,\n      pool_user_info,\n      pool_other_address,\n      TOKEN_SWAP_PROGRAM_ID,\n      nonce,\n      TRADING_FEE_NUMERATOR,\n      TRADING_FEE_DENOMINATOR,\n      OWNER_TRADING_FEE_NUMERATOR,\n      OWNER_TRADING_FEE_DENOMINATOR,\n      OWNER_WITHDRAW_FEE_NUMERATOR,\n      OWNER_WITHDRAW_FEE_DENOMINATOR,\n      HOST_FEE_NUMERATOR,\n      HOST_FEE_DENOMINATOR,\n      REWARD_PER_PLOT,\n      TokenRayUserLayout.span,\n  );\n  //\n  // console.log(\"******************************************矿池初始化成功\");\n\n  console.log('加载复投矿池');\n\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n    connection,\n    farm_info1.publicKey,\n    TOKEN_SWAP_PROGRAM_ID,\n  );\n\n  console.log('******************************************复投矿池信息校验成功---------',lp_config.name);\n  console.log(\"poolId:\", \"'\"+farm_info1.publicKey.toString()+\"',\");\n  console.log(\"poolAuthority:\", \"'\"+farmDetail1.authority.toString()+\"',\");\n  console.log(\"poolLpTokenAccount:\", \"'\"+farmDetail1.pool_lp_address.toString()+\"',\");\n  console.log(\"poolRewardTokenAccount:\", \"'\"+farmDetail1.pool_farm_address.toString()+\"',\");\n  console.log(\"poolRayAddress:\", \"'\"+farmDetail1.pool_ray_address.toString()+\"',\");\n  console.log(\"poolRewardTokenAccountB:\", \"'\"+farmDetail1.pool_other_address.toString()+\"',\");\n  console.log(\"poolFeeAccount:\", \"'\"+farmDetail1.pool_fee_lp_address.toString()+\"',\");\n  console.log(\"threePoolUserInfo:\", \"'\"+farmDetail1.pool_user_info.toString()+\"',\");\n  console.log(\"TOKEN_SWAP_PROGRAM_ID:\", \"'\"+TOKEN_SWAP_PROGRAM_ID.toBase58()+\"',\");\n}\n\nexport async function updateVaultsPool(lp_config,reward_per_second): Promise<void> {\n  const connection = await getConnection();\n  farm_payer1 = await new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n  // RAY-USDC poolid\n  let pool_id = new PublicKey(lp_config.threePoolId);\n  console.log('加载复投矿池');\n  farm_info1 = new PublicKey(lp_config.poolid);\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info1,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n  pool_farm_address1 = farmDetail1.pool_farm_address;\n  pool_lp_address1 = farmDetail1.pool_lp_address;\n  pool_fee_lp_address1 = farmDetail1.pool_fee_lp_address;\n\n  pool_ray_address = farmDetail1.pool_ray_address;\n  let pool_user_info = farmDetail1.pool_user_info;\n  let pool_other_address = farmDetail1.pool_other_address;\n  let raydium_stake_program_id = new PublicKey(lp_config.programid);\n  console.log('--------------------------------开始更新复投矿池-----',lp_config.name);\n  // tokenSwap = await TokenSwap.updateTokenFarm(\n  //     raydium_stake_program_id,\n  //     connection,\n  //     farm_payer1,\n  //     TOKEN_PROGRAM_ID,\n  //     farm_info1,\n  //     farmDetail1.authority,\n  //     pool_farm_address1,\n  //     pool_lp_address1,\n  //     pool_fee_lp_address1,\n  //     pool_ray_address,\n  //     pool_id,\n  //     pool_user_info,\n  //     pool_other_address,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.nonce,\n  //     TRADING_FEE_NUMERATOR,\n  //     TRADING_FEE_DENOMINATOR,\n  //     OWNER_TRADING_FEE_NUMERATOR,\n  //     OWNER_TRADING_FEE_DENOMINATOR,\n  //     OWNER_WITHDRAW_FEE_NUMERATOR,\n  //     OWNER_WITHDRAW_FEE_DENOMINATOR,\n  //     HOST_FEE_NUMERATOR,\n  //     HOST_FEE_DENOMINATOR,\n  //     reward_per_second,\n  // );\n  //\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info1,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n  const user = createUniqueAssociatedAccount(new PublicKey('AG86tBRGiG3tVW4oyPnEM1151mYbBk94STwbVoTP8pDd'),farm_info1);\n  let userInfo = await TokenSwap.loadTokenFarmUser(connection,user.publicKey,TOKEN_SWAP_PROGRAM_ID);\n  console.log('最后更新时间',farmDetail1.last_update.toString());\n  console.log('总数',farmDetail1.total_supply.toString());\n  console.log('每秒奖励',farmDetail1.reward_per_second.toString());\n  console.log('每份额奖励',farmDetail1.reward_per_share.toString());\n  console.log('第三方id',farmDetail1.pool_id.toString());\n  console.log('reward_debt',userInfo.reward_debt.toString());\n  console.log('amount',userInfo.amount.toString());\n  console.log('******************************************复投矿池信息更新成功---------',lp_config.name);\n}\n\nlet lp_config_v4 = {\n  'name':'KIN-RAY',\n  'farm':'CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d',\n  'ray':'4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n  'poolid':'',\n  // 'poolid':'7RFY9eMaD3nsV7EBTzVzuKBr4X4cLuDh3JaoWZTcGiJK',\n  'poolAuthority':'q42hNDzfBDQ1WzKjxkueEtBzX1VPJ2hnikJXFjSYC91',\n  'other':'MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb',\n  'mintAddress':'CHT8sft3h3gpLYbCcZ9o27mT5s3Z6VifBVbUiDvprHPW',\n  'programid':'CBuCnLe26faBpcBP2fktp4rp8abpcAnTWft6ZrP5Q4T',\n}\nexport async function createVaultsPoolV4(lp_config_v4): Promise<void> {\n  const connection = await getConnection();\n  farm_payer1 = await new Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]);\n  // farm v1\n  farm_mint1 = new Token(connection, new PublicKey(lp_config_v4.farm), TOKEN_PROGRAM_ID, farm_payer1);\n  // RAY\n  farm_mint = new Token(connection, new PublicKey(lp_config_v4.ray), TOKEN_PROGRAM_ID, farm_payer1);\n  // FIDA\n  other_mint = new Token(connection, new PublicKey(lp_config_v4.other), TOKEN_PROGRAM_ID, farm_payer1);\n\n  // RAY-FIDA\n  lp_mint = new Token(connection, new PublicKey(lp_config_v4.mintAddress), TOKEN_PROGRAM_ID, farm_payer1);\n\n  // RAY-FIDA poolid\n  let pool_id = new PublicKey(lp_config_v4.threePoolId);\n\n  farm_info1 = new Account();\n  [authority1, nonce] = await PublicKey.findProgramAddress(\n      [farm_info1.publicKey.toBuffer()],\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n  pool_farm_address1 = await farm_mint1.createAccount(authority1);\n  await farm_mint1.transfer(new PublicKey('EikSzrgHqMqEmmjMZiPqetHpSRgNDv6yQ2c99Mn1Y1Vj'),pool_farm_address1,farm_payer1,[],1*1e9);\n  pool_lp_address1 = await lp_mint.createAccount(authority1);\n  pool_fee_lp_address1 = await lp_mint.createAccount(farm_payer1.publicKey);\n\n  pool_ray_address = await farm_mint.createAccount(authority1);\n  let pool_user_info = null;\n  let pool_other_address = await other_mint.createAccount(authority1);\n  let raydium_stake_program_id = new PublicKey(lp_config_v4.programid);\n  console.log('--------------------------------开始创建双币复投矿池----', lp_config_v4.name);\n  tokenSwap = await TokenSwap.createTokenFarm(\n      raydium_stake_program_id,\n      connection,\n      farm_payer1,\n      TOKEN_PROGRAM_ID,\n      farm_info1,\n      authority1,\n      pool_farm_address1,\n      pool_lp_address1,\n      pool_fee_lp_address1,\n      pool_ray_address,\n      pool_id,\n      pool_user_info,\n      pool_other_address,\n      TOKEN_SWAP_PROGRAM_ID,\n      nonce,\n      TRADING_FEE_NUMERATOR,\n      TRADING_FEE_DENOMINATOR,\n      OWNER_TRADING_FEE_NUMERATOR,\n      OWNER_TRADING_FEE_DENOMINATOR,\n      OWNER_WITHDRAW_FEE_NUMERATOR,\n      OWNER_WITHDRAW_FEE_DENOMINATOR,\n      HOST_FEE_NUMERATOR,\n      HOST_FEE_DENOMINATOR,\n      REWARD_PER_PLOT,\n      TokenRayUserV4Layout.span\n  );\n\n  console.log('加载复投矿池');\n\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info1.publicKey,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n\n  console.log('******************************************双币复投矿池信息校验成功---------',lp_config_v4.name);\n  console.log(\"poolId:\", \"'\"+farm_info1.publicKey.toString()+\"',\");\n  console.log(\"poolAuthority:\", \"'\"+farmDetail1.authority.toString()+\"',\");\n  console.log(\"poolLpTokenAccount:\", \"'\"+farmDetail1.pool_lp_address.toString()+\"',\");\n  console.log(\"poolRewardTokenAccount:\", \"'\"+farmDetail1.pool_farm_address.toString()+\"',\");\n  console.log(\"poolRayAddress:\", \"'\"+farmDetail1.pool_ray_address.toString()+\"',\");\n  console.log(\"poolRewardTokenAccountB:\", \"'\"+farmDetail1.pool_other_address.toString()+\"',\");\n  console.log(\"poolFeeAccount:\", \"'\"+farmDetail1.pool_fee_lp_address.toString()+\"',\");\n  console.log(\"threePoolUserInfo:\", \"'\"+farmDetail1.pool_user_info.toString()+\"',\");\n  console.log(\"TOKEN_SWAP_PROGRAM_ID:\", \"'\"+TOKEN_SWAP_PROGRAM_ID.toBase58()+\"',\");\n}\n\nexport async function updateVaultsPoolV4(lp_config_v4,reward_per_second): Promise<void> {\n  const connection = await getConnection();\n  farm_payer1 = await new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n\n  // RAY-FIDA poolid\n  let pool_id = new PublicKey(lp_config_v4.threePoolId);\n\n  farm_info1 = new PublicKey(lp_config_v4.poolid)\n  console.log('加载双币复投矿池');\n\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info1,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n  console.log(\"farmDetail1.reward_per_share====================\",farmDetail1.reward_per_share.toString());\n  console.log(\"farmDetail1.reward_per_second====================\",farmDetail1.reward_per_second.toString());\n  pool_farm_address1 = farmDetail1.pool_farm_address;\n  pool_lp_address1 = farmDetail1.pool_lp_address;\n  pool_fee_lp_address1 = farmDetail1.pool_fee_lp_address;\n  pool_ray_address = farmDetail1.pool_ray_address;\n  let pool_user_info = farmDetail1.pool_user_info;\n  let pool_other_address = farmDetail1.pool_other_address;\n  let raydium_stake_program_id = new PublicKey(lp_config_v4.programid);\n\n  console.log('--------------------------------开始更新双币复投矿池----',lp_config_v4.name);\n  // tokenSwap = await TokenSwap.updateTokenFarm(\n  //     raydium_stake_program_id,\n  //     connection,\n  //     farm_payer1,\n  //     TOKEN_PROGRAM_ID,\n  //     farm_info1,\n  //     farmDetail1.authority,\n  //     pool_farm_address1,\n  //     pool_lp_address1,\n  //     pool_fee_lp_address1,\n  //     pool_ray_address,\n  //     pool_id,\n  //     pool_user_info,\n  //     pool_other_address,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.nonce,\n  //     TRADING_FEE_NUMERATOR,\n  //     TRADING_FEE_DENOMINATOR,\n  //     OWNER_TRADING_FEE_NUMERATOR,\n  //     OWNER_TRADING_FEE_DENOMINATOR,\n  //     OWNER_WITHDRAW_FEE_NUMERATOR,\n  //     OWNER_WITHDRAW_FEE_DENOMINATOR,\n  //     HOST_FEE_NUMERATOR,\n  //     HOST_FEE_DENOMINATOR,\n  //     reward_per_second\n  // );\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info1,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n  const use1r = createUniqueAssociatedAccount(new PublicKey('GnxeeXBom4pYCk7ejigh5bGQ8M37hXt8xikjfzrctsMo'),farm_info1);\n  let userInfo = await TokenSwap.loadTokenFarmUser(connection,use1r.publicKey,TOKEN_SWAP_PROGRAM_ID)\n  console.log('total ',farmDetail1.total_supply.toString());\n  // console.log('每秒奖励 ',farmDetail1.reward_per_second.toString());\n  // console.log('每share奖励 ',farmDetail1.reward_per_share.toString());\n  console.log('other address ',farmDetail1.pool_other_address.toString());\n  console.log('poolid ',farmDetail1.pool_id.toString());\n  console.log('pool_user_info ',farmDetail1.pool_user_info.toString());\n  console.log('pool ',lp_config_v4.name);\n  console.log('user amount ',userInfo.amount.toString());\n  console.log('user debt ',userInfo.reward_debt.toString());\n  console.log('******************************************双币复投矿池信息更新成功---------',lp_config_v4.name);\n}\n\n// 根据用户地址和合约地址生成一个唯一地址\nfunction createUniqueAssociatedAccount(user: PublicKey, farm_info: PublicKey): Account {\n  let user_info_account_seed = hmacSha256(user.toBase58(), farm_info.toBase58());\n  let b = Buffer.from(user_info_account_seed);\n  let keyPair = nacl.sign.keyPair.fromSeed(b.subarray(0, 32));\n  return new Account(keyPair.secretKey);\n}\n\n// 质押与提现\nexport async function depositAndWithdrawPool(lp_config): Promise<void> {\n  const connection = await getConnection();\n  farm_payer1 = await new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n\n  // 用户A sol\n  const user = await newAccountWithLamports(connection, 100000000000);\n  const user_lp_address = await lp_mint.createAccount(user.publicKey);\n\n  // lp mint\n  await lp_mint.mintTo(user_lp_address, farm_payer, [], 10000);\n  let user_farm_address = await farm_mint.createAccount(user.publicKey);\n\n\n  // 唯一生成一个关联账户 用户pubkey 与farm_info 联合唯一\n\n  let user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info.publicKey);\n\n  console.log(\"初始化给用户lp数量 10000 \\n 开始质押: 10000 lp\");\n\n  tokenSwap = await TokenSwap.depositFarm(\n    connection,\n    user, // 客服端钱包获取\n    farm_info.publicKey, // 常量\n    farmDetail.authority, // 通过常量获取\n    user_lp_address, // 客服端钱包获取\n    user_farm_address, // 客服端钱包获取\n    user_info_account, // 客服端钱包生成\n    farmDetail.pool_lp_address,\n    user, // 客服端钱包获取\n    farmDetail.token_program_id,\n    TOKEN_SWAP_PROGRAM_ID,\n    farmDetail.pool_farm_address,\n    farmDetail.pool_fee_lp_address,\n    10000,\n  );\n\n  // 比对结果 账户 minA 余额理论为0\n  let userLpAccount = await lp_mint.getAccountInfo(user_lp_address);\n  console.log(\"用户剩余lp数量 \", userLpAccount.amount.toString())\n  assert(userLpAccount.amount == 0)\n\n  // 比对结果 矿池 lp 余额理论为 10000\n  let poolLpAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n\n  console.log(\"矿池剩余lp数量\", poolLpAccount.amount.toString())\n  assert(poolLpAccount.amount == 10000)\n  // 查看\n  console.log(\"******************************************用户质押成功\");\n\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info.publicKey);\n\n  let userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  console.log('用户质押矿池 ：', userDetail.pool_id.toString());\n  console.log('用户质押金额 ：', userDetail.amount.toString());\n  assert(userDetail.amount == 10000)\n  console.log('用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n\n  let userFarmAccount = await farm_mint.getAccountInfo(user_farm_address);\n  console.log(\"收取收益之前 用户 farm 余额\", userFarmAccount.amount.toString());\n\n  let poolFarmAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n\n  sleep(1000 * 30);\n  console.log(\"用户收取收益\")\n  // 收取收益\n  await TokenSwap.harvestFarm(\n    connection,\n    user, // 客服端钱包获取\n    farm_info.publicKey, // 常量\n    farmDetail.authority, // 通过常量获取\n    user_lp_address, // 客服端钱包获取\n    user_farm_address, // 客服端钱包获取\n    user_info_account, // 客服端钱包获取\n    farmDetail.pool_lp_address,\n    user, // 客服端钱包获取\n    farmDetail.token_program_id,\n    TOKEN_SWAP_PROGRAM_ID,\n    farmDetail.pool_farm_address,\n    farmDetail.pool_fee_lp_address,\n    0,\n  );\n  userFarmAccount = await farm_mint.getAccountInfo(user_farm_address);\n  console.log(\"收取收益之后 用户  farm 余额\", userFarmAccount.amount.toString());\n  poolFarmAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info.publicKey);\n\n  userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  console.log('收取收益之后 用户质押金额 ：', userDetail.amount.toString());\n\n  console.log('收取收益之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n\n  // 查看\n  console.log(\"******************************************用户收取收益成功\");\n\n  console.log('开始提现');\n\n  tokenSwap = await TokenSwap.withdrawFarm(\n    connection,\n    user, // 客服端钱包获取\n    farm_info.publicKey, // 常量\n    farmDetail.authority, // 通过常量获取\n    user_lp_address, // 客服端钱包获取\n    user_farm_address, // 客服端钱包获取\n    user_info_account, // 客服端钱包生成\n    farmDetail.pool_lp_address,\n    farmDetail.token_program_id,\n    TOKEN_SWAP_PROGRAM_ID,\n    farmDetail.pool_farm_address,\n    farmDetail.pool_fee_lp_address,\n    10000,\n  );\n\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info.publicKey);\n\n  userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n\n  //\n  console.log('提现之后 用户质押金额 ：', userDetail.amount.toString());\n\n  //\n  assert(userDetail.amount == 0);\n\n  console.log('提现之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n\n  //\n  userFarmAccount = await lp_mint.getAccountInfo(user_lp_address);\n  console.log(\"提现之后 用户 lp 余额\", userFarmAccount.amount.toString());\n\n  poolFarmAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  console.log(\"提现之后 矿池 lp 余额：\", poolFarmAccount.amount.toString());\n\n  console.log(\"******************************************用户提现成功\");\n}\n\n// 复投\nexport async function depositAndWithdrawPoolV2(): Promise<void> {\n  const connection = await getConnection();\n\n  // 用户A sol\n  // const user = await newAccountWithLamports(connection, 100000000000);\n  const user = new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n\n  // farm v1\n  farm_mint1 = new Token(connection,new PublicKey('CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d'),TOKEN_PROGRAM_ID,user);\n  // RAY\n  farm_mint = new Token(connection,new PublicKey('4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R'),TOKEN_PROGRAM_ID,user);\n\n  // RAY-USDC\n  lp_mint = new Token(connection,new PublicKey(lp_config.lp),TOKEN_PROGRAM_ID,user);\n  // RAY-USDC poolid\n  let ray_usdc_pool_id = new PublicKey(lp_config.poolid);\n  // 复投池\n  farm_info1 = new PublicKey('DSSRNh74r7AdrVFxeWZxdXqCW6icqC84C16bhcsQayUp');\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info1,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n\n  console.log('farm_ray_address',farmDetail1.pool_ray_address.toString());\n  // 自己的LP地址\n  const user_lp_address = new PublicKey('FBGvfryiPuTCr8dATruk2d1B2eJ23agAuwZ8fia1XiZH');\n  //=====\n  // lp mint\n  // await lp_mint.mintTo(user_lp_address, user, [], 10000);\n  // let user_farm_address = await farm_mint1.createAccount(user.publicKey);\n  let user_farm_address = new PublicKey('EtKp9jWCTHEUnvUPXVRAj9D25Tg8vqr3KUGoNK66Qy7X');\n\n  // let user_ray_address = await farm_mint.createAccount(user.publicKey);\n  let user_ray_address = new PublicKey('Ceo2j3wYZiWG6mvu3uxoUQ3GBefiUNBQnzBFf9xr4s73');\n  let raydium_stake_program_id = new PublicKey(lp_config.programid)\n\n  // 唯一生成一个关联账户 用户pubkey 与farm_info 联合唯一\n\n  let user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1);\n  // let user_info_account = new PublicKey('75szQsdeVhet8civkSUxZW8sXGYCDATnrBqC1mcCVU5G');\n\n  console.log(\"初始化给用户lp数量 10000 \\n 开始质押: 10000 lp\");\n  let rayUsdcFarmAuth = new PublicKey(lp_config.thirdAuth);\n  let rayUsdcFarmReward = new PublicKey(lp_config.thirdRayAddr);\n  let rayUsdcLp = new PublicKey(lp_config.thirdLpAddr);\n  let depositAmount = 1000000;\n  // tokenSwap = await TokenSwap.depositRaydium(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     user, // 客服端钱包获取\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     raydium_stake_program_id,\n  //     ray_usdc_pool_id,\n  //     rayUsdcFarmAuth,\n  //     farmDetail1.pool_user_info,\n  //     rayUsdcFarmReward,\n  //     rayUsdcLp,\n  //     depositAmount,\n  // );\n\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info1,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n\n  console.log('farmDetail1',farmDetail1.reward_per_share.toString(),farmDetail1.ray_per_share.toString(),\n      farmDetail1.last_update.toString(),);\n\n  // 比对结果 账户 minA 余额理论为0\n  // let userLpAccount = await lp_mint.getAccountInfo(user_lp_address);\n  // console.log(\"用户剩余lp数量 \", userLpAccount.amount.toString())\n  // assert(userLpAccount.amount == 0)\n  //\n  // // 比对结果 矿池 lp 余额理论为 10000\n  // let poolLpAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  //\n  // console.log(\"矿池剩余lp数量\", poolLpAccount.amount.toString())\n  // assert(poolLpAccount.amount == 10000)\n  // 查看\n  console.log(\"******************************************用户质押成功\");\n\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1);\n  //\n  let userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  console.log('用户质押矿池 ：', userDetail.pool_id.toString());\n  console.log('用户质押金额 ：', userDetail.amount.toString());\n  console.log('用户理论已领取金额 ：', userDetail.reward_debt.toString());\n  // assert(userDetail.amount == 10000)\n  // console.log('用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  //\n  // let userFarmAccount = await farm_mint1.getAccountInfo(user_farm_address);\n  // console.log(\"收取收益之前 用户 farm 余额\", userFarmAccount.amount.toString());\n  //\n  // let poolFarmAccount = await farm_mint1.getAccountInfo(farmDetail1.pool_farm_address);\n  // console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  //\n  // let userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"收取收益之前 用户 ray 余额\", userRayAccount.amount.toString());\n  //\n  // let poolRayAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  // console.log(\"矿池ray剩余：\", poolRayAccount.amount.toString());\n\n  // console.log(\"用户收取收益\")\n  // // 收取收益\n  // await TokenSwap.harvestFarmV2(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1.publicKey, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     user, // 客服端钱包获取\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farm_info.publicKey,\n  //     farmDetail.authority,\n  //     farmDetail1.pool_user_info,\n  //     farmDetail.pool_farm_address,\n  //     farmDetail.pool_lp_address,\n  //     farmDetail.pool_fee_lp_address,\n  //     0,\n  // );\n  // userFarmAccount = await farm_mint1.getAccountInfo(user_farm_address);\n  // console.log(\"收取收益之后 用户  farm 余额\", userFarmAccount.amount.toString());\n  // poolFarmAccount = await farm_mint1.getAccountInfo(farmDetail1.pool_farm_address);\n  // console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  //\n  // user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1.publicKey);\n  //\n  // userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  // console.log('收取收益之后 用户质押金额 ：', userDetail.amount.toString());\n  //\n  // console.log('收取收益之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  // console.log('收取收益之后 用户理论已收取RAY奖励 ：', userDetail.ray_debt.toString());\n  //\n  //\n  // userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"收取收益之后 用户 ray 余额\", userRayAccount.amount.toString());\n  //\n  // poolRayAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  // console.log(\"矿池ray剩余：\", poolRayAccount.amount.toString());\n  //\n  // // 查看\n  // console.log(\"******************************************用户收取收益成功\");\n\n  console.log('开始提现');\n\n  tokenSwap = await TokenSwap.withdrawRaydium(\n      connection,\n      user, // 客服端钱包获取\n      farm_info1, // 常量\n      farmDetail1.authority, // 通过常量获取\n      user_lp_address, // 客服端钱包获取\n      user_farm_address, // 客服端钱包获取\n      user_info_account, // 客服端钱包生成\n      farmDetail1.pool_lp_address,\n      farmDetail1.token_program_id,\n      TOKEN_SWAP_PROGRAM_ID,\n      farmDetail1.pool_farm_address,\n      farmDetail1.pool_fee_lp_address,\n      farmDetail1.pool_ray_address,\n      user_ray_address,\n      raydium_stake_program_id,\n      ray_usdc_pool_id,\n      rayUsdcFarmAuth,\n      farmDetail1.pool_user_info,\n      rayUsdcFarmReward,\n      rayUsdcLp,\n      990000,\n  );\n\n  // user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1.publicKey);\n  //\n  // userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  //\n  // //\n  // console.log('提现之后 用户质押金额 ：', userDetail.amount.toString());\n  //\n  // //\n  // assert(userDetail.amount == 0);\n  //\n  // console.log('提现之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  // console.log('提现之后 用户理论已收取RAY奖励 ：', userDetail.ray_debt.toString());\n  // userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"提现之后 用户 ray 余额\", userRayAccount.amount.toString());\n  // //\n  // userFarmAccount = await lp_mint.getAccountInfo(user_lp_address);\n  // console.log(\"提现之后 用户 lp 余额\", userFarmAccount.amount.toString());\n  //\n  // poolFarmAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  // console.log(\"提现之后 矿池 lp 余额：\", poolFarmAccount.amount.toString());\n\n\n\n  console.log(\"******************************************用户提现成功\");\n}\n// 复投\nexport async function depositAndWithdrawPoolV4(): Promise<void> {\n  const connection = await getConnection();\n\n  // 用户A sol\n  // const user = await newAccountWithLamports(connection, 100000000000);\n  const user = new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n  // farm v1\n  farm_mint1 = new Token(connection,new PublicKey('CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d'),TOKEN_PROGRAM_ID,user);\n  // RAY\n  farm_mint = new Token(connection,new PublicKey('4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R'),TOKEN_PROGRAM_ID,user);\n  // FIDA\n  other_mint = new Token(connection,new PublicKey('EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp'),TOKEN_PROGRAM_ID,user);\n  // RAY-FIDA\n  lp_mint = new Token(connection,new PublicKey('DsBuznXRTmzvEdb36Dx3aVLVo1XmH7r1PRZUFugLPTFv'),TOKEN_PROGRAM_ID,user);\n  // RAY-FIDA poolid\n  let ray_usdc_pool_id = new PublicKey('8rAdapvcC5vYNLXzChMgt56s6HCQGE6Lbo469g3WRTUh');\n  // 复投池\n  farm_info1 = new PublicKey('7WRRSzFES8a13so6hQAhVtpkEBtLwsdBiQH6vhgSX7KG');\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info1,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n  console.log(farmDetail1.pool_other_address.toString(),\"pool_other_address\",farmDetail1.pool_user_info.toString(),);\n  console.log(farmDetail1.token_program_id.toString(),);\n  console.log(\"farmDetail1.ray_per_share\",farmDetail1.ray_per_share.toString(),);\n  console.log(\"farmDetail1.ray_per_share\",farmDetail1.ray_total_supply.toString(),);\n  console.log(\"farmDetail1.last_update\",farmDetail1.last_update.toString(),);\n  // 自己的LP地址\n  const user_lp_address = new PublicKey('J5kjbdzBpAmseNHirskBw1Fg9Uj4eyVK8PLzVH4ZENLB');\n  //=====\n  // lp mint\n  // await lp_mint.mintTo(user_lp_address, user, [], 10000);\n  // let user_farm_address = await farm_mint1.createAccount(user.publicKey);\n  let user_farm_address = new PublicKey('FpFtrv4ZNDzdhcUvU6ekdrL88RXTYzJSzpYBEP4pyHqT');\n\n  // let user_ray_address = await farm_mint.createAccount(user.publicKey);\n  let user_ray_address = new PublicKey('Ceo2j3wYZiWG6mvu3uxoUQ3GBefiUNBQnzBFf9xr4s73');\n  let raydium_stake_program_id = new PublicKey('CBuCnLe26faBpcBP2fktp4rp8abpcAnTWft6ZrP5Q4T')\n\n  // 唯一生成一个关联账户 用户pubkey 与farm_info 联合唯一\n\n  let user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1);\n\n  console.log(\"初始化给用户lp数量 10000 \\n 开始质押: 10000 lp\");\n  let rayUsdcFarmAuth = new PublicKey('EcCKf3mgPtL6dNNAVG4gQQtLkAoTAUdf5vzFukkrviWq');\n  let rayUsdcFarmReward = new PublicKey('7vnPTB2HAXFUAV5iiVZTNHgAnVYjgXcdumbbqfeK6ugp');\n  let rayUsdcLpAccount = new PublicKey('H6kzwNNg9zbgC1YBjvCN4BdebtA4NusvgUhUSDZoz8rP');\n  let depositAmount = 1000000;\n  let farm_other_address = new PublicKey('EGHdQm9KGLz6nw7W4rK13DyAMMJcGP9RpzCJaXiq75kQ');\n  let user_other_address = new PublicKey('GCAo54WVTuoDyqzjeSB7YQDHFDU4a5Pz6YKi9g7P2p7a');\n  // tokenSwap = await TokenSwap.depositRaydiumV4(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     user, // 客服端钱包获取\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     raydium_stake_program_id,\n  //     ray_usdc_pool_id,\n  //     rayUsdcFarmAuth,\n  //     farmDetail1.pool_user_info,\n  //     rayUsdcFarmReward,\n  //     rayUsdcLpAccount,\n  //     farmDetail1.pool_other_address,\n  //     farm_other_address,\n  //     user_other_address,\n  //     depositAmount,\n  // );\n\n  // 比对结果 账户 minA 余额理论为0\n  // let userLpAccount = await lp_mint.getAccountInfo(user_lp_address);\n  // console.log(\"用户剩余lp数量 \", userLpAccount.amount.toString())\n  // assert(userLpAccount.amount == 0)\n  //\n  // // 比对结果 矿池 lp 余额理论为 10000\n  // let poolLpAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  //\n  // console.log(\"矿池剩余lp数量\", poolLpAccount.amount.toString())\n  // assert(poolLpAccount.amount == 10000)\n  // 查看\n  console.log(\"******************************************用户质押成功\");\n\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1);\n  //\n  let userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  console.log('用户质押矿池 ：', userDetail.pool_id.toString());\n  console.log('用户质押金额 ：', userDetail.amount.toString());\n  console.log('用户理论已领取金额 ：', userDetail.reward_debt.toString());\n  // assert(userDetail.amount == 10000)\n  // console.log('用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  //\n  // let userFarmAccount = await farm_mint1.getAccountInfo(user_farm_address);\n  // console.log(\"收取收益之前 用户 farm 余额\", userFarmAccount.amount.toString());\n  //\n  // let poolFarmAccount = await farm_mint1.getAccountInfo(farmDetail1.pool_farm_address);\n  // console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  //\n  // let userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"收取收益之前 用户 ray 余额\", userRayAccount.amount.toString());\n  //\n  // let poolRayAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  // console.log(\"矿池ray剩余：\", poolRayAccount.amount.toString());\n\n  // console.log(\"用户收取收益\")\n  // // 收取收益\n  // await TokenSwap.harvestFarmV2(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1.publicKey, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     user, // 客服端钱包获取\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farm_info.publicKey,\n  //     farmDetail.authority,\n  //     farmDetail1.pool_user_info,\n  //     farmDetail.pool_farm_address,\n  //     farmDetail.pool_lp_address,\n  //     farmDetail.pool_fee_lp_address,\n  //     0,\n  // );\n  // userFarmAccount = await farm_mint1.getAccountInfo(user_farm_address);\n  // console.log(\"收取收益之后 用户  farm 余额\", userFarmAccount.amount.toString());\n  // poolFarmAccount = await farm_mint1.getAccountInfo(farmDetail1.pool_farm_address);\n  // console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  //\n  // user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1.publicKey);\n  //\n  // userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  // console.log('收取收益之后 用户质押金额 ：', userDetail.amount.toString());\n  //\n  // console.log('收取收益之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  // console.log('收取收益之后 用户理论已收取RAY奖励 ：', userDetail.ray_debt.toString());\n  //\n  //\n  // userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"收取收益之后 用户 ray 余额\", userRayAccount.amount.toString());\n  //\n  // poolRayAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  // console.log(\"矿池ray剩余：\", poolRayAccount.amount.toString());\n  //\n  // // 查看\n  // console.log(\"******************************************用户收取收益成功\");\n\n  console.log('开始提现');\n\n  // tokenSwap = await TokenSwap.withdrawRaydiumV4(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     raydium_stake_program_id,\n  //     ray_usdc_pool_id,\n  //     rayUsdcFarmAuth,\n  //     farmDetail1.pool_user_info,\n  //     rayUsdcFarmReward,\n  //     rayUsdcLpAccount,\n  //     farmDetail1.pool_other_address,\n  //     farm_other_address,\n  //     user_other_address,\n  //     depositAmount,\n  // );\n\n  // user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1.publicKey);\n  //\n  // userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  //\n  // //\n  // console.log('提现之后 用户质押金额 ：', userDetail.amount.toString());\n  //\n  // //\n  // assert(userDetail.amount == 0);\n  //\n  // console.log('提现之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  // console.log('提现之后 用户理论已收取RAY奖励 ：', userDetail.ray_debt.toString());\n  // userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"提现之后 用户 ray 余额\", userRayAccount.amount.toString());\n  // //\n  // userFarmAccount = await lp_mint.getAccountInfo(user_lp_address);\n  // console.log(\"提现之后 用户 lp 余额\", userFarmAccount.amount.toString());\n  //\n  // poolFarmAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  // console.log(\"提现之后 矿池 lp 余额：\", poolFarmAccount.amount.toString());\n\n\n\n  console.log(\"******************************************用户提现成功\");\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1622815177113
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/token-swap.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/token-swap.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/token-swap.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/token-swap.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/",
        "sourceFileName": "token-swap.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenSwap = exports.CurveType = exports.TokenRayUserV4Layout = exports.TokenRayUserLayout = exports.TokenFarmUserLayout = exports.TokenFarmLayout = exports.Numberu128 = exports.Numberu64 = exports.TOKEN_SWAP_PROGRAM_ID = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _assert = _interopRequireDefault(require(\"assert\"));\n\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\n\nvar _buffer = require(\"buffer\");\n\nvar BufferLayout = _interopRequireWildcard(require(\"buffer-layout\"));\n\nvar _web = require(\"@solana/web3.js\");\n\nvar Layout = _interopRequireWildcard(require(\"./layout\"));\n\nvar _sendAndConfirmTransaction = require(\"./util/send-and-confirm-transaction\");\n\nvar _account = require(\"./util/account\");\n\nvar _splToken = require(\"@solana/spl-token\");\n\nconst TOKEN_SWAP_PROGRAM_ID = new _web.PublicKey( // 'HTpjeN1FocdopyJxwFJzBsQ5edeDVXkNB3ssePWmhfyj',\n'DgUj4FuTYjFVTK6yT73MuGNS3wV3FPXa4Kp3Mqw87a77'); //\n\n/**\n * Some amount of tokens\n */\n\nexports.TOKEN_SWAP_PROGRAM_ID = TOKEN_SWAP_PROGRAM_ID;\n\nclass Numberu64 extends _bn.default {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer() {\n    const a = super.toArray().reverse();\n\n    const b = _buffer.Buffer.from(a);\n\n    if (b.length === 8) {\n      return b;\n    }\n\n    (0, _assert.default)(b.length < 8, 'Numberu64 too large');\n\n    const zeroPad = _buffer.Buffer.alloc(8);\n\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n  /**\n   * Construct a Numberu64 from Buffer representation\n   */\n\n\n  static fromBuffer(buffer) {\n    (0, _assert.default)(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    return new Numberu64([...buffer].reverse().map(i => `00${i.toString(16)}`.slice(-2)).join(''), 16);\n  }\n\n}\n/**\n * Some amount of tokens\n */\n\n\nexports.Numberu64 = Numberu64;\n\nclass Numberu128 extends _bn.default {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer() {\n    const a = super.toArray().reverse();\n\n    const b = _buffer.Buffer.from(a);\n\n    if (b.length === 16) {\n      return b;\n    }\n\n    (0, _assert.default)(b.length < 16, 'Numberu64 too large');\n\n    const zeroPad = _buffer.Buffer.alloc(16);\n\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n  /**\n   * Construct a Numberu64 from Buffer representation\n   */\n\n\n  static fromBuffer(buffer) {\n    (0, _assert.default)(buffer.length === 16, `Invalid buffer length: ${buffer.length}`);\n    return new Numberu64([...buffer].reverse().map(i => `00${i.toString(16)}`.slice(-2)).join(''), 16);\n  }\n\n}\n/**\n * // farm 结构体\n * @private\n */\n\n\nexports.Numberu128 = Numberu128;\nconst TokenFarmLayout = BufferLayout.struct([BufferLayout.u8('isInitialized'), // 1-2\nBufferLayout.u8('nonce'), // 1\nLayout.publicKey('tokenProgramId'), Layout.publicKey('poolFarmAddress'), // 矿池 farm地址\nLayout.publicKey('poolLpAddress'), // 矿池 lp地址\nLayout.publicKey('poolFeeLpAddress'), // 矿池 lp手续费地址\nLayout.uint64('tradeFeeNumerator'), Layout.uint64('tradeFeeDenominator'), Layout.uint64('ownerTradeFeeNumerator'), Layout.uint64('ownerTradeFeeDenominator'), Layout.uint64('ownerWithdrawFeeNumerator'), Layout.uint64('ownerWithdrawFeeDenominator'), Layout.uint64('hostFeeNumerator'), Layout.uint64('hostFeeDenominator'), Layout.uint64('lastUpdate'), // 最后一次slot\nLayout.uint64('rewardPerSecond'), // 每slot奖励\nLayout.uint128('rewardPerShare'), // 每个份额奖励\nLayout.uint64('totalSupply'), // 总质押量\nLayout.uint128('rayPerShare'), // ray 每份额奖励\nLayout.uint64('rayTotalSupply'), // 总质押量\nLayout.uint128('otherPerShare'), // other 每份额奖励\nLayout.uint64('otherTotalSupply'), // 总质押量\nLayout.publicKey('owner'), // owner\nLayout.publicKey('poolRayAddress'), // owner\nLayout.publicKey('poolId'), // owner\nLayout.publicKey('poolUserInfo'), // owner\nLayout.publicKey('poolOtherAddress') // owner\n]);\n/**\n * // farm user 结构体\n * @private\n */\n\nexports.TokenFarmLayout = TokenFarmLayout;\nconst TokenFarmUserLayout = BufferLayout.struct([BufferLayout.u8('isInitialized'), // 1-2\nLayout.publicKey('poolId'), //\nLayout.uint64('amount'), // 质押金额\nLayout.uint64('rewardDebt'), // 理论已领取奖励\nLayout.uint64('rayDebt'), // 理论ray已领取奖励\nLayout.uint64('otherDebt'), // 理论ray已领取奖励\nLayout.publicKey('userLpAddress') // 理论ray已领取奖励\n]);\n/**\n * // farm user 结构体\n * @private\n */\n\nexports.TokenFarmUserLayout = TokenFarmUserLayout;\nconst TokenRayUserLayout = BufferLayout.struct([Layout.uint64('state'), // 8 + 32 + 32 + 8 + 8\nLayout.publicKey('poolId'), Layout.publicKey('stakerOwner'), Layout.uint64('depositBalance'), Layout.uint64('rewardDebt')]);\n/**\n * // farm user 结构体\n * @private\n */\n\nexports.TokenRayUserLayout = TokenRayUserLayout;\nconst TokenRayUserV4Layout = BufferLayout.struct([Layout.uint64('state'), Layout.publicKey('poolId'), Layout.publicKey('stakerOwner'), Layout.uint64('depositBalance'), Layout.uint64('rewardDebt'), Layout.uint64('rewardDebtB')]);\nexports.TokenRayUserV4Layout = TokenRayUserV4Layout;\nconst CurveType = Object.freeze({\n  ConstantProduct: 0,\n  // Constant product curve, Uniswap-style\n  ConstantPrice: 1,\n  // Constant price curve, always X amount of A token for 1 B token, where X is defined at init\n  Offset: 3 // Offset curve, like Uniswap, but with an additional offset on the token B side\n\n});\n/**\n * A program to exchange tokens against a pool of liquidity\n */\n\nexports.CurveType = CurveType;\n\nclass TokenSwap {\n  /**\n   * @private\n   */\n\n  /**\n   * Program Identifier for the Token program\n   */\n\n  /**\n   * The public key for the fee account receiving trade and/or withdrawal fees\n   */\n\n  /**\n   * Authority\n   */\n\n  /**\n   * Fee payer\n   */\n\n  /**\n   * Create a Token object attached to the specific token\n   *\n   * @param connection The connection to use\n   * @param tokenSwap The token swap account\n   * @param swapProgramId The program ID of the token-swap program\n   * @param tokenProgramId The program ID of the token program\n   * @param poolToken The pool token\n   * @param authority The authority over the swap and accounts\n   * @param tokenAccountA: The token swap's Token A account\n   * @param tokenAccountB: The token swap's Token B account\n   * @param payer Pays for the transaction\n   */\n  constructor(connection, payer) {\n    (0, _defineProperty2.default)(this, \"connection\", void 0);\n    (0, _defineProperty2.default)(this, \"tokenProgramId\", void 0);\n    (0, _defineProperty2.default)(this, \"feeAccount\", void 0);\n    (0, _defineProperty2.default)(this, \"authority\", void 0);\n    (0, _defineProperty2.default)(this, \"payer\", void 0);\n  }\n  /**\n   * Get the minimum balance for the token swap account to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n\n\n  static async getMinBalanceRentForExemptTokenSwap(connection) {\n    return await connection.getMinimumBalanceForRentExemption(TokenFarmLayout.span);\n  }\n\n  static createInitFarmInstruction(tokenProgramId, // 通用token 转账 的地址\n  farm_info, //\n  authority, //\n  pool_farm_address, //\n  pool_lp_address, //\n  pool_fee_lp_address, //\n  pool_ray_address, //\n  pool_id, //\n  pool_user_info, //\n  pool_other_address, //\n  swapProgramId, // swap-farm 程序地址\n  nonce, tradeFeeNumerator, tradeFeeDenominator, ownerTradeFeeNumerator, ownerTradeFeeDenominator, ownerWithdrawFeeNumerator, ownerWithdrawFeeDenominator, hostFeeNumerator, hostFeeDenominator, reward_per_second) {\n    // 时间合约地址 记录区块的时间信息 slot\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, // 通用token地址\n    {\n      pubkey: farm_info.publicKey,\n      isSigner: false,\n      isWritable: true\n    }, // farm 矿池地址\n    {\n      pubkey: authority,\n      isSigner: false,\n      isWritable: false\n    }, // 矿池auth\n    {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: false\n    }, // 矿池对应的farm接收地址\n    {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: false\n    }, // 矿池对应的lp接收地址\n    {\n      pubkey: pool_fee_lp_address,\n      isSigner: false,\n      isWritable: false\n    }, // 手续费地址\n    {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_ray_address,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_id,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_user_info,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_other_address,\n      isSigner: false,\n      isWritable: false\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u8('nonce'), BufferLayout.nu64('tradeFeeNumerator'), BufferLayout.nu64('tradeFeeDenominator'), BufferLayout.nu64('ownerTradeFeeNumerator'), BufferLayout.nu64('ownerTradeFeeDenominator'), BufferLayout.nu64('ownerWithdrawFeeNumerator'), BufferLayout.nu64('ownerWithdrawFeeDenominator'), BufferLayout.nu64('hostFeeNumerator'), BufferLayout.nu64('hostFeeDenominator'), BufferLayout.nu64('reward_per_second')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 0,\n        // InitializeFarm instruction\n        nonce,\n        tradeFeeNumerator,\n        tradeFeeDenominator,\n        ownerTradeFeeNumerator,\n        ownerTradeFeeDenominator,\n        ownerWithdrawFeeNumerator,\n        ownerWithdrawFeeDenominator,\n        hostFeeNumerator,\n        hostFeeDenominator,\n        reward_per_second\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static updateFarmInstruction(tokenProgramId, // 通用token 转账 的地址\n  farm_info, //\n  authority, //\n  pool_farm_address, //\n  pool_lp_address, //\n  pool_fee_lp_address, //\n  pool_ray_address, //\n  pool_id, //\n  pool_user_info, //\n  pool_other_address, //\n  swapProgramId, // swap-farm 程序地址\n  nonce, tradeFeeNumerator, tradeFeeDenominator, ownerTradeFeeNumerator, ownerTradeFeeDenominator, ownerWithdrawFeeNumerator, ownerWithdrawFeeDenominator, hostFeeNumerator, hostFeeDenominator, reward_per_second) {\n    // 时间合约地址 记录区块的时间信息 slot\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, // 通用token地址\n    {\n      pubkey: farm_info,\n      isSigner: false,\n      isWritable: true\n    }, // farm 矿池地址\n    {\n      pubkey: authority,\n      isSigner: false,\n      isWritable: false\n    }, // 矿池auth\n    {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: false\n    }, // 矿池对应的farm接收地址\n    {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: false\n    }, // 矿池对应的lp接收地址\n    {\n      pubkey: pool_fee_lp_address,\n      isSigner: false,\n      isWritable: false\n    }, // 手续费地址\n    {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_ray_address,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_id,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_user_info,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_other_address,\n      isSigner: false,\n      isWritable: false\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u8('nonce'), BufferLayout.nu64('tradeFeeNumerator'), BufferLayout.nu64('tradeFeeDenominator'), BufferLayout.nu64('ownerTradeFeeNumerator'), BufferLayout.nu64('ownerTradeFeeDenominator'), BufferLayout.nu64('ownerWithdrawFeeNumerator'), BufferLayout.nu64('ownerWithdrawFeeDenominator'), BufferLayout.nu64('hostFeeNumerator'), BufferLayout.nu64('hostFeeDenominator'), BufferLayout.nu64('reward_per_second')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 0,\n        // InitializeFarm instruction\n        nonce,\n        tradeFeeNumerator,\n        tradeFeeDenominator,\n        ownerTradeFeeNumerator,\n        ownerTradeFeeDenominator,\n        ownerWithdrawFeeNumerator,\n        ownerWithdrawFeeDenominator,\n        hostFeeNumerator,\n        hostFeeDenominator,\n        reward_per_second\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static depositFarmInstruction(farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户接收farm奖励的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 矿池接收lp的地址\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, amount) {\n    // 时间合约地址\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: farm_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池信息\n    {\n      pubkey: authority_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池代币owner\n    {\n      pubkey: user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_transfer_authority_info,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_fee_lp_account,\n      isSigner: false,\n      isWritable: true\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.nu64('amount')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 7,\n        // Deposit instruction\n        amount\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static depositFarmV2Instruction(farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户接收farm奖励的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 矿池接收lp的地址\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, farm_fee_lp_address, amount) {\n    // 时间合约地址\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: farm_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池信息\n    {\n      pubkey: authority_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池代币owner\n    {\n      pubkey: user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_transfer_authority_info,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_fee_lp_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_program_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_pool_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_authority_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_fee_lp_address,\n      isSigner: false,\n      isWritable: true\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.nu64('amount')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 11,\n        // Deposit V2 instruction\n        amount\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static depositRaydiumInstruction(farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户接收farm奖励的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 矿池接收lp的地址\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, amount) {\n    // 时间合约地址\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: farm_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池信息\n    {\n      pubkey: authority_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池代币owner\n    {\n      pubkey: user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_transfer_authority_info,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_fee_lp_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_authority_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_pool_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_program_id,\n      isSigner: false,\n      isWritable: true\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.nu64('amount')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 3,\n        // Deposit Raydium instruction\n        amount\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static depositRaydiumV4Instruction(farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户接收farm奖励的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 矿池接收lp的地址\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, pool_other_address, farm_other_address, user_other_address, amount) {\n    // 时间合约地址\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: farm_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池信息\n    {\n      pubkey: authority_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池代币owner\n    {\n      pubkey: user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_transfer_authority_info,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_fee_lp_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_authority_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_pool_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_program_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_other_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_other_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_other_address,\n      isSigner: false,\n      isWritable: true\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.nu64('amount')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 7,\n        // Deposit Raydium instruction\n        amount\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static withdrawRaydiumV4Instruction(farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户接收farm奖励的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 矿池接收lp的地址\n  pool_lp_address, // 矿池接收lp的地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, pool_other_address, farm_other_address, user_other_address, amount) {\n    // 时间合约地址\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: farm_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池信息\n    {\n      pubkey: authority_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池代币owner\n    {\n      pubkey: user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_fee_lp_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_authority_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_pool_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_program_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_other_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_other_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_other_address,\n      isSigner: false,\n      isWritable: true\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.nu64('amount')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 8,\n        // Withdraw Raydium V4 instruction\n        amount\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static withdrawRaydiumInstruction(farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户接收farm奖励的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 矿池接收lp的地址\n  pool_lp_address, // 矿池接收lp的地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, amount) {\n    // 时间合约地址\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: farm_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池信息\n    {\n      pubkey: authority_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池代币owner\n    {\n      pubkey: user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_fee_lp_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_authority_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_pool_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_program_id,\n      isSigner: false,\n      isWritable: true\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.nu64('amount')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 4,\n        // Withdraw Raydium instruction\n        amount\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static withdrawFarmV2Instruction(farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户接收farm奖励的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 矿池接收lp的地址\n  pool_lp_address, // 矿池接收lp的地址\n  tokenProgramId, //\n  swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, farm_fee_lp_address, amount) {\n    // 时间合约地址\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: farm_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池信息\n    {\n      pubkey: authority_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池代币owner\n    {\n      pubkey: user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_fee_lp_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_program_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_pool_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_authority_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_fee_lp_address,\n      isSigner: false,\n      isWritable: true\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.nu64('amount')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 12,\n        // Withdraw V2 instruction\n        amount\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static withdrawFarmInstruction(farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户接收farm奖励的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 矿池接收lp的地址\n  pool_lp_address, // 矿池接收lp的地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, amount) {\n    // 时间合约地址\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: farm_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池信息\n    {\n      pubkey: authority_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池代币owner\n    {\n      pubkey: user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_fee_lp_account,\n      isSigner: false,\n      isWritable: true\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.nu64('amount')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 8,\n        // Withdraw instruction\n        amount\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static async loadTokenSwap(connection, address, programId, payer) {\n    const data = await (0, _account.loadAccount)(connection, address, programId);\n    const tokenSwapData = TokenSwapLayout.decode(data);\n\n    if (!tokenSwapData.isInitialized) {\n      throw new Error(`Invalid token swap state`);\n    }\n\n    const [authority] = await _web.PublicKey.findProgramAddress([address.toBuffer()], programId);\n    const poolToken = new _web.PublicKey(tokenSwapData.tokenPool);\n    const feeAccount = new _web.PublicKey(tokenSwapData.feeAccount);\n    const tokenAccountA = new _web.PublicKey(tokenSwapData.tokenAccountA);\n    const tokenAccountB = new _web.PublicKey(tokenSwapData.tokenAccountB);\n    const mintA = new _web.PublicKey(tokenSwapData.mintA);\n    const mintB = new _web.PublicKey(tokenSwapData.mintB);\n    const tokenProgramId = new _web.PublicKey(tokenSwapData.tokenProgramId);\n    const tradeFeeNumerator = Numberu64.fromBuffer(tokenSwapData.tradeFeeNumerator);\n    const tradeFeeDenominator = Numberu64.fromBuffer(tokenSwapData.tradeFeeDenominator);\n    const ownerTradeFeeNumerator = Numberu64.fromBuffer(tokenSwapData.ownerTradeFeeNumerator);\n    const ownerTradeFeeDenominator = Numberu64.fromBuffer(tokenSwapData.ownerTradeFeeDenominator);\n    const ownerWithdrawFeeNumerator = Numberu64.fromBuffer(tokenSwapData.ownerWithdrawFeeNumerator);\n    const ownerWithdrawFeeDenominator = Numberu64.fromBuffer(tokenSwapData.ownerWithdrawFeeDenominator);\n    const hostFeeNumerator = Numberu64.fromBuffer(tokenSwapData.hostFeeNumerator);\n    const hostFeeDenominator = Numberu64.fromBuffer(tokenSwapData.hostFeeDenominator);\n    const curveType = tokenSwapData.curveType;\n    return new TokenSwap(connection, address, programId, tokenProgramId, poolToken, feeAccount, authority, tokenAccountA, tokenAccountB, mintA, mintB, tradeFeeNumerator, tradeFeeDenominator, ownerTradeFeeNumerator, ownerTradeFeeDenominator, ownerWithdrawFeeNumerator, ownerWithdrawFeeDenominator, hostFeeNumerator, hostFeeDenominator, curveType, payer);\n  }\n\n  static async loadTokenFarm(connection, address, programId) {\n    const data = await (0, _account.loadAccount)(connection, address, programId);\n    const tokenSwapData = TokenFarmLayout.decode(data);\n\n    if (!tokenSwapData.isInitialized) {\n      throw new Error(`未初始化`);\n    }\n\n    const [authority] = await _web.PublicKey.findProgramAddress([address.toBuffer()], programId);\n    let poolInfo = {};\n    poolInfo['authority'] = authority;\n    poolInfo['tradeFeeNumerator'] = Numberu64.fromBuffer(tokenSwapData.tradeFeeNumerator);\n    poolInfo['ownerTradeFeeNumerator'] = Numberu64.fromBuffer(tokenSwapData.ownerTradeFeeNumerator);\n    poolInfo['tradeFeeDenominator'] = Numberu64.fromBuffer(tokenSwapData.tradeFeeDenominator);\n    poolInfo['ownerTradeFeeDenominator'] = Numberu64.fromBuffer(tokenSwapData.ownerTradeFeeDenominator);\n    poolInfo['ownerWithdrawFeeNumerator'] = Numberu64.fromBuffer(tokenSwapData.ownerWithdrawFeeNumerator);\n    poolInfo['ownerWithdrawFeeDenominator'] = Numberu64.fromBuffer(tokenSwapData.ownerWithdrawFeeDenominator);\n    poolInfo['hostFeeNumerator'] = Numberu64.fromBuffer(tokenSwapData.hostFeeNumerator);\n    poolInfo['hostFeeDenominator'] = Numberu64.fromBuffer(tokenSwapData.hostFeeDenominator);\n    poolInfo['nonce'] = tokenSwapData.nonce;\n    poolInfo['token_program_id'] = new _web.PublicKey(tokenSwapData.tokenProgramId);\n    poolInfo['pool_farm_address'] = new _web.PublicKey(tokenSwapData.poolFarmAddress);\n    poolInfo['pool_lp_address'] = new _web.PublicKey(tokenSwapData.poolLpAddress);\n    poolInfo['pool_fee_lp_address'] = new _web.PublicKey(tokenSwapData.poolFeeLpAddress);\n    poolInfo['last_update'] = Numberu64.fromBuffer(tokenSwapData.lastUpdate);\n    poolInfo['reward_per_second'] = Numberu64.fromBuffer(tokenSwapData.rewardPerSecond);\n    poolInfo['reward_per_share'] = Numberu128.fromBuffer(tokenSwapData.rewardPerShare);\n    poolInfo['total_supply'] = Numberu64.fromBuffer(tokenSwapData.totalSupply);\n    poolInfo['ray_per_share'] = Numberu128.fromBuffer(tokenSwapData.rayPerShare);\n    poolInfo['other_per_share'] = Numberu128.fromBuffer(tokenSwapData.otherPerShare);\n    poolInfo['ray_total_supply'] = Numberu64.fromBuffer(tokenSwapData.rayTotalSupply);\n    poolInfo['pool_ray_address'] = new _web.PublicKey(tokenSwapData.poolRayAddress);\n    poolInfo['pool_id'] = new _web.PublicKey(tokenSwapData.poolId);\n    poolInfo['pool_user_info'] = new _web.PublicKey(tokenSwapData.poolUserInfo);\n    poolInfo['pool_other_address'] = new _web.PublicKey(tokenSwapData.poolOtherAddress);\n    return poolInfo;\n  }\n\n  static async loadTokenFarmUser(connection, address, programId) {\n    const data = await (0, _account.loadAccount)(connection, address, programId);\n    const userData = TokenFarmUserLayout.decode(data);\n\n    if (!userData.isInitialized) {\n      throw new Error(`未初始化`);\n    }\n\n    let userInfo = {};\n    userInfo['amount'] = Numberu64.fromBuffer(userData.amount);\n    userInfo['pool_id'] = new _web.PublicKey(userData.poolId);\n    userInfo['reward_debt'] = Numberu64.fromBuffer(userData.rewardDebt);\n    userInfo['ray_debt'] = Numberu64.fromBuffer(userData.rayDebt);\n    userInfo['other_debt'] = Numberu64.fromBuffer(userData.rayDebt);\n    return userInfo;\n  }\n\n  static async loadRaydiumFarmUser(connection, address, programId) {\n    const data = await (0, _account.loadAccount)(connection, address, programId);\n    const userData = TokenRayUserLayout.decode(data);\n\n    if (!userData.isInitialized) {\n      throw new Error(`未初始化`);\n    }\n\n    let userInfo = {};\n    userInfo['amount'] = Numberu64.fromBuffer(userData.amount);\n    userInfo['pool_id'] = new _web.PublicKey(userData.poolId);\n    userInfo['reward_debt'] = Numberu64.fromBuffer(userData.rewardDebt);\n    userInfo['ray_debt'] = Numberu64.fromBuffer(userData.rayDebt);\n    return userInfo;\n  }\n  /**\n   * Create a new Token Swap\n   *\n   * @param connection The connection to use\n   * @param payer Pays for the transaction\n   * @param tokenSwapAccount The token swap account\n   * @param authority The authority over the swap and accounts\n   * @param nonce The nonce used to generate the authority\n   * @param tokenAccountA: The token swap's Token A account\n   * @param tokenAccountB: The token swap's Token B account\n   * @param poolToken The pool token\n   * @param tokenAccountPool The token swap's pool token account\n   * @param tokenProgramId The program ID of the token program\n   * @param swapProgramId The program ID of the token-swap program\n   * @param feeNumerator Numerator of the fee ratio\n   * @param feeDenominator Denominator of the fee ratio\n   * @return Token object for the newly minted token, Public key of the account holding the total supply of new tokens\n   */\n\n\n  static async createTokenFarm(raydium_stake_program_id, connection, payer, tokenProgramId, farm_info, authority, pool_farm_address, pool_lp_address, //\n  pool_fee_lp_address, //\n  pool_ray_address, //\n  pool_id, //\n  pool_user_info, //\n  pool_other_address, //\n  swapProgramId, nonce, tradeFeeNumerator, tradeFeeDenominator, ownerTradeFeeNumerator, ownerTradeFeeDenominator, ownerWithdrawFeeNumerator, ownerWithdrawFeeDenominator, hostFeeNumerator, hostFeeDenominator, reward_per_second, user_len) {\n    let transaction; // Allocate memory for the account\n\n    const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(connection);\n    transaction = new _web.Transaction();\n    transaction.add(_web.SystemProgram.createAccount({\n      fromPubkey: payer.publicKey,\n      newAccountPubkey: farm_info.publicKey,\n      lamports: balanceNeeded,\n      space: TokenFarmLayout.span,\n      programId: swapProgramId\n    }));\n    let signers = [];\n\n    if (!pool_id) {\n      let pool = new _web.Account();\n      pool_id = pool.publicKey;\n      signers.push(pool);\n      transaction.add(_web.SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: pool_id,\n        lamports: balanceNeeded,\n        space: TokenFarmLayout.span,\n        programId: swapProgramId\n      }));\n    }\n\n    if (!pool_other_address) {\n      let poa = new _web.Account();\n      pool_other_address = poa.publicKey;\n      signers.push(poa);\n      transaction.add(_web.SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: pool_other_address,\n        lamports: balanceNeeded,\n        space: _splToken.AccountLayout.span,\n        programId: swapProgramId\n      }));\n    }\n\n    if (!pool_user_info) {\n      let pui = new _web.Account();\n      pool_user_info = pui.publicKey;\n      signers.push(pui);\n      transaction.add(_web.SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: pool_user_info,\n        lamports: balanceNeeded,\n        space: user_len,\n        programId: raydium_stake_program_id\n      }));\n    }\n\n    const instruction = TokenSwap.createInitFarmInstruction(tokenProgramId, // 通用token 转账 的地址\n    farm_info, //\n    authority, //\n    pool_farm_address, pool_lp_address, //\n    pool_fee_lp_address, //\n    pool_ray_address, //\n    pool_id, //\n    pool_user_info, //\n    pool_other_address, swapProgramId, nonce, tradeFeeNumerator, tradeFeeDenominator, ownerTradeFeeNumerator, ownerTradeFeeDenominator, ownerWithdrawFeeNumerator, ownerWithdrawFeeDenominator, hostFeeNumerator, hostFeeDenominator, reward_per_second);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('createAccount and InitializeFarm', connection, transaction, payer, farm_info, ...signers);\n    console.log(\"result:\", result);\n  }\n\n  static async updateTokenFarm(raydium_stake_program_id, connection, payer, tokenProgramId, farm_info, authority, pool_farm_address, pool_lp_address, //\n  pool_fee_lp_address, //\n  pool_ray_address, //\n  pool_id, //\n  pool_user_info, //\n  pool_other_address, //\n  swapProgramId, nonce, tradeFeeNumerator, tradeFeeDenominator, ownerTradeFeeNumerator, ownerTradeFeeDenominator, ownerWithdrawFeeNumerator, ownerWithdrawFeeDenominator, hostFeeNumerator, hostFeeDenominator, reward_per_second) {\n    let transaction = new _web.Transaction();\n    let signers = [];\n    const instruction = TokenSwap.updateFarmInstruction(tokenProgramId, // 通用token 转账 的地址\n    farm_info, //\n    authority, //\n    pool_farm_address, pool_lp_address, //\n    pool_fee_lp_address, //\n    pool_ray_address, //\n    pool_id, //\n    pool_user_info, //\n    pool_other_address, swapProgramId, nonce, tradeFeeNumerator, tradeFeeDenominator, ownerTradeFeeNumerator, ownerTradeFeeDenominator, ownerWithdrawFeeNumerator, ownerWithdrawFeeDenominator, hostFeeNumerator, hostFeeDenominator, reward_per_second);\n    console.log('日产币量:', (reward_per_second * 86400 / 1e9).toFixed(0), 'tradeFeeNumerator', tradeFeeNumerator);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('Update Farm', connection, transaction, payer, ...signers);\n    console.log(\"result:\", result);\n  }\n\n  static async depositFarm(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, amount) {\n    let transaction = new _web.Transaction();\n    const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(connection); // Todo 判断balanceNeeded是否存在\n\n    transaction.add(_web.SystemProgram.createAccount({\n      fromPubkey: payer.publicKey,\n      newAccountPubkey: user_info.publicKey,\n      lamports: balanceNeeded,\n      space: TokenFarmUserLayout.span,\n      programId: swapProgramId\n    }));\n    const instruction = TokenSwap.depositFarmInstruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    user_transfer_authority_info.publicKey, // 委托方地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('deposit', connection, transaction, payer, user_transfer_authority_info, // Todo 判断balanceNeeded是否存在,有的话不用传\n    user_info);\n    console.log(\"result:\", result);\n  }\n\n  static async depositFarmV2(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, farm_fee_lp_address, amount) {\n    let transaction = new _web.Transaction(); // const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(\n    //     connection,\n    // );\n    // // Todo 判断balanceNeeded是否存在\n    // transaction.add(\n    //     SystemProgram.createAccount({\n    //         fromPubkey: payer.publicKey,\n    //         newAccountPubkey: user_info.publicKey,\n    //         lamports: balanceNeeded,\n    //         space: TokenFarmUserLayout.span,\n    //         programId: swapProgramId,\n    //     }),\n    // );\n\n    const instruction = TokenSwap.depositFarmV2Instruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    user_transfer_authority_info.publicKey, // 委托方地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, farm_fee_lp_address, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('deposit', connection, transaction, payer, user_transfer_authority_info // Todo 判断balanceNeeded是否存在,有的话不用传\n    // user_info,\n    );\n    console.log(\"result:\", result);\n  }\n\n  static async depositRaydium(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, amount) {\n    let transaction = new _web.Transaction();\n    const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(connection); // Todo 判断balanceNeeded是否存在\n\n    transaction.add(_web.SystemProgram.createAccount({\n      fromPubkey: payer.publicKey,\n      newAccountPubkey: user_info.publicKey,\n      lamports: balanceNeeded,\n      space: TokenFarmUserLayout.span,\n      programId: swapProgramId\n    }));\n    const instruction = TokenSwap.depositRaydiumInstruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    user_transfer_authority_info.publicKey, // 委托方地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('deposit', connection, transaction, payer, user_transfer_authority_info, // Todo 判断balanceNeeded是否存在,有的话不用传\n    user_info);\n    console.log(\"result:\", result);\n  }\n\n  static async depositRaydiumV4(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, pool_other_address, farm_other_address, user_other_address, amount) {\n    let transaction = new _web.Transaction(); // const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(\n    //     connection,\n    // );\n    // // Todo 判断balanceNeeded是否存在\n    // transaction.add(\n    //     SystemProgram.createAccount({\n    //         fromPubkey: payer.publicKey,\n    //         newAccountPubkey: user_info.publicKey,\n    //         lamports: balanceNeeded,\n    //         space: TokenFarmUserLayout.span,\n    //         programId: swapProgramId,\n    //     }),\n    // );\n\n    const instruction = TokenSwap.depositRaydiumV4Instruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    user_transfer_authority_info.publicKey, // 委托方地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, pool_other_address, farm_other_address, user_other_address, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('deposit', connection, transaction, payer, user_transfer_authority_info // Todo 判断balanceNeeded是否存在,有的话不用传\n    // user_info,\n    );\n    console.log(\"result:\", result);\n  }\n\n  static async withdrawRaydiumV4(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, pool_other_address, farm_other_address, user_other_address, amount) {\n    let transaction = new _web.Transaction();\n    const instruction = TokenSwap.withdrawRaydiumV4Instruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, pool_other_address, farm_other_address, user_other_address, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('withdraw', connection, transaction, payer);\n    console.log(\"result:\", result);\n  }\n\n  static async withdrawRaydium(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, amount) {\n    let transaction = new _web.Transaction();\n    const instruction = TokenSwap.withdrawRaydiumInstruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('withdraw', connection, transaction, payer // user_info,\n    );\n    console.log(\"result:\", result);\n  }\n\n  static async harvestFarmV2(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, farm_fee_lp_address, amount) {\n    let transaction = new _web.Transaction();\n    const instruction = TokenSwap.depositFarmV2Instruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    user_transfer_authority_info.publicKey, // 委托方地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, farm_fee_lp_address, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('deposit', connection, transaction, payer, user_transfer_authority_info);\n    console.log(\"result:\", result);\n  }\n\n  static async withdrawFarmV2(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, farm_fee_lp_address, amount) {\n    let transaction = new _web.Transaction();\n    const instruction = TokenSwap.withdrawFarmV2Instruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, farm_fee_lp_address, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('withdraw', connection, transaction, payer);\n    console.log(\"result:\", result);\n  }\n\n  static async withdrawFarm(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, amount) {\n    let transaction = new _web.Transaction();\n    const instruction = TokenSwap.withdrawFarmInstruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('deposit', connection, transaction, payer);\n    console.log(\"result:\", result);\n  }\n\n  static async harvestFarm(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, amount) {\n    let transaction = new _web.Transaction();\n    const instruction = TokenSwap.depositFarmInstruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    user_transfer_authority_info.publicKey, // 委托方地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('harvest', connection, transaction, payer, user_transfer_authority_info);\n    console.log(\"result:\", result);\n  }\n\n}\n\nexports.TokenSwap = TokenSwap;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "token-swap.js"
      ],
      "names": [
        "TOKEN_SWAP_PROGRAM_ID",
        "PublicKey",
        "Numberu64",
        "BN",
        "toBuffer",
        "a",
        "toArray",
        "reverse",
        "b",
        "Buffer",
        "from",
        "length",
        "zeroPad",
        "alloc",
        "copy",
        "fromBuffer",
        "buffer",
        "map",
        "i",
        "toString",
        "slice",
        "join",
        "Numberu128",
        "TokenFarmLayout",
        "BufferLayout",
        "struct",
        "u8",
        "Layout",
        "publicKey",
        "uint64",
        "uint128",
        "TokenFarmUserLayout",
        "TokenRayUserLayout",
        "TokenRayUserV4Layout",
        "CurveType",
        "Object",
        "freeze",
        "ConstantProduct",
        "ConstantPrice",
        "Offset",
        "TokenSwap",
        "constructor",
        "connection",
        "payer",
        "getMinBalanceRentForExemptTokenSwap",
        "getMinimumBalanceForRentExemption",
        "span",
        "createInitFarmInstruction",
        "tokenProgramId",
        "farm_info",
        "authority",
        "pool_farm_address",
        "pool_lp_address",
        "pool_fee_lp_address",
        "pool_ray_address",
        "pool_id",
        "pool_user_info",
        "pool_other_address",
        "swapProgramId",
        "nonce",
        "tradeFeeNumerator",
        "tradeFeeDenominator",
        "ownerTradeFeeNumerator",
        "ownerTradeFeeDenominator",
        "ownerWithdrawFeeNumerator",
        "ownerWithdrawFeeDenominator",
        "hostFeeNumerator",
        "hostFeeDenominator",
        "reward_per_second",
        "clock",
        "keys",
        "pubkey",
        "isSigner",
        "isWritable",
        "commandDataLayout",
        "nu64",
        "data",
        "encodeLength",
        "encode",
        "instruction",
        "TransactionInstruction",
        "programId",
        "updateFarmInstruction",
        "depositFarmInstruction",
        "authority_info",
        "user_lp_address",
        "user_farm_address",
        "user_info",
        "user_transfer_authority_info",
        "pool_fee_lp_account",
        "amount",
        "depositFarmV2Instruction",
        "pool_ray_account",
        "user_ray_account",
        "farm_program_id",
        "farm_pool_id",
        "farm_authority_info",
        "farm_farm_address",
        "farm_lp_address",
        "farm_fee_lp_address",
        "depositRaydiumInstruction",
        "depositRaydiumV4Instruction",
        "farm_other_address",
        "user_other_address",
        "withdrawRaydiumV4Instruction",
        "withdrawRaydiumInstruction",
        "withdrawFarmV2Instruction",
        "withdrawFarmInstruction",
        "loadTokenSwap",
        "address",
        "tokenSwapData",
        "TokenSwapLayout",
        "decode",
        "isInitialized",
        "Error",
        "findProgramAddress",
        "poolToken",
        "tokenPool",
        "feeAccount",
        "tokenAccountA",
        "tokenAccountB",
        "mintA",
        "mintB",
        "curveType",
        "loadTokenFarm",
        "poolInfo",
        "poolFarmAddress",
        "poolLpAddress",
        "poolFeeLpAddress",
        "lastUpdate",
        "rewardPerSecond",
        "rewardPerShare",
        "totalSupply",
        "rayPerShare",
        "otherPerShare",
        "rayTotalSupply",
        "poolRayAddress",
        "poolId",
        "poolUserInfo",
        "poolOtherAddress",
        "loadTokenFarmUser",
        "userData",
        "userInfo",
        "rewardDebt",
        "rayDebt",
        "loadRaydiumFarmUser",
        "createTokenFarm",
        "raydium_stake_program_id",
        "user_len",
        "transaction",
        "balanceNeeded",
        "Transaction",
        "add",
        "SystemProgram",
        "createAccount",
        "fromPubkey",
        "newAccountPubkey",
        "lamports",
        "space",
        "signers",
        "pool",
        "Account",
        "push",
        "poa",
        "AccountLayout",
        "pui",
        "result",
        "console",
        "log",
        "updateTokenFarm",
        "toFixed",
        "depositFarm",
        "depositFarmV2",
        "depositRaydium",
        "depositRaydiumV4",
        "withdrawRaydiumV4",
        "withdrawRaydium",
        "harvestFarmV2",
        "withdrawFarmV2",
        "withdrawFarm",
        "harvestFarm"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/",
      "sourcesContent": [
        "/**\n * @flow\n */\n\nimport assert from 'assert';\nimport BN from 'bn.js';\nimport { Buffer } from 'buffer';\nimport * as BufferLayout from 'buffer-layout';\nimport type { Connection, TransactionSignature } from '@solana/web3.js';\nimport {\n  Account,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n} from '@solana/web3.js';\n\nimport * as Layout from './layout';\nimport { sendAndConfirmTransaction } from './util/send-and-confirm-transaction';\nimport { loadAccount } from './util/account';\nimport { AccountLayout, Token, TOKEN_PROGRAM_ID } from '@solana/spl-token';\nexport const TOKEN_SWAP_PROGRAM_ID: PublicKey = new PublicKey(\n  // 'HTpjeN1FocdopyJxwFJzBsQ5edeDVXkNB3ssePWmhfyj',\n  'DgUj4FuTYjFVTK6yT73MuGNS3wV3FPXa4Kp3Mqw87a77',\n  // '51MP7fEUh9aexfZsRkHwQdSa7zFxVdPjYW9aRMUZ7Ygb'\n  // 'C9THsxkiKNj3TFNSPDsSzCBGmB3Zvjn1vaAUDH6YvYhv',\n);\n//\n\n/**\n * Some amount of tokens\n */\nexport class Numberu64 extends BN {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer(): typeof Buffer {\n    const a = super.toArray().reverse();\n    const b = Buffer.from(a);\n    if (b.length === 8) {\n      return b;\n    }\n    assert(b.length < 8, 'Numberu64 too large');\n\n    const zeroPad = Buffer.alloc(8);\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n\n  /**\n   * Construct a Numberu64 from Buffer representation\n   */\n  static fromBuffer(buffer: typeof Buffer): Numberu64 {\n    assert(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    return new Numberu64(\n      [...buffer]\n        .reverse()\n        .map(i => `00${i.toString(16)}`.slice(-2))\n        .join(''),\n      16,\n    );\n  }\n}\n\n/**\n * Some amount of tokens\n */\nexport class Numberu128 extends BN {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer(): typeof Buffer {\n    const a = super.toArray().reverse();\n    const b = Buffer.from(a);\n    if (b.length === 16) {\n      return b;\n    }\n    assert(b.length < 16, 'Numberu64 too large');\n\n    const zeroPad = Buffer.alloc(16);\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n\n  /**\n   * Construct a Numberu64 from Buffer representation\n   */\n  static fromBuffer(buffer: typeof Buffer): Numberu64 {\n    assert(buffer.length === 16, `Invalid buffer length: ${buffer.length}`);\n    return new Numberu64(\n      [...buffer]\n        .reverse()\n        .map(i => `00${i.toString(16)}`.slice(-2))\n        .join(''),\n      16,\n    );\n  }\n}\n\n/**\n * // farm 结构体\n * @private\n */\nexport const TokenFarmLayout: typeof BufferLayout.Structure = BufferLayout.struct(\n  [\n    BufferLayout.u8('isInitialized'), // 1-2\n    BufferLayout.u8('nonce'), // 1\n    Layout.publicKey('tokenProgramId'),\n    Layout.publicKey('poolFarmAddress'), // 矿池 farm地址\n    Layout.publicKey('poolLpAddress'), // 矿池 lp地址\n    Layout.publicKey('poolFeeLpAddress'), // 矿池 lp手续费地址\n    Layout.uint64('tradeFeeNumerator'),\n    Layout.uint64('tradeFeeDenominator'),\n    Layout.uint64('ownerTradeFeeNumerator'),\n    Layout.uint64('ownerTradeFeeDenominator'),\n    Layout.uint64('ownerWithdrawFeeNumerator'),\n    Layout.uint64('ownerWithdrawFeeDenominator'),\n    Layout.uint64('hostFeeNumerator'),\n    Layout.uint64('hostFeeDenominator'),\n    Layout.uint64('lastUpdate'), // 最后一次slot\n    Layout.uint64('rewardPerSecond'), // 每slot奖励\n    Layout.uint128('rewardPerShare'),// 每个份额奖励\n    Layout.uint64('totalSupply'), // 总质押量\n    Layout.uint128('rayPerShare'), // ray 每份额奖励\n    Layout.uint64('rayTotalSupply'), // 总质押量\n    Layout.uint128('otherPerShare'), // other 每份额奖励\n    Layout.uint64('otherTotalSupply'), // 总质押量\n    Layout.publicKey('owner'), // owner\n    Layout.publicKey('poolRayAddress'), // owner\n    Layout.publicKey('poolId'), // owner\n    Layout.publicKey('poolUserInfo'), // owner\n    Layout.publicKey('poolOtherAddress'), // owner\n  ],\n);\n\n/**\n * // farm user 结构体\n * @private\n */\nexport const TokenFarmUserLayout: typeof BufferLayout.Structure = BufferLayout.struct(\n  [\n      BufferLayout.u8('isInitialized'), // 1-2\n      Layout.publicKey('poolId'), //\n      Layout.uint64('amount'), // 质押金额\n      Layout.uint64('rewardDebt'),// 理论已领取奖励\n      Layout.uint64('rayDebt'),// 理论ray已领取奖励\n      Layout.uint64('otherDebt'),// 理论ray已领取奖励\n      Layout.publicKey('userLpAddress'),// 理论ray已领取奖励\n  ],\n);\n\n/**\n * // farm user 结构体\n * @private\n */\nexport const TokenRayUserLayout: typeof BufferLayout.Structure = BufferLayout.struct(\n  [\n    Layout.uint64('state'), // 8 + 32 + 32 + 8 + 8\n    Layout.publicKey('poolId'),\n    Layout.publicKey('stakerOwner'),\n    Layout.uint64('depositBalance'),\n    Layout.uint64('rewardDebt')\n  ],\n);\n\n/**\n * // farm user 结构体\n * @private\n */\nexport const TokenRayUserV4Layout: typeof BufferLayout.Structure = BufferLayout.struct(\n  [\n    Layout.uint64('state'),\n    Layout.publicKey('poolId'),\n    Layout.publicKey('stakerOwner'),\n    Layout.uint64('depositBalance'),\n    Layout.uint64('rewardDebt'),\n    Layout.uint64('rewardDebtB')\n  ],\n);\n\nexport const CurveType = Object.freeze({\n  ConstantProduct: 0, // Constant product curve, Uniswap-style\n  ConstantPrice: 1, // Constant price curve, always X amount of A token for 1 B token, where X is defined at init\n  Offset: 3, // Offset curve, like Uniswap, but with an additional offset on the token B side\n});\n\n/**\n * A program to exchange tokens against a pool of liquidity\n */\nexport class TokenSwap {\n  /**\n   * @private\n   */\n  connection: Connection;\n\n  /**\n   * Program Identifier for the Token program\n   */\n  tokenProgramId: PublicKey;\n\n  /**\n   * The public key for the fee account receiving trade and/or withdrawal fees\n   */\n  feeAccount: PublicKey;\n\n  /**\n   * Authority\n   */\n  authority: PublicKey;\n\n  /**\n   * Fee payer\n   */\n  payer: Account;\n\n  /**\n   * Create a Token object attached to the specific token\n   *\n   * @param connection The connection to use\n   * @param tokenSwap The token swap account\n   * @param swapProgramId The program ID of the token-swap program\n   * @param tokenProgramId The program ID of the token program\n   * @param poolToken The pool token\n   * @param authority The authority over the swap and accounts\n   * @param tokenAccountA: The token swap's Token A account\n   * @param tokenAccountB: The token swap's Token B account\n   * @param payer Pays for the transaction\n   */\n  constructor(\n    connection: Connection,\n    payer: Account,\n  ) {\n  }\n\n  /**\n   * Get the minimum balance for the token swap account to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptTokenSwap(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      TokenFarmLayout.span,\n    );\n  }\n\n  static createInitFarmInstruction(\n    tokenProgramId: PublicKey, // 通用token 转账 的地址\n    farm_info: Account, //\n    authority: PublicKey, //\n    pool_farm_address: PublicKey, //\n    pool_lp_address: PublicKey, //\n    pool_fee_lp_address: PublicKey, //\n    pool_ray_address: PublicKey, //\n    pool_id: PublicKey, //\n    pool_user_info: PublicKey, //\n    pool_other_address:PublicKey,//\n    swapProgramId: PublicKey, // swap-farm 程序地址\n    nonce: number,\n    tradeFeeNumerator: number,\n    tradeFeeDenominator: number,\n    ownerTradeFeeNumerator: number,\n    ownerTradeFeeDenominator: number,\n    ownerWithdrawFeeNumerator: number,\n    ownerWithdrawFeeDenominator: number,\n    hostFeeNumerator: number,\n    hostFeeDenominator: number,\n    reward_per_second: number,\n  ): TransactionInstruction {\n    // 时间合约地址 记录区块的时间信息 slot\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },// 通用token地址\n      { pubkey: farm_info.publicKey, isSigner: false, isWritable: true }, // farm 矿池地址\n      { pubkey: authority, isSigner: false, isWritable: false }, // 矿池auth\n      { pubkey: pool_farm_address, isSigner: false, isWritable: false },// 矿池对应的farm接收地址\n      { pubkey: pool_lp_address, isSigner: false, isWritable: false },// 矿池对应的lp接收地址\n      { pubkey: pool_fee_lp_address, isSigner: false, isWritable: false },// 手续费地址\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_ray_address, isSigner: false, isWritable: false },\n      { pubkey: pool_id, isSigner: false, isWritable: false },\n      { pubkey: pool_user_info, isSigner: false, isWritable: false },\n      { pubkey: pool_other_address, isSigner: false, isWritable: false },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('nonce'),\n      BufferLayout.nu64('tradeFeeNumerator'),\n      BufferLayout.nu64('tradeFeeDenominator'),\n      BufferLayout.nu64('ownerTradeFeeNumerator'),\n      BufferLayout.nu64('ownerTradeFeeDenominator'),\n      BufferLayout.nu64('ownerWithdrawFeeNumerator'),\n      BufferLayout.nu64('ownerWithdrawFeeDenominator'),\n      BufferLayout.nu64('hostFeeNumerator'),\n      BufferLayout.nu64('hostFeeDenominator'),\n      BufferLayout.nu64('reward_per_second'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 0, // InitializeFarm instruction\n          nonce,\n          tradeFeeNumerator,\n          tradeFeeDenominator,\n          ownerTradeFeeNumerator,\n          ownerTradeFeeDenominator,\n          ownerWithdrawFeeNumerator,\n          ownerWithdrawFeeDenominator,\n          hostFeeNumerator,\n          hostFeeDenominator,\n          reward_per_second,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static updateFarmInstruction(\n    tokenProgramId: PublicKey, // 通用token 转账 的地址\n    farm_info: Account, //\n    authority: PublicKey, //\n    pool_farm_address: PublicKey, //\n    pool_lp_address: PublicKey, //\n    pool_fee_lp_address: PublicKey, //\n    pool_ray_address: PublicKey, //\n    pool_id: PublicKey, //\n    pool_user_info: PublicKey, //\n    pool_other_address:PublicKey,//\n    swapProgramId: PublicKey, // swap-farm 程序地址\n    nonce: number,\n    tradeFeeNumerator: number,\n    tradeFeeDenominator: number,\n    ownerTradeFeeNumerator: number,\n    ownerTradeFeeDenominator: number,\n    ownerWithdrawFeeNumerator: number,\n    ownerWithdrawFeeDenominator: number,\n    hostFeeNumerator: number,\n    hostFeeDenominator: number,\n    reward_per_second: number,\n  ): TransactionInstruction {\n    // 时间合约地址 记录区块的时间信息 slot\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },// 通用token地址\n      { pubkey: farm_info, isSigner: false, isWritable: true }, // farm 矿池地址\n      { pubkey: authority, isSigner: false, isWritable: false }, // 矿池auth\n      { pubkey: pool_farm_address, isSigner: false, isWritable: false },// 矿池对应的farm接收地址\n      { pubkey: pool_lp_address, isSigner: false, isWritable: false },// 矿池对应的lp接收地址\n      { pubkey: pool_fee_lp_address, isSigner: false, isWritable: false },// 手续费地址\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_ray_address, isSigner: false, isWritable: false },\n      { pubkey: pool_id, isSigner: false, isWritable: false },\n      { pubkey: pool_user_info, isSigner: false, isWritable: false },\n      { pubkey: pool_other_address, isSigner: false, isWritable: false },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('nonce'),\n      BufferLayout.nu64('tradeFeeNumerator'),\n      BufferLayout.nu64('tradeFeeDenominator'),\n      BufferLayout.nu64('ownerTradeFeeNumerator'),\n      BufferLayout.nu64('ownerTradeFeeDenominator'),\n      BufferLayout.nu64('ownerWithdrawFeeNumerator'),\n      BufferLayout.nu64('ownerWithdrawFeeDenominator'),\n      BufferLayout.nu64('hostFeeNumerator'),\n      BufferLayout.nu64('hostFeeDenominator'),\n      BufferLayout.nu64('reward_per_second'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 0, // InitializeFarm instruction\n          nonce,\n          tradeFeeNumerator,\n          tradeFeeDenominator,\n          ownerTradeFeeNumerator,\n          ownerTradeFeeDenominator,\n          ownerWithdrawFeeNumerator,\n          ownerWithdrawFeeDenominator,\n          hostFeeNumerator,\n          hostFeeDenominator,\n          reward_per_second,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static depositFarmInstruction(\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户接收farm奖励的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: PublicKey,// 矿池接收lp的地址\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    user_transfer_authority_info: PublicKey,// 委托方地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    amount: number,\n  ): TransactionInstruction {\n    // 时间合约地址\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: farm_info, isSigner: false, isWritable: true }, // 矿池信息\n      { pubkey: authority_info, isSigner: false, isWritable: true },// 矿池代币owner\n      { pubkey: user_info, isSigner: false, isWritable: true },\n      { pubkey: user_farm_address, isSigner: false, isWritable: true },\n      { pubkey: user_lp_address, isSigner: false, isWritable: true },\n      { pubkey: pool_lp_address, isSigner: false, isWritable: true },\n      { pubkey: user_transfer_authority_info, isSigner: true, isWritable: true },\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n      { pubkey: pool_farm_address, isSigner: false, isWritable: true },\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_fee_lp_account, isSigner: false, isWritable: true },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('amount'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 7, // Deposit instruction\n          amount,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static depositFarmV2Instruction(\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户接收farm奖励的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: PublicKey,// 矿池接收lp的地址\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    user_transfer_authority_info: PublicKey,// 委托方地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    farm_fee_lp_address: PublicKey,\n    amount: number,\n  ): TransactionInstruction {\n    // 时间合约地址\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: farm_info, isSigner: false, isWritable: true }, // 矿池信息\n      { pubkey: authority_info, isSigner: false, isWritable: true },// 矿池代币owner\n      { pubkey: user_info, isSigner: false, isWritable: true },\n      { pubkey: user_farm_address, isSigner: false, isWritable: true },\n      { pubkey: user_lp_address, isSigner: false, isWritable: true },\n      { pubkey: pool_lp_address, isSigner: false, isWritable: true },\n      { pubkey: user_transfer_authority_info, isSigner: true, isWritable: true },\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n      { pubkey: pool_farm_address, isSigner: false, isWritable: true },\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_fee_lp_account, isSigner: false, isWritable: true },\n      { pubkey: pool_ray_account, isSigner: false, isWritable: true },\n      { pubkey: user_ray_account, isSigner: false, isWritable: true },\n      { pubkey: farm_program_id, isSigner: false, isWritable: true },\n      { pubkey: farm_pool_id, isSigner: false, isWritable: true },\n      { pubkey: farm_authority_info, isSigner: false, isWritable: true },\n      { pubkey: pool_user_info, isSigner: false, isWritable: true },\n      { pubkey: farm_farm_address, isSigner: false, isWritable: true },\n      { pubkey: farm_lp_address, isSigner: false, isWritable: true },\n      { pubkey: farm_fee_lp_address, isSigner: false, isWritable: true },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('amount'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 11, // Deposit V2 instruction\n          amount,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static depositRaydiumInstruction(\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户接收farm奖励的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: PublicKey,// 矿池接收lp的地址\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    user_transfer_authority_info: PublicKey,// 委托方地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    amount: number,\n  ): TransactionInstruction {\n    // 时间合约地址\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: farm_info, isSigner: false, isWritable: true }, // 矿池信息\n      { pubkey: authority_info, isSigner: false, isWritable: true },// 矿池代币owner\n      { pubkey: user_info, isSigner: false, isWritable: true },\n      { pubkey: user_farm_address, isSigner: false, isWritable: true },\n      { pubkey: user_lp_address, isSigner: false, isWritable: true },\n      { pubkey: pool_lp_address, isSigner: false, isWritable: true },\n      { pubkey: user_transfer_authority_info, isSigner: true, isWritable: true },\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n      { pubkey: pool_farm_address, isSigner: false, isWritable: true },\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_fee_lp_account, isSigner: false, isWritable: true },\n      { pubkey: pool_ray_account, isSigner: false, isWritable: true },\n      { pubkey: user_ray_account, isSigner: false, isWritable: true },\n      { pubkey: farm_authority_info, isSigner: false, isWritable: true },\n      { pubkey: farm_lp_address, isSigner: false, isWritable: true },\n      { pubkey: farm_farm_address, isSigner: false, isWritable: true },\n      { pubkey: pool_user_info, isSigner: false, isWritable: true },\n      { pubkey: farm_pool_id, isSigner: false, isWritable: true },\n      { pubkey: farm_program_id, isSigner: false, isWritable: true },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('amount'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 3, // Deposit Raydium instruction\n          amount,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static depositRaydiumV4Instruction(\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户接收farm奖励的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: PublicKey,// 矿池接收lp的地址\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    user_transfer_authority_info: PublicKey,// 委托方地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    pool_other_address:PublicKey,\n    farm_other_address:PublicKey,\n    user_other_address:PublicKey,\n    amount: number,\n  ): TransactionInstruction {\n    // 时间合约地址\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: farm_info, isSigner: false, isWritable: true }, // 矿池信息\n      { pubkey: authority_info, isSigner: false, isWritable: true },// 矿池代币owner\n      { pubkey: user_info, isSigner: false, isWritable: true },\n      { pubkey: user_farm_address, isSigner: false, isWritable: true },\n      { pubkey: user_lp_address, isSigner: false, isWritable: true },\n      { pubkey: pool_lp_address, isSigner: false, isWritable: true },\n      { pubkey: user_transfer_authority_info, isSigner: true, isWritable: true },\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n      { pubkey: pool_farm_address, isSigner: false, isWritable: true },\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_fee_lp_account, isSigner: false, isWritable: true },\n      { pubkey: pool_ray_account, isSigner: false, isWritable: true },\n      { pubkey: user_ray_account, isSigner: false, isWritable: true },\n      { pubkey: farm_authority_info, isSigner: false, isWritable: true },\n      { pubkey: farm_lp_address, isSigner: false, isWritable: true },\n      { pubkey: farm_farm_address, isSigner: false, isWritable: true },\n      { pubkey: pool_user_info, isSigner: false, isWritable: true },\n      { pubkey: farm_pool_id, isSigner: false, isWritable: true },\n      { pubkey: farm_program_id, isSigner: false, isWritable: true },\n      { pubkey: pool_other_address, isSigner: false, isWritable: true },\n      { pubkey: farm_other_address, isSigner: false, isWritable: true },\n      { pubkey: user_other_address, isSigner: false, isWritable: true },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('amount'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 7, // Deposit Raydium instruction\n          amount,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static withdrawRaydiumV4Instruction(\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户接收farm奖励的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: PublicKey,// 矿池接收lp的地址\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    pool_other_address:PublicKey,\n    farm_other_address:PublicKey,\n    user_other_address:PublicKey,\n    amount: number,\n  ): TransactionInstruction {\n    // 时间合约地址\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: farm_info, isSigner: false, isWritable: true }, // 矿池信息\n      { pubkey: authority_info, isSigner: false, isWritable: true },// 矿池代币owner\n      { pubkey: user_info, isSigner: false, isWritable: true },\n      { pubkey: user_farm_address, isSigner: false, isWritable: true },\n      { pubkey: user_lp_address, isSigner: false, isWritable: true },\n      { pubkey: pool_lp_address, isSigner: false, isWritable: true },\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n      { pubkey: pool_farm_address, isSigner: false, isWritable: true },\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_fee_lp_account, isSigner: false, isWritable: true },\n      { pubkey: pool_ray_account, isSigner: false, isWritable: true },\n      { pubkey: user_ray_account, isSigner: false, isWritable: true },\n      { pubkey: farm_authority_info, isSigner: false, isWritable: true },\n      { pubkey: farm_lp_address, isSigner: false, isWritable: true },\n      { pubkey: farm_farm_address, isSigner: false, isWritable: true },\n      { pubkey: pool_user_info, isSigner: false, isWritable: true },\n      { pubkey: farm_pool_id, isSigner: false, isWritable: true },\n      { pubkey: farm_program_id, isSigner: false, isWritable: true },\n      { pubkey: pool_other_address, isSigner: false, isWritable: true },\n      { pubkey: farm_other_address, isSigner: false, isWritable: true },\n      { pubkey: user_other_address, isSigner: false, isWritable: true },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('amount'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 8, // Withdraw Raydium V4 instruction\n          amount,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static withdrawRaydiumInstruction(\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户接收farm奖励的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: PublicKey,// 矿池接收lp的地址\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    amount: number,\n  ): TransactionInstruction {\n    // 时间合约地址\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: farm_info, isSigner: false, isWritable: true }, // 矿池信息\n      { pubkey: authority_info, isSigner: false, isWritable: true },// 矿池代币owner\n      { pubkey: user_info, isSigner: false, isWritable: true },\n      { pubkey: user_farm_address, isSigner: false, isWritable: true },\n      { pubkey: user_lp_address, isSigner: false, isWritable: true },\n      { pubkey: pool_lp_address, isSigner: false, isWritable: true },\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n      { pubkey: pool_farm_address, isSigner: false, isWritable: true },\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_fee_lp_account, isSigner: false, isWritable: true },\n      { pubkey: pool_ray_account, isSigner: false, isWritable: true },\n      { pubkey: user_ray_account, isSigner: false, isWritable: true },\n      { pubkey: farm_authority_info, isSigner: false, isWritable: true },\n      { pubkey: farm_lp_address, isSigner: false, isWritable: true },\n      { pubkey: farm_farm_address, isSigner: false, isWritable: true },\n      { pubkey: pool_user_info, isSigner: false, isWritable: true },\n      { pubkey: farm_pool_id, isSigner: false, isWritable: true },\n      { pubkey: farm_program_id, isSigner: false, isWritable: true },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('amount'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 4, // Withdraw Raydium instruction\n          amount,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static withdrawFarmV2Instruction(\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户接收farm奖励的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: PublicKey,// 矿池接收lp的地址\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    tokenProgramId: PublicKey,//\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    farm_fee_lp_address: PublicKey,\n    amount: number,\n  ): TransactionInstruction {\n    // 时间合约地址\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: farm_info, isSigner: false, isWritable: true }, // 矿池信息\n      { pubkey: authority_info, isSigner: false, isWritable: true },// 矿池代币owner\n      { pubkey: user_info, isSigner: false, isWritable: true },\n      { pubkey: user_farm_address, isSigner: false, isWritable: true },\n      { pubkey: user_lp_address, isSigner: false, isWritable: true },\n      { pubkey: pool_lp_address, isSigner: false, isWritable: true },\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n      { pubkey: pool_farm_address, isSigner: false, isWritable: true },\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_fee_lp_account, isSigner: false, isWritable: true },\n      { pubkey: pool_ray_account, isSigner: false, isWritable: true },\n      { pubkey: user_ray_account, isSigner: false, isWritable: true },\n      { pubkey: farm_program_id, isSigner: false, isWritable: true },\n      { pubkey: farm_pool_id, isSigner: false, isWritable: true },\n      { pubkey: farm_authority_info, isSigner: false, isWritable: true },\n      { pubkey: pool_user_info, isSigner: false, isWritable: true },\n      { pubkey: farm_farm_address, isSigner: false, isWritable: true },\n      { pubkey: farm_lp_address, isSigner: false, isWritable: true },\n      { pubkey: farm_fee_lp_address, isSigner: false, isWritable: true },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('amount'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 12, // Withdraw V2 instruction\n          amount,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static withdrawFarmInstruction(\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户接收farm奖励的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: PublicKey,// 矿池接收lp的地址\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    amount: number,\n  ): TransactionInstruction {\n    // 时间合约地址\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: farm_info, isSigner: false, isWritable: true }, // 矿池信息\n      { pubkey: authority_info, isSigner: false, isWritable: true },// 矿池代币owner\n      { pubkey: user_info, isSigner: false, isWritable: true },\n      { pubkey: user_farm_address, isSigner: false, isWritable: true },\n      { pubkey: user_lp_address, isSigner: false, isWritable: true },\n      { pubkey: pool_lp_address, isSigner: false, isWritable: true },\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n      { pubkey: pool_farm_address, isSigner: false, isWritable: true },\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_fee_lp_account, isSigner: false, isWritable: true },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('amount'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 8, // Withdraw instruction\n          amount,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static async loadTokenSwap(\n    connection: Connection,\n    address: PublicKey,\n    programId: PublicKey,\n    payer: Account,\n  ): Promise<TokenSwap> {\n    const data = await loadAccount(connection, address, programId);\n    const tokenSwapData = TokenSwapLayout.decode(data);\n    if (!tokenSwapData.isInitialized) {\n      throw new Error(`Invalid token swap state`);\n    }\n\n    const [authority] = await PublicKey.findProgramAddress(\n      [address.toBuffer()],\n      programId,\n    );\n\n    const poolToken = new PublicKey(tokenSwapData.tokenPool);\n    const feeAccount = new PublicKey(tokenSwapData.feeAccount);\n    const tokenAccountA = new PublicKey(tokenSwapData.tokenAccountA);\n    const tokenAccountB = new PublicKey(tokenSwapData.tokenAccountB);\n    const mintA = new PublicKey(tokenSwapData.mintA);\n    const mintB = new PublicKey(tokenSwapData.mintB);\n    const tokenProgramId = new PublicKey(tokenSwapData.tokenProgramId);\n\n    const tradeFeeNumerator = Numberu64.fromBuffer(\n      tokenSwapData.tradeFeeNumerator,\n    );\n    const tradeFeeDenominator = Numberu64.fromBuffer(\n      tokenSwapData.tradeFeeDenominator,\n    );\n    const ownerTradeFeeNumerator = Numberu64.fromBuffer(\n      tokenSwapData.ownerTradeFeeNumerator,\n    );\n    const ownerTradeFeeDenominator = Numberu64.fromBuffer(\n      tokenSwapData.ownerTradeFeeDenominator,\n    );\n    const ownerWithdrawFeeNumerator = Numberu64.fromBuffer(\n      tokenSwapData.ownerWithdrawFeeNumerator,\n    );\n    const ownerWithdrawFeeDenominator = Numberu64.fromBuffer(\n      tokenSwapData.ownerWithdrawFeeDenominator,\n    );\n    const hostFeeNumerator = Numberu64.fromBuffer(\n      tokenSwapData.hostFeeNumerator,\n    );\n    const hostFeeDenominator = Numberu64.fromBuffer(\n      tokenSwapData.hostFeeDenominator,\n    );\n    const curveType = tokenSwapData.curveType;\n\n    return new TokenSwap(\n      connection,\n      address,\n      programId,\n      tokenProgramId,\n      poolToken,\n      feeAccount,\n      authority,\n      tokenAccountA,\n      tokenAccountB,\n      mintA,\n      mintB,\n      tradeFeeNumerator,\n      tradeFeeDenominator,\n      ownerTradeFeeNumerator,\n      ownerTradeFeeDenominator,\n      ownerWithdrawFeeNumerator,\n      ownerWithdrawFeeDenominator,\n      hostFeeNumerator,\n      hostFeeDenominator,\n      curveType,\n      payer,\n    );\n  }\n\n  static async loadTokenFarm(\n    connection: Connection,\n    address: PublicKey,\n    programId: PublicKey,\n  ): Promise<Object> {\n    const data = await loadAccount(connection, address, programId);\n    const tokenSwapData = TokenFarmLayout.decode(data);\n    if (!tokenSwapData.isInitialized) {\n      throw new Error(`未初始化`);\n    }\n\n    const [authority] = await PublicKey.findProgramAddress(\n      [address.toBuffer()],\n      programId,\n    );\n    let poolInfo = {};\n    poolInfo['authority'] = authority;\n    poolInfo['tradeFeeNumerator'] = Numberu64.fromBuffer(\n      tokenSwapData.tradeFeeNumerator,\n    );\n    poolInfo['ownerTradeFeeNumerator'] = Numberu64.fromBuffer(\n      tokenSwapData.ownerTradeFeeNumerator,\n    );\n    poolInfo['tradeFeeDenominator'] = Numberu64.fromBuffer(\n      tokenSwapData.tradeFeeDenominator,\n    );\n    poolInfo['ownerTradeFeeDenominator'] = Numberu64.fromBuffer(\n      tokenSwapData.ownerTradeFeeDenominator,\n    );\n    poolInfo['ownerWithdrawFeeNumerator'] = Numberu64.fromBuffer(\n      tokenSwapData.ownerWithdrawFeeNumerator,\n    );\n    poolInfo['ownerWithdrawFeeDenominator'] = Numberu64.fromBuffer(\n      tokenSwapData.ownerWithdrawFeeDenominator,\n    );\n    poolInfo['hostFeeNumerator'] = Numberu64.fromBuffer(\n      tokenSwapData.hostFeeNumerator,\n    );\n    poolInfo['hostFeeDenominator'] = Numberu64.fromBuffer(\n      tokenSwapData.hostFeeDenominator,\n    );\n    poolInfo['nonce'] = tokenSwapData.nonce;\n    poolInfo['token_program_id'] = new PublicKey(tokenSwapData.tokenProgramId);\n    poolInfo['pool_farm_address'] = new PublicKey(tokenSwapData.poolFarmAddress);\n    poolInfo['pool_lp_address'] = new PublicKey(tokenSwapData.poolLpAddress);\n    poolInfo['pool_fee_lp_address'] = new PublicKey(tokenSwapData.poolFeeLpAddress);\n    poolInfo['last_update'] = Numberu64.fromBuffer(tokenSwapData.lastUpdate);\n    poolInfo['reward_per_second'] = Numberu64.fromBuffer(tokenSwapData.rewardPerSecond);\n    poolInfo['reward_per_share'] = Numberu128.fromBuffer(tokenSwapData.rewardPerShare);\n    poolInfo['total_supply'] = Numberu64.fromBuffer(tokenSwapData.totalSupply);\n    poolInfo['ray_per_share'] = Numberu128.fromBuffer(tokenSwapData.rayPerShare);\n    poolInfo['other_per_share'] = Numberu128.fromBuffer(tokenSwapData.otherPerShare);\n    poolInfo['ray_total_supply'] = Numberu64.fromBuffer(tokenSwapData.rayTotalSupply);\n    poolInfo['pool_ray_address'] = new PublicKey(tokenSwapData.poolRayAddress);\n    poolInfo['pool_id'] = new PublicKey(tokenSwapData.poolId);\n    poolInfo['pool_user_info'] = new PublicKey(tokenSwapData.poolUserInfo);\n    poolInfo['pool_other_address'] = new PublicKey(tokenSwapData.poolOtherAddress);\n    return poolInfo;\n  }\n\n  static async loadTokenFarmUser(\n    connection: Connection,\n    address: PublicKey,\n    programId: PublicKey,\n  ): Promise<Object> {\n      const data = await loadAccount(connection, address, programId);\n      const userData = TokenFarmUserLayout.decode(data);\n      if (!userData.isInitialized) {\n          throw new Error(`未初始化`);\n      }\n      let userInfo = {};\n      userInfo['amount'] = Numberu64.fromBuffer(\n          userData.amount,\n      );\n      userInfo['pool_id'] = new PublicKey(\n          userData.poolId,\n      );\n      userInfo['reward_debt'] = Numberu64.fromBuffer(\n          userData.rewardDebt,\n      );\n      userInfo['ray_debt'] = Numberu64.fromBuffer(\n          userData.rayDebt,\n      );\n      userInfo['other_debt'] = Numberu64.fromBuffer(\n          userData.rayDebt,\n      );\n      return userInfo;\n  }\n\n  static async loadRaydiumFarmUser(\n    connection: Connection,\n    address: PublicKey,\n    programId: PublicKey,\n  ): Promise<Object> {\n      const data = await loadAccount(connection, address, programId);\n      const userData = TokenRayUserLayout.decode(data);\n      if (!userData.isInitialized) {\n          throw new Error(`未初始化`);\n      }\n      let userInfo = {};\n      userInfo['amount'] = Numberu64.fromBuffer(\n          userData.amount,\n      );\n      userInfo['pool_id'] = new PublicKey(\n          userData.poolId,\n      );\n      userInfo['reward_debt'] = Numberu64.fromBuffer(\n          userData.rewardDebt,\n      );\n      userInfo['ray_debt'] = Numberu64.fromBuffer(\n          userData.rayDebt,\n      );\n      return userInfo;\n  }\n\n  /**\n   * Create a new Token Swap\n   *\n   * @param connection The connection to use\n   * @param payer Pays for the transaction\n   * @param tokenSwapAccount The token swap account\n   * @param authority The authority over the swap and accounts\n   * @param nonce The nonce used to generate the authority\n   * @param tokenAccountA: The token swap's Token A account\n   * @param tokenAccountB: The token swap's Token B account\n   * @param poolToken The pool token\n   * @param tokenAccountPool The token swap's pool token account\n   * @param tokenProgramId The program ID of the token program\n   * @param swapProgramId The program ID of the token-swap program\n   * @param feeNumerator Numerator of the fee ratio\n   * @param feeDenominator Denominator of the fee ratio\n   * @return Token object for the newly minted token, Public key of the account holding the total supply of new tokens\n   */\n  static async createTokenFarm(\n      raydium_stake_program_id: PublicKey,\n      connection: Connection,\n      payer: Account,\n      tokenProgramId: PublicKey,\n      farm_info: Account,\n      authority: PublicKey,\n      pool_farm_address: PublicKey,\n      pool_lp_address: PublicKey, //\n      pool_fee_lp_address: PublicKey, //\n      pool_ray_address: PublicKey, //\n      pool_id: PublicKey, //\n      pool_user_info: PublicKey, //\n      pool_other_address: PublicKey, //\n      swapProgramId: PublicKey,\n      nonce: number,\n      tradeFeeNumerator: number,\n      tradeFeeDenominator: number,\n      ownerTradeFeeNumerator: number,\n      ownerTradeFeeDenominator: number,\n      ownerWithdrawFeeNumerator: number,\n      ownerWithdrawFeeDenominator: number,\n      hostFeeNumerator: number,\n      hostFeeDenominator: number,\n      reward_per_second: number,\n      user_len: number,\n  ) {\n    let transaction;\n    // Allocate memory for the account\n    const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(\n      connection,\n    );\n    transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: farm_info.publicKey,\n        lamports: balanceNeeded,\n        space: TokenFarmLayout.span,\n        programId: swapProgramId,\n      }),\n    );\n    let signers = [];\n    if(!pool_id){\n        let pool = new Account();\n        pool_id = pool.publicKey;\n        signers.push(pool);\n        transaction.add(\n            SystemProgram.createAccount({\n                fromPubkey: payer.publicKey,\n                newAccountPubkey: pool_id,\n                lamports: balanceNeeded,\n                space: TokenFarmLayout.span,\n                programId: swapProgramId,\n            }),\n        );\n    }\n    if(!pool_other_address){\n        let poa = new Account();\n        pool_other_address = poa.publicKey;\n        signers.push(poa);\n        transaction.add(\n            SystemProgram.createAccount({\n                fromPubkey: payer.publicKey,\n                newAccountPubkey: pool_other_address,\n                lamports: balanceNeeded,\n                space: AccountLayout.span,\n                programId: swapProgramId,\n            }),\n        );\n    }\n    if(!pool_user_info){\n        let pui = new Account();\n        pool_user_info = pui.publicKey;\n        signers.push(pui);\n        transaction.add(\n            SystemProgram.createAccount({\n                fromPubkey: payer.publicKey,\n                newAccountPubkey: pool_user_info,\n                lamports: balanceNeeded,\n                space: user_len,\n                programId: raydium_stake_program_id,\n            }),\n        );\n    }\n    const instruction = TokenSwap.createInitFarmInstruction(\n        tokenProgramId, // 通用token 转账 的地址\n        farm_info, //\n        authority, //\n        pool_farm_address,\n        pool_lp_address, //\n        pool_fee_lp_address, //\n        pool_ray_address, //\n        pool_id, //\n        pool_user_info, //\n        pool_other_address,\n        swapProgramId,\n        nonce,\n        tradeFeeNumerator,\n        tradeFeeDenominator,\n        ownerTradeFeeNumerator,\n        ownerTradeFeeDenominator,\n        ownerWithdrawFeeNumerator,\n        ownerWithdrawFeeDenominator,\n        hostFeeNumerator,\n        hostFeeDenominator,\n        reward_per_second,\n    );\n\n    transaction.add(instruction);\n    let result = await sendAndConfirmTransaction(\n        'createAccount and InitializeFarm',\n        connection,\n        transaction,\n        payer,\n        farm_info,\n        ...signers\n    );\n    console.log(\"result:\", result)\n  }\n  static async updateTokenFarm(\n      raydium_stake_program_id: PublicKey,\n      connection: Connection,\n      payer: Account,\n      tokenProgramId: PublicKey,\n      farm_info: PublicKey,\n      authority: PublicKey,\n      pool_farm_address: PublicKey,\n      pool_lp_address: PublicKey, //\n      pool_fee_lp_address: PublicKey, //\n      pool_ray_address: PublicKey, //\n      pool_id: PublicKey, //\n      pool_user_info: PublicKey, //\n      pool_other_address: PublicKey, //\n      swapProgramId: PublicKey,\n      nonce: number,\n      tradeFeeNumerator: number,\n      tradeFeeDenominator: number,\n      ownerTradeFeeNumerator: number,\n      ownerTradeFeeDenominator: number,\n      ownerWithdrawFeeNumerator: number,\n      ownerWithdrawFeeDenominator: number,\n      hostFeeNumerator: number,\n      hostFeeDenominator: number,\n      reward_per_second: number,\n  ) {\n    let transaction = new Transaction();\n    let signers = [];\n    const instruction = TokenSwap.updateFarmInstruction(\n        tokenProgramId, // 通用token 转账 的地址\n        farm_info, //\n        authority, //\n        pool_farm_address,\n        pool_lp_address, //\n        pool_fee_lp_address, //\n        pool_ray_address, //\n        pool_id, //\n        pool_user_info, //\n        pool_other_address,\n        swapProgramId,\n        nonce,\n        tradeFeeNumerator,\n        tradeFeeDenominator,\n        ownerTradeFeeNumerator,\n        ownerTradeFeeDenominator,\n        ownerWithdrawFeeNumerator,\n        ownerWithdrawFeeDenominator,\n        hostFeeNumerator,\n        hostFeeDenominator,\n        reward_per_second,\n    );\n    console.log('日产币量:',((reward_per_second*86400)/1e9).toFixed(0),'tradeFeeNumerator',tradeFeeNumerator)\n    transaction.add(instruction);\n    let result = await sendAndConfirmTransaction(\n        'Update Farm',\n        connection,\n        transaction,\n        payer,\n        ...signers\n    );\n    console.log(\"result:\", result)\n  }\n  static async depositFarm(\n    connection: Connection,\n    payer: Account,\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户lp的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: Account,// 用户详情\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    user_transfer_authority_info: Account,// 委托方地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    amount: number,\n  ) {\n      let transaction = new Transaction();\n      const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(\n          connection,\n      );\n      // Todo 判断balanceNeeded是否存在\n      transaction.add(\n          SystemProgram.createAccount({\n              fromPubkey: payer.publicKey,\n              newAccountPubkey: user_info.publicKey,\n              lamports: balanceNeeded,\n              space: TokenFarmUserLayout.span,\n              programId: swapProgramId,\n          }),\n      );\n      const instruction = TokenSwap.depositFarmInstruction(\n          farm_info,\n          authority_info,// 矿池的owner账户\n          user_lp_address,// 用户接收farm奖励的地址\n          user_farm_address,// 用户接收farm奖励的地址\n          user_info.publicKey,// 矿池接收lp的地址\n          pool_lp_address,// 矿池接收lp的地址\n          user_transfer_authority_info.publicKey,// 委托方地址\n          tokenProgramId,\n          swapProgramId,\n          pool_farm_address,\n          pool_fee_lp_account,\n          amount,\n      );\n      transaction.add(instruction);\n      let result = await sendAndConfirmTransaction(\n          'deposit',\n          connection,\n          transaction,\n          payer,\n          user_transfer_authority_info,\n          // Todo 判断balanceNeeded是否存在,有的话不用传\n          user_info,\n      );\n    console.log(\"result:\", result)\n  }\n  static async depositFarmV2(\n    connection: Connection,\n    payer: Account,\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户lp的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: Account,// 用户详情\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    user_transfer_authority_info: Account,// 委托方地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    farm_fee_lp_address: PublicKey,\n    amount: number,\n  ) {\n      let transaction = new Transaction();\n      // const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(\n      //     connection,\n      // );\n      // // Todo 判断balanceNeeded是否存在\n      // transaction.add(\n      //     SystemProgram.createAccount({\n      //         fromPubkey: payer.publicKey,\n      //         newAccountPubkey: user_info.publicKey,\n      //         lamports: balanceNeeded,\n      //         space: TokenFarmUserLayout.span,\n      //         programId: swapProgramId,\n      //     }),\n      // );\n      const instruction = TokenSwap.depositFarmV2Instruction(\n          farm_info,\n          authority_info,// 矿池的owner账户\n          user_lp_address,// 用户接收farm奖励的地址\n          user_farm_address,// 用户接收farm奖励的地址\n          user_info.publicKey,// 矿池接收lp的地址\n          pool_lp_address,// 矿池接收lp的地址\n          user_transfer_authority_info.publicKey,// 委托方地址\n          tokenProgramId,\n          swapProgramId,\n          pool_farm_address,\n          pool_fee_lp_account,\n          pool_ray_account,\n          user_ray_account,\n          farm_program_id,\n          farm_pool_id,\n          farm_authority_info,\n          pool_user_info,\n          farm_farm_address,\n          farm_lp_address,\n          farm_fee_lp_address,\n          amount,\n      );\n      transaction.add(instruction);\n      let result = await sendAndConfirmTransaction(\n          'deposit',\n          connection,\n          transaction,\n          payer,\n          user_transfer_authority_info,\n          // Todo 判断balanceNeeded是否存在,有的话不用传\n          // user_info,\n      );\n    console.log(\"result:\", result)\n  }\n  static async depositRaydium(\n    connection: Connection,\n    payer: Account,\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户lp的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: Account,// 用户详情\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    user_transfer_authority_info: Account,// 委托方地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    amount: number,\n  ) {\n      let transaction = new Transaction();\n      const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(\n          connection,\n      );\n      // Todo 判断balanceNeeded是否存在\n      transaction.add(\n          SystemProgram.createAccount({\n              fromPubkey: payer.publicKey,\n              newAccountPubkey: user_info.publicKey,\n              lamports: balanceNeeded,\n              space: TokenFarmUserLayout.span,\n              programId: swapProgramId,\n          }),\n      );\n      const instruction = TokenSwap.depositRaydiumInstruction(\n          farm_info,\n          authority_info,// 矿池的owner账户\n          user_lp_address,// 用户接收farm奖励的地址\n          user_farm_address,// 用户接收farm奖励的地址\n          user_info.publicKey,// 矿池接收lp的地址\n          pool_lp_address,// 矿池接收lp的地址\n          user_transfer_authority_info.publicKey,// 委托方地址\n          tokenProgramId,\n          swapProgramId,\n          pool_farm_address,\n          pool_fee_lp_account,\n          pool_ray_account,\n          user_ray_account,\n          farm_program_id,\n          farm_pool_id,\n          farm_authority_info,\n          pool_user_info,\n          farm_farm_address,\n          farm_lp_address,\n          amount,\n      );\n      transaction.add(instruction);\n      let result = await sendAndConfirmTransaction(\n          'deposit',\n          connection,\n          transaction,\n          payer,\n          user_transfer_authority_info,\n          // Todo 判断balanceNeeded是否存在,有的话不用传\n          user_info,\n      );\n    console.log(\"result:\", result)\n  }\n  static async depositRaydiumV4(\n    connection: Connection,\n    payer: Account,\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户lp的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: Account,// 用户详情\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    user_transfer_authority_info: Account,// 委托方地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    pool_other_address:PublicKey,\n    farm_other_address:PublicKey,\n    user_other_address:PublicKey,\n    amount: number,\n  ) {\n      let transaction = new Transaction();\n      // const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(\n      //     connection,\n      // );\n      // // Todo 判断balanceNeeded是否存在\n      // transaction.add(\n      //     SystemProgram.createAccount({\n      //         fromPubkey: payer.publicKey,\n      //         newAccountPubkey: user_info.publicKey,\n      //         lamports: balanceNeeded,\n      //         space: TokenFarmUserLayout.span,\n      //         programId: swapProgramId,\n      //     }),\n      // );\n      const instruction = TokenSwap.depositRaydiumV4Instruction(\n          farm_info,\n          authority_info,// 矿池的owner账户\n          user_lp_address,// 用户接收farm奖励的地址\n          user_farm_address,// 用户接收farm奖励的地址\n          user_info.publicKey,// 矿池接收lp的地址\n          pool_lp_address,// 矿池接收lp的地址\n          user_transfer_authority_info.publicKey,// 委托方地址\n          tokenProgramId,\n          swapProgramId,\n          pool_farm_address,\n          pool_fee_lp_account,\n          pool_ray_account,\n          user_ray_account,\n          farm_program_id,\n          farm_pool_id,\n          farm_authority_info,\n          pool_user_info,\n          farm_farm_address,\n          farm_lp_address,\n          pool_other_address,\n          farm_other_address,\n          user_other_address,\n          amount,\n      );\n      transaction.add(instruction);\n      let result = await sendAndConfirmTransaction(\n          'deposit',\n          connection,\n          transaction,\n          payer,\n          user_transfer_authority_info,\n          // Todo 判断balanceNeeded是否存在,有的话不用传\n          // user_info,\n      );\n    console.log(\"result:\", result);\n  }\n  static async withdrawRaydiumV4(\n    connection: Connection,\n    payer: Account,\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户lp的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: Account,// 用户详情\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    pool_other_address:PublicKey,\n    farm_other_address:PublicKey,\n    user_other_address:PublicKey,\n    amount: number,\n  ) {\n      let transaction = new Transaction();\n      const instruction = TokenSwap.withdrawRaydiumV4Instruction(\n          farm_info,\n          authority_info,// 矿池的owner账户\n          user_lp_address,// 用户接收farm奖励的地址\n          user_farm_address,// 用户接收farm奖励的地址\n          user_info.publicKey,// 矿池接收lp的地址\n          pool_lp_address,// 矿池接收lp的地址\n          tokenProgramId,\n          swapProgramId,\n          pool_farm_address,\n          pool_fee_lp_account,\n          pool_ray_account,\n          user_ray_account,\n          farm_program_id,\n          farm_pool_id,\n          farm_authority_info,\n          pool_user_info,\n          farm_farm_address,\n          farm_lp_address,\n          pool_other_address,\n          farm_other_address,\n          user_other_address,\n          amount,\n      );\n      transaction.add(instruction);\n      let result = await sendAndConfirmTransaction(\n          'withdraw',\n          connection,\n          transaction,\n          payer,\n      );\n    console.log(\"result:\", result);\n  }\n  static async withdrawRaydium(\n    connection: Connection,\n    payer: Account,\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户lp的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: Account,// 用户详情\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    amount: number,\n  ) {\n      let transaction = new Transaction();\n      const instruction = TokenSwap.withdrawRaydiumInstruction(\n          farm_info,\n          authority_info,// 矿池的owner账户\n          user_lp_address,// 用户接收farm奖励的地址\n          user_farm_address,// 用户接收farm奖励的地址\n          user_info.publicKey,// 矿池接收lp的地址\n          pool_lp_address,// 矿池接收lp的地址\n          tokenProgramId,\n          swapProgramId,\n          pool_farm_address,\n          pool_fee_lp_account,\n          pool_ray_account,\n          user_ray_account,\n          farm_program_id,\n          farm_pool_id,\n          farm_authority_info,\n          pool_user_info,\n          farm_farm_address,\n          farm_lp_address,\n          amount,\n      );\n      transaction.add(instruction);\n      let result = await sendAndConfirmTransaction(\n          'withdraw',\n          connection,\n          transaction,\n          payer,\n          // user_info,\n      );\n    console.log(\"result:\", result)\n  }\n  static async harvestFarmV2(\n      connection: Connection,\n      payer: Account,\n      farm_info: PublicKey,\n      authority_info: PublicKey,// 矿池的owner账户\n      user_lp_address: PublicKey,// 用户lp的地址\n      user_farm_address: PublicKey,// 用户接收farm奖励的地址\n      user_info: Account,// 用户详情\n      pool_lp_address: PublicKey,// 矿池接收lp的地址\n      user_transfer_authority_info: Account,// 委托方地址\n      tokenProgramId: PublicKey,\n      swapProgramId: PublicKey,\n      pool_farm_address: PublicKey,\n      pool_fee_lp_account: PublicKey,\n      pool_ray_account: PublicKey,\n      user_ray_account: PublicKey,\n      farm_program_id: PublicKey,\n      farm_pool_id: PublicKey,\n      farm_authority_info: PublicKey,\n      pool_user_info: PublicKey,\n      farm_farm_address: PublicKey,\n      farm_lp_address: PublicKey,\n      farm_fee_lp_address: PublicKey,\n      amount: number,\n  ) {\n    let transaction = new Transaction();\n    const instruction = TokenSwap.depositFarmV2Instruction(\n        farm_info,\n        authority_info,// 矿池的owner账户\n        user_lp_address,// 用户接收farm奖励的地址\n        user_farm_address,// 用户接收farm奖励的地址\n        user_info.publicKey,// 矿池接收lp的地址\n        pool_lp_address,// 矿池接收lp的地址\n        user_transfer_authority_info.publicKey,// 委托方地址\n        tokenProgramId,\n        swapProgramId,\n        pool_farm_address,\n        pool_fee_lp_account,\n        pool_ray_account,\n        user_ray_account,\n        farm_program_id,\n        farm_pool_id,\n        farm_authority_info,\n        pool_user_info,\n        farm_farm_address,\n        farm_lp_address,\n        farm_fee_lp_address,\n        amount,\n    );\n    transaction.add(instruction);\n    let result = await sendAndConfirmTransaction(\n        'deposit',\n        connection,\n        transaction,\n        payer,\n        user_transfer_authority_info,\n    );\n    console.log(\"result:\", result)\n  }\n  static async withdrawFarmV2(\n      connection: Connection,\n      payer: Account,\n      farm_info: PublicKey,\n      authority_info: PublicKey,// 矿池的owner账户\n      user_lp_address: PublicKey,// 用户lp的地址\n      user_farm_address: PublicKey,// 用户接收farm奖励的地址\n      user_info: Account,// 用户详情\n      pool_lp_address: PublicKey,// 矿池接收lp的地址\n      tokenProgramId: PublicKey,\n      swapProgramId: PublicKey,\n      pool_farm_address: PublicKey,\n      pool_fee_lp_account: PublicKey,\n      pool_ray_account: PublicKey,\n      user_ray_account: PublicKey,\n      farm_program_id: PublicKey,\n      farm_pool_id: PublicKey,\n      farm_authority_info: PublicKey,\n      pool_user_info: PublicKey,\n      farm_farm_address: PublicKey,\n      farm_lp_address: PublicKey,\n      farm_fee_lp_address: PublicKey,\n      amount: number,\n  ) {\n    let transaction = new Transaction();\n    const instruction = TokenSwap.withdrawFarmV2Instruction(\n        farm_info,\n        authority_info,// 矿池的owner账户\n        user_lp_address,// 用户接收farm奖励的地址\n        user_farm_address,// 用户接收farm奖励的地址\n        user_info.publicKey,// 矿池接收lp的地址\n        pool_lp_address,// 矿池接收lp的地址\n        tokenProgramId,\n        swapProgramId,\n        pool_farm_address,\n        pool_fee_lp_account,\n        pool_ray_account,\n        user_ray_account,\n        farm_program_id,\n        farm_pool_id,\n        farm_authority_info,\n        pool_user_info,\n        farm_farm_address,\n        farm_lp_address,\n        farm_fee_lp_address,\n        amount,\n    );\n    transaction.add(instruction);\n    let result = await sendAndConfirmTransaction(\n        'withdraw',\n        connection,\n        transaction,\n        payer,\n    );\n    console.log(\"result:\", result)\n  }\n\n  static async withdrawFarm(\n    connection: Connection,\n    payer: Account,\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户lp的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: Account,// 用户详情\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    amount: number,\n  ) {\n    let transaction = new Transaction();\n    const instruction = TokenSwap.withdrawFarmInstruction(\n      farm_info,\n      authority_info,// 矿池的owner账户\n      user_lp_address,// 用户接收farm奖励的地址\n      user_farm_address,// 用户接收farm奖励的地址\n      user_info.publicKey,// 矿池接收lp的地址\n      pool_lp_address,// 矿池接收lp的地址\n      tokenProgramId,\n      swapProgramId,\n      pool_farm_address,\n      pool_fee_lp_account,\n      amount,\n    );\n    transaction.add(instruction);\n    let result = await sendAndConfirmTransaction(\n      'deposit',\n      connection,\n      transaction,\n      payer,\n    );\n    console.log(\"result:\", result)\n  }\n  static async harvestFarm(\n    connection: Connection,\n    payer: Account,\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户lp的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: Account,// 用户详情\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    user_transfer_authority_info: Account,// 委托方地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    amount: number,\n  ) {\n    let transaction = new Transaction();\n    const instruction = TokenSwap.depositFarmInstruction(\n      farm_info,\n      authority_info,// 矿池的owner账户\n      user_lp_address,// 用户接收farm奖励的地址\n      user_farm_address,// 用户接收farm奖励的地址\n      user_info.publicKey,// 矿池接收lp的地址\n      pool_lp_address,// 矿池接收lp的地址\n      user_transfer_authority_info.publicKey,// 委托方地址\n      tokenProgramId,\n      swapProgramId,\n      pool_farm_address,\n      pool_fee_lp_account,\n      amount,\n    );\n    transaction.add(instruction);\n    let result = await sendAndConfirmTransaction(\n      'harvest',\n      connection,\n      transaction,\n      payer,\n      user_transfer_authority_info,\n    );\n    console.log(\"result:\", result)\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622814637447
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/layout.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/layout.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/layout.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/layout.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/",
        "sourceFileName": "layout.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rustString = exports.uint128 = exports.uint64 = exports.publicKey = void 0;\n\nvar BufferLayout = _interopRequireWildcard(require(\"buffer-layout\"));\n\n/**\n * Layout for a public key\n */\nconst publicKey = (property = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n/**\n * Layout for a 64bit unsigned value\n */\n\n\nexports.publicKey = publicKey;\n\nconst uint64 = (property = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n/**\n * Layout for a 64bit unsigned value\n */\n\n\nexports.uint64 = uint64;\n\nconst uint128 = (property = 'uint128') => {\n  return BufferLayout.blob(16, property);\n};\n/**\n * Layout for a Rust String type\n */\n\n\nexports.uint128 = uint128;\n\nconst rustString = (property = 'string') => {\n  const rsl = BufferLayout.struct([BufferLayout.u32('length'), BufferLayout.u32('lengthPadding'), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars')], property);\n\n  const _decode = rsl.decode.bind(rsl);\n\n  const _encode = rsl.encode.bind(rsl);\n\n  rsl.decode = (buffer, offset) => {\n    const data = _decode(buffer, offset);\n\n    return data.chars.toString('utf8');\n  };\n\n  rsl.encode = (str, buffer, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8')\n    };\n    return _encode(data, buffer, offset);\n  };\n\n  return rsl;\n};\n\nexports.rustString = rustString;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxheW91dC5qcyJdLCJuYW1lcyI6WyJwdWJsaWNLZXkiLCJwcm9wZXJ0eSIsIkJ1ZmZlckxheW91dCIsImJsb2IiLCJ1aW50NjQiLCJ1aW50MTI4IiwicnVzdFN0cmluZyIsInJzbCIsInN0cnVjdCIsInUzMiIsIm9mZnNldCIsIl9kZWNvZGUiLCJkZWNvZGUiLCJiaW5kIiwiX2VuY29kZSIsImVuY29kZSIsImJ1ZmZlciIsImRhdGEiLCJjaGFycyIsInRvU3RyaW5nIiwic3RyIiwiQnVmZmVyIiwiZnJvbSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ08sTUFBTUEsU0FBUyxHQUFHLENBQUNDLFFBQWdCLEdBQUcsV0FBcEIsS0FBNEM7QUFDbkUsU0FBT0MsWUFBWSxDQUFDQyxJQUFiLENBQWtCLEVBQWxCLEVBQXNCRixRQUF0QixDQUFQO0FBQ0QsQ0FGTTtBQUlQO0FBQ0E7QUFDQTs7Ozs7QUFDTyxNQUFNRyxNQUFNLEdBQUcsQ0FBQ0gsUUFBZ0IsR0FBRyxRQUFwQixLQUF5QztBQUM3RCxTQUFPQyxZQUFZLENBQUNDLElBQWIsQ0FBa0IsQ0FBbEIsRUFBcUJGLFFBQXJCLENBQVA7QUFDRCxDQUZNO0FBSVA7QUFDQTtBQUNBOzs7OztBQUNPLE1BQU1JLE9BQU8sR0FBRyxDQUFDSixRQUFnQixHQUFHLFNBQXBCLEtBQTBDO0FBQy9ELFNBQU9DLFlBQVksQ0FBQ0MsSUFBYixDQUFrQixFQUFsQixFQUFzQkYsUUFBdEIsQ0FBUDtBQUNELENBRk07QUFJUDtBQUNBO0FBQ0E7Ozs7O0FBQ08sTUFBTUssVUFBVSxHQUFHLENBQUNMLFFBQWdCLEdBQUcsUUFBcEIsS0FBeUM7QUFDakUsUUFBTU0sR0FBRyxHQUFHTCxZQUFZLENBQUNNLE1BQWIsQ0FDVixDQUNFTixZQUFZLENBQUNPLEdBQWIsQ0FBaUIsUUFBakIsQ0FERixFQUVFUCxZQUFZLENBQUNPLEdBQWIsQ0FBaUIsZUFBakIsQ0FGRixFQUdFUCxZQUFZLENBQUNDLElBQWIsQ0FBa0JELFlBQVksQ0FBQ1EsTUFBYixDQUFvQlIsWUFBWSxDQUFDTyxHQUFiLEVBQXBCLEVBQXdDLENBQUMsQ0FBekMsQ0FBbEIsRUFBK0QsT0FBL0QsQ0FIRixDQURVLEVBTVZSLFFBTlUsQ0FBWjs7QUFRQSxRQUFNVSxPQUFPLEdBQUdKLEdBQUcsQ0FBQ0ssTUFBSixDQUFXQyxJQUFYLENBQWdCTixHQUFoQixDQUFoQjs7QUFDQSxRQUFNTyxPQUFPLEdBQUdQLEdBQUcsQ0FBQ1EsTUFBSixDQUFXRixJQUFYLENBQWdCTixHQUFoQixDQUFoQjs7QUFFQUEsRUFBQUEsR0FBRyxDQUFDSyxNQUFKLEdBQWEsQ0FBQ0ksTUFBRCxFQUFTTixNQUFULEtBQW9CO0FBQy9CLFVBQU1PLElBQUksR0FBR04sT0FBTyxDQUFDSyxNQUFELEVBQVNOLE1BQVQsQ0FBcEI7O0FBQ0EsV0FBT08sSUFBSSxDQUFDQyxLQUFMLENBQVdDLFFBQVgsQ0FBb0IsTUFBcEIsQ0FBUDtBQUNELEdBSEQ7O0FBS0FaLEVBQUFBLEdBQUcsQ0FBQ1EsTUFBSixHQUFhLENBQUNLLEdBQUQsRUFBTUosTUFBTixFQUFjTixNQUFkLEtBQXlCO0FBQ3BDLFVBQU1PLElBQUksR0FBRztBQUNYQyxNQUFBQSxLQUFLLEVBQUVHLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZRixHQUFaLEVBQWlCLE1BQWpCO0FBREksS0FBYjtBQUdBLFdBQU9OLE9BQU8sQ0FBQ0csSUFBRCxFQUFPRCxNQUFQLEVBQWVOLE1BQWYsQ0FBZDtBQUNELEdBTEQ7O0FBT0EsU0FBT0gsR0FBUDtBQUNELENBekJNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9mYW54dS93d3cvbm9kZS9zb2xhbmEtcHJvZ3JhbS1saWJyYXJ5L3Rva2VuLXN3YXAvanMvY2xpZW50LyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5cbmltcG9ydCAqIGFzIEJ1ZmZlckxheW91dCBmcm9tICdidWZmZXItbGF5b3V0JztcblxuLyoqXG4gKiBMYXlvdXQgZm9yIGEgcHVibGljIGtleVxuICovXG5leHBvcnQgY29uc3QgcHVibGljS2V5ID0gKHByb3BlcnR5OiBzdHJpbmcgPSAncHVibGljS2V5Jyk6IE9iamVjdCA9PiB7XG4gIHJldHVybiBCdWZmZXJMYXlvdXQuYmxvYigzMiwgcHJvcGVydHkpO1xufTtcblxuLyoqXG4gKiBMYXlvdXQgZm9yIGEgNjRiaXQgdW5zaWduZWQgdmFsdWVcbiAqL1xuZXhwb3J0IGNvbnN0IHVpbnQ2NCA9IChwcm9wZXJ0eTogc3RyaW5nID0gJ3VpbnQ2NCcpOiBPYmplY3QgPT4ge1xuICByZXR1cm4gQnVmZmVyTGF5b3V0LmJsb2IoOCwgcHJvcGVydHkpO1xufTtcblxuLyoqXG4gKiBMYXlvdXQgZm9yIGEgNjRiaXQgdW5zaWduZWQgdmFsdWVcbiAqL1xuZXhwb3J0IGNvbnN0IHVpbnQxMjggPSAocHJvcGVydHk6IHN0cmluZyA9ICd1aW50MTI4Jyk6IE9iamVjdCA9PiB7XG4gIHJldHVybiBCdWZmZXJMYXlvdXQuYmxvYigxNiwgcHJvcGVydHkpO1xufTtcblxuLyoqXG4gKiBMYXlvdXQgZm9yIGEgUnVzdCBTdHJpbmcgdHlwZVxuICovXG5leHBvcnQgY29uc3QgcnVzdFN0cmluZyA9IChwcm9wZXJ0eTogc3RyaW5nID0gJ3N0cmluZycpOiBPYmplY3QgPT4ge1xuICBjb25zdCByc2wgPSBCdWZmZXJMYXlvdXQuc3RydWN0KFxuICAgIFtcbiAgICAgIEJ1ZmZlckxheW91dC51MzIoJ2xlbmd0aCcpLFxuICAgICAgQnVmZmVyTGF5b3V0LnUzMignbGVuZ3RoUGFkZGluZycpLFxuICAgICAgQnVmZmVyTGF5b3V0LmJsb2IoQnVmZmVyTGF5b3V0Lm9mZnNldChCdWZmZXJMYXlvdXQudTMyKCksIC04KSwgJ2NoYXJzJyksXG4gICAgXSxcbiAgICBwcm9wZXJ0eSxcbiAgKTtcbiAgY29uc3QgX2RlY29kZSA9IHJzbC5kZWNvZGUuYmluZChyc2wpO1xuICBjb25zdCBfZW5jb2RlID0gcnNsLmVuY29kZS5iaW5kKHJzbCk7XG5cbiAgcnNsLmRlY29kZSA9IChidWZmZXIsIG9mZnNldCkgPT4ge1xuICAgIGNvbnN0IGRhdGEgPSBfZGVjb2RlKGJ1ZmZlciwgb2Zmc2V0KTtcbiAgICByZXR1cm4gZGF0YS5jaGFycy50b1N0cmluZygndXRmOCcpO1xuICB9O1xuXG4gIHJzbC5lbmNvZGUgPSAoc3RyLCBidWZmZXIsIG9mZnNldCkgPT4ge1xuICAgIGNvbnN0IGRhdGEgPSB7XG4gICAgICBjaGFyczogQnVmZmVyLmZyb20oc3RyLCAndXRmOCcpLFxuICAgIH07XG4gICAgcmV0dXJuIF9lbmNvZGUoZGF0YSwgYnVmZmVyLCBvZmZzZXQpO1xuICB9O1xuXG4gIHJldHVybiByc2w7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "layout.js"
      ],
      "names": [
        "publicKey",
        "property",
        "BufferLayout",
        "blob",
        "uint64",
        "uint128",
        "rustString",
        "rsl",
        "struct",
        "u32",
        "offset",
        "_decode",
        "decode",
        "bind",
        "_encode",
        "encode",
        "buffer",
        "data",
        "chars",
        "toString",
        "str",
        "Buffer",
        "from"
      ],
      "mappings": ";;;;;;;;;AAEA;;AAEA;AACA;AACA;AACO,MAAMA,SAAS,GAAG,CAACC,QAAgB,GAAG,WAApB,KAA4C;AACnE,SAAOC,YAAY,CAACC,IAAb,CAAkB,EAAlB,EAAsBF,QAAtB,CAAP;AACD,CAFM;AAIP;AACA;AACA;;;;;AACO,MAAMG,MAAM,GAAG,CAACH,QAAgB,GAAG,QAApB,KAAyC;AAC7D,SAAOC,YAAY,CAACC,IAAb,CAAkB,CAAlB,EAAqBF,QAArB,CAAP;AACD,CAFM;AAIP;AACA;AACA;;;;;AACO,MAAMI,OAAO,GAAG,CAACJ,QAAgB,GAAG,SAApB,KAA0C;AAC/D,SAAOC,YAAY,CAACC,IAAb,CAAkB,EAAlB,EAAsBF,QAAtB,CAAP;AACD,CAFM;AAIP;AACA;AACA;;;;;AACO,MAAMK,UAAU,GAAG,CAACL,QAAgB,GAAG,QAApB,KAAyC;AACjE,QAAMM,GAAG,GAAGL,YAAY,CAACM,MAAb,CACV,CACEN,YAAY,CAACO,GAAb,CAAiB,QAAjB,CADF,EAEEP,YAAY,CAACO,GAAb,CAAiB,eAAjB,CAFF,EAGEP,YAAY,CAACC,IAAb,CAAkBD,YAAY,CAACQ,MAAb,CAAoBR,YAAY,CAACO,GAAb,EAApB,EAAwC,CAAC,CAAzC,CAAlB,EAA+D,OAA/D,CAHF,CADU,EAMVR,QANU,CAAZ;;AAQA,QAAMU,OAAO,GAAGJ,GAAG,CAACK,MAAJ,CAAWC,IAAX,CAAgBN,GAAhB,CAAhB;;AACA,QAAMO,OAAO,GAAGP,GAAG,CAACQ,MAAJ,CAAWF,IAAX,CAAgBN,GAAhB,CAAhB;;AAEAA,EAAAA,GAAG,CAACK,MAAJ,GAAa,CAACI,MAAD,EAASN,MAAT,KAAoB;AAC/B,UAAMO,IAAI,GAAGN,OAAO,CAACK,MAAD,EAASN,MAAT,CAApB;;AACA,WAAOO,IAAI,CAACC,KAAL,CAAWC,QAAX,CAAoB,MAApB,CAAP;AACD,GAHD;;AAKAZ,EAAAA,GAAG,CAACQ,MAAJ,GAAa,CAACK,GAAD,EAAMJ,MAAN,EAAcN,MAAd,KAAyB;AACpC,UAAMO,IAAI,GAAG;AACXC,MAAAA,KAAK,EAAEG,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiB,MAAjB;AADI,KAAb;AAGA,WAAON,OAAO,CAACG,IAAD,EAAOD,MAAP,EAAeN,MAAf,CAAd;AACD,GALD;;AAOA,SAAOH,GAAP;AACD,CAzBM",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/",
      "sourcesContent": [
        "// @flow\n\nimport * as BufferLayout from 'buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey'): Object => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64'): Object => {\n  return BufferLayout.blob(8, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint128 = (property: string = 'uint128'): Object => {\n  return BufferLayout.blob(16, property);\n};\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (property: string = 'string'): Object => {\n  const rsl = BufferLayout.struct(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  rsl.decode = (buffer, offset) => {\n    const data = _decode(buffer, offset);\n    return data.chars.toString('utf8');\n  };\n\n  rsl.encode = (str, buffer, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, buffer, offset);\n  };\n\n  return rsl;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622814637447
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/send-and-confirm-transaction.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/send-and-confirm-transaction.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/send-and-confirm-transaction.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/send-and-confirm-transaction.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
        "sourceFileName": "send-and-confirm-transaction.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendAndConfirmTransaction = sendAndConfirmTransaction;\n\nvar _web = require(\"@solana/web3.js\");\n\nfunction sendAndConfirmTransaction(title, connection, transaction, ...signers) {\n  return (0, _web.sendAndConfirmTransaction)(connection, transaction, signers, {\n    skipPreflight: false,\n    commitment: 'recent',\n    preflightCommitment: 'recent'\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbmQtYW5kLWNvbmZpcm0tdHJhbnNhY3Rpb24uanMiXSwibmFtZXMiOlsic2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbiIsInRpdGxlIiwiY29ubmVjdGlvbiIsInRyYW5zYWN0aW9uIiwic2lnbmVycyIsInNraXBQcmVmbGlnaHQiLCJjb21taXRtZW50IiwicHJlZmxpZ2h0Q29tbWl0bWVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBOztBQVFPLFNBQVNBLHlCQUFULENBQ0xDLEtBREssRUFFTEMsVUFGSyxFQUdMQyxXQUhLLEVBSUwsR0FBR0MsT0FKRSxFQUswQjtBQUMvQixTQUFPLG9DQUE4QkYsVUFBOUIsRUFBMENDLFdBQTFDLEVBQXVEQyxPQUF2RCxFQUFnRTtBQUNyRUMsSUFBQUEsYUFBYSxFQUFFLEtBRHNEO0FBRXJFQyxJQUFBQSxVQUFVLEVBQUUsUUFGeUQ7QUFHckVDLElBQUFBLG1CQUFtQixFQUFFO0FBSGdELEdBQWhFLENBQVA7QUFLRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZmFueHUvd3d3L25vZGUvc29sYW5hLXByb2dyYW0tbGlicmFyeS90b2tlbi1zd2FwL2pzL2NsaWVudC91dGlsLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5cbmltcG9ydCB7c2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbiBhcyByZWFsU2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbn0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB0eXBlIHtcbiAgQWNjb3VudCxcbiAgQ29ubmVjdGlvbixcbiAgVHJhbnNhY3Rpb24sXG4gIFRyYW5zYWN0aW9uU2lnbmF0dXJlLFxufSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuXG5leHBvcnQgZnVuY3Rpb24gc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbihcbiAgdGl0bGU6IHN0cmluZyxcbiAgY29ubmVjdGlvbjogQ29ubmVjdGlvbixcbiAgdHJhbnNhY3Rpb246IFRyYW5zYWN0aW9uLFxuICAuLi5zaWduZXJzOiBBcnJheTxBY2NvdW50PlxuKTogUHJvbWlzZTxUcmFuc2FjdGlvblNpZ25hdHVyZT4ge1xuICByZXR1cm4gcmVhbFNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24oY29ubmVjdGlvbiwgdHJhbnNhY3Rpb24sIHNpZ25lcnMsIHtcbiAgICBza2lwUHJlZmxpZ2h0OiBmYWxzZSxcbiAgICBjb21taXRtZW50OiAncmVjZW50JyxcbiAgICBwcmVmbGlnaHRDb21taXRtZW50OiAncmVjZW50JyxcbiAgfSk7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "send-and-confirm-transaction.js"
      ],
      "names": [
        "sendAndConfirmTransaction",
        "title",
        "connection",
        "transaction",
        "signers",
        "skipPreflight",
        "commitment",
        "preflightCommitment"
      ],
      "mappings": ";;;;;;;AAEA;;AAQO,SAASA,yBAAT,CACLC,KADK,EAELC,UAFK,EAGLC,WAHK,EAIL,GAAGC,OAJE,EAK0B;AAC/B,SAAO,oCAA8BF,UAA9B,EAA0CC,WAA1C,EAAuDC,OAAvD,EAAgE;AACrEC,IAAAA,aAAa,EAAE,KADsD;AAErEC,IAAAA,UAAU,EAAE,QAFyD;AAGrEC,IAAAA,mBAAmB,EAAE;AAHgD,GAAhE,CAAP;AAKD",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
      "sourcesContent": [
        "// @flow\n\nimport {sendAndConfirmTransaction as realSendAndConfirmTransaction} from '@solana/web3.js';\nimport type {\n  Account,\n  Connection,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nexport function sendAndConfirmTransaction(\n  title: string,\n  connection: Connection,\n  transaction: Transaction,\n  ...signers: Array<Account>\n): Promise<TransactionSignature> {\n  return realSendAndConfirmTransaction(connection, transaction, signers, {\n    skipPreflight: false,\n    commitment: 'recent',\n    preflightCommitment: 'recent',\n  });\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622813329854
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/account.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/account.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/account.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/account.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
        "sourceFileName": "account.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadAccount = loadAccount;\n\nvar _web = require(\"@solana/web3.js\");\n\nasync function loadAccount(connection, address, programId) {\n  const accountInfo = await connection.getAccountInfo(address);\n\n  if (accountInfo === null) {\n    throw new Error('Failed to find account');\n  }\n\n  if (!accountInfo.owner.equals(programId)) {\n    throw new Error(`Invalid owner: ${JSON.stringify(accountInfo.owner)}`);\n  }\n\n  return Buffer.from(accountInfo.data);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnQuanMiXSwibmFtZXMiOlsibG9hZEFjY291bnQiLCJjb25uZWN0aW9uIiwiYWRkcmVzcyIsInByb2dyYW1JZCIsImFjY291bnRJbmZvIiwiZ2V0QWNjb3VudEluZm8iLCJFcnJvciIsIm93bmVyIiwiZXF1YWxzIiwiSlNPTiIsInN0cmluZ2lmeSIsIkJ1ZmZlciIsImZyb20iLCJkYXRhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBRU8sZUFBZUEsV0FBZixDQUNMQyxVQURLLEVBRUxDLE9BRkssRUFHTEMsU0FISyxFQUlHO0FBQ1IsUUFBTUMsV0FBVyxHQUFHLE1BQU1ILFVBQVUsQ0FBQ0ksY0FBWCxDQUEwQkgsT0FBMUIsQ0FBMUI7O0FBQ0EsTUFBSUUsV0FBVyxLQUFLLElBQXBCLEVBQTBCO0FBQ3hCLFVBQU0sSUFBSUUsS0FBSixDQUFVLHdCQUFWLENBQU47QUFDRDs7QUFFRCxNQUFJLENBQUNGLFdBQVcsQ0FBQ0csS0FBWixDQUFrQkMsTUFBbEIsQ0FBeUJMLFNBQXpCLENBQUwsRUFBMEM7QUFDeEMsVUFBTSxJQUFJRyxLQUFKLENBQVcsa0JBQWlCRyxJQUFJLENBQUNDLFNBQUwsQ0FBZU4sV0FBVyxDQUFDRyxLQUEzQixDQUFrQyxFQUE5RCxDQUFOO0FBQ0Q7O0FBRUQsU0FBT0ksTUFBTSxDQUFDQyxJQUFQLENBQVlSLFdBQVcsQ0FBQ1MsSUFBeEIsQ0FBUDtBQUNEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9mYW54dS93d3cvbm9kZS9zb2xhbmEtcHJvZ3JhbS1saWJyYXJ5L3Rva2VuLXN3YXAvanMvY2xpZW50L3V0aWwvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUge0Nvbm5lY3Rpb259IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQge1B1YmxpY0tleX0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvYWRBY2NvdW50KFxuICBjb25uZWN0aW9uOiBDb25uZWN0aW9uLFxuICBhZGRyZXNzOiBQdWJsaWNLZXksXG4gIHByb2dyYW1JZDogUHVibGljS2V5LFxuKTogQnVmZmVyIHtcbiAgY29uc3QgYWNjb3VudEluZm8gPSBhd2FpdCBjb25uZWN0aW9uLmdldEFjY291bnRJbmZvKGFkZHJlc3MpO1xuICBpZiAoYWNjb3VudEluZm8gPT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmaW5kIGFjY291bnQnKTtcbiAgfVxuXG4gIGlmICghYWNjb3VudEluZm8ub3duZXIuZXF1YWxzKHByb2dyYW1JZCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgb3duZXI6ICR7SlNPTi5zdHJpbmdpZnkoYWNjb3VudEluZm8ub3duZXIpfWApO1xuICB9XG5cbiAgcmV0dXJuIEJ1ZmZlci5mcm9tKGFjY291bnRJbmZvLmRhdGEpO1xufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "account.js"
      ],
      "names": [
        "loadAccount",
        "connection",
        "address",
        "programId",
        "accountInfo",
        "getAccountInfo",
        "Error",
        "owner",
        "equals",
        "JSON",
        "stringify",
        "Buffer",
        "from",
        "data"
      ],
      "mappings": ";;;;;;;AACA;;AAEO,eAAeA,WAAf,CACLC,UADK,EAELC,OAFK,EAGLC,SAHK,EAIG;AACR,QAAMC,WAAW,GAAG,MAAMH,UAAU,CAACI,cAAX,CAA0BH,OAA1B,CAA1B;;AACA,MAAIE,WAAW,KAAK,IAApB,EAA0B;AACxB,UAAM,IAAIE,KAAJ,CAAU,wBAAV,CAAN;AACD;;AAED,MAAI,CAACF,WAAW,CAACG,KAAZ,CAAkBC,MAAlB,CAAyBL,SAAzB,CAAL,EAA0C;AACxC,UAAM,IAAIG,KAAJ,CAAW,kBAAiBG,IAAI,CAACC,SAAL,CAAeN,WAAW,CAACG,KAA3B,CAAkC,EAA9D,CAAN;AACD;;AAED,SAAOI,MAAM,CAACC,IAAP,CAAYR,WAAW,CAACS,IAAxB,CAAP;AACD",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
      "sourcesContent": [
        "import type {Connection} from '@solana/web3.js';\nimport {PublicKey} from '@solana/web3.js';\n\nexport async function loadAccount(\n  connection: Connection,\n  address: PublicKey,\n  programId: PublicKey,\n): Buffer {\n  const accountInfo = await connection.getAccountInfo(address);\n  if (accountInfo === null) {\n    throw new Error('Failed to find account');\n  }\n\n  if (!accountInfo.owner.equals(programId)) {\n    throw new Error(`Invalid owner: ${JSON.stringify(accountInfo.owner)}`);\n  }\n\n  return Buffer.from(accountInfo.data);\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622813329854
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/new-account-with-lamports.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/new-account-with-lamports.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/new-account-with-lamports.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/new-account-with-lamports.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
        "sourceFileName": "new-account-with-lamports.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.newAccountWithLamports = newAccountWithLamports;\n\nvar _web = require(\"@solana/web3.js\");\n\nvar _sleep = require(\"./sleep\");\n\nasync function newAccountWithLamports(connection, lamports = 1000000) {\n  const account = new _web.Account();\n  let retries = 30;\n  await connection.requestAirdrop(account.publicKey, lamports);\n\n  for (;;) {\n    await (0, _sleep.sleep)(500);\n\n    if (lamports == (await connection.getBalance(account.publicKey))) {\n      return account;\n    }\n\n    if (--retries <= 0) {\n      break;\n    }\n  }\n\n  throw new Error(`Airdrop of ${lamports} failed`);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5ldy1hY2NvdW50LXdpdGgtbGFtcG9ydHMuanMiXSwibmFtZXMiOlsibmV3QWNjb3VudFdpdGhMYW1wb3J0cyIsImNvbm5lY3Rpb24iLCJsYW1wb3J0cyIsImFjY291bnQiLCJBY2NvdW50IiwicmV0cmllcyIsInJlcXVlc3RBaXJkcm9wIiwicHVibGljS2V5IiwiZ2V0QmFsYW5jZSIsIkVycm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUE7O0FBRUE7O0FBRU8sZUFBZUEsc0JBQWYsQ0FDTEMsVUFESyxFQUVMQyxRQUFnQixHQUFHLE9BRmQsRUFHYTtBQUNsQixRQUFNQyxPQUFPLEdBQUcsSUFBSUMsWUFBSixFQUFoQjtBQUVBLE1BQUlDLE9BQU8sR0FBRyxFQUFkO0FBQ0EsUUFBTUosVUFBVSxDQUFDSyxjQUFYLENBQTBCSCxPQUFPLENBQUNJLFNBQWxDLEVBQTZDTCxRQUE3QyxDQUFOOztBQUNBLFdBQVM7QUFDUCxVQUFNLGtCQUFNLEdBQU4sQ0FBTjs7QUFDQSxRQUFJQSxRQUFRLEtBQUssTUFBTUQsVUFBVSxDQUFDTyxVQUFYLENBQXNCTCxPQUFPLENBQUNJLFNBQTlCLENBQVgsQ0FBWixFQUFrRTtBQUNoRSxhQUFPSixPQUFQO0FBQ0Q7O0FBQ0QsUUFBSSxFQUFFRSxPQUFGLElBQWEsQ0FBakIsRUFBb0I7QUFDbEI7QUFDRDtBQUNGOztBQUNELFFBQU0sSUFBSUksS0FBSixDQUFXLGNBQWFQLFFBQVMsU0FBakMsQ0FBTjtBQUNEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9mYW54dS93d3cvbm9kZS9zb2xhbmEtcHJvZ3JhbS1saWJyYXJ5L3Rva2VuLXN3YXAvanMvY2xpZW50L3V0aWwvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQGZsb3dcblxuaW1wb3J0IHtBY2NvdW50LCBDb25uZWN0aW9ufSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuXG5pbXBvcnQge3NsZWVwfSBmcm9tICcuL3NsZWVwJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG5ld0FjY291bnRXaXRoTGFtcG9ydHMoXG4gIGNvbm5lY3Rpb246IENvbm5lY3Rpb24sXG4gIGxhbXBvcnRzOiBudW1iZXIgPSAxMDAwMDAwLFxuKTogUHJvbWlzZTxBY2NvdW50PiB7XG4gIGNvbnN0IGFjY291bnQgPSBuZXcgQWNjb3VudCgpO1xuXG4gIGxldCByZXRyaWVzID0gMzA7XG4gIGF3YWl0IGNvbm5lY3Rpb24ucmVxdWVzdEFpcmRyb3AoYWNjb3VudC5wdWJsaWNLZXksIGxhbXBvcnRzKTtcbiAgZm9yICg7Oykge1xuICAgIGF3YWl0IHNsZWVwKDUwMCk7XG4gICAgaWYgKGxhbXBvcnRzID09IChhd2FpdCBjb25uZWN0aW9uLmdldEJhbGFuY2UoYWNjb3VudC5wdWJsaWNLZXkpKSkge1xuICAgICAgcmV0dXJuIGFjY291bnQ7XG4gICAgfVxuICAgIGlmICgtLXJldHJpZXMgPD0gMCkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHRocm93IG5ldyBFcnJvcihgQWlyZHJvcCBvZiAke2xhbXBvcnRzfSBmYWlsZWRgKTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "new-account-with-lamports.js"
      ],
      "names": [
        "newAccountWithLamports",
        "connection",
        "lamports",
        "account",
        "Account",
        "retries",
        "requestAirdrop",
        "publicKey",
        "getBalance",
        "Error"
      ],
      "mappings": ";;;;;;;AAEA;;AAEA;;AAEO,eAAeA,sBAAf,CACLC,UADK,EAELC,QAAgB,GAAG,OAFd,EAGa;AAClB,QAAMC,OAAO,GAAG,IAAIC,YAAJ,EAAhB;AAEA,MAAIC,OAAO,GAAG,EAAd;AACA,QAAMJ,UAAU,CAACK,cAAX,CAA0BH,OAAO,CAACI,SAAlC,EAA6CL,QAA7C,CAAN;;AACA,WAAS;AACP,UAAM,kBAAM,GAAN,CAAN;;AACA,QAAIA,QAAQ,KAAK,MAAMD,UAAU,CAACO,UAAX,CAAsBL,OAAO,CAACI,SAA9B,CAAX,CAAZ,EAAkE;AAChE,aAAOJ,OAAP;AACD;;AACD,QAAI,EAAEE,OAAF,IAAa,CAAjB,EAAoB;AAClB;AACD;AACF;;AACD,QAAM,IAAII,KAAJ,CAAW,cAAaP,QAAS,SAAjC,CAAN;AACD",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
      "sourcesContent": [
        "// @flow\n\nimport {Account, Connection} from '@solana/web3.js';\n\nimport {sleep} from './sleep';\n\nexport async function newAccountWithLamports(\n  connection: Connection,\n  lamports: number = 1000000,\n): Promise<Account> {\n  const account = new Account();\n\n  let retries = 30;\n  await connection.requestAirdrop(account.publicKey, lamports);\n  for (;;) {\n    await sleep(500);\n    if (lamports == (await connection.getBalance(account.publicKey))) {\n      return account;\n    }\n    if (--retries <= 0) {\n      break;\n    }\n  }\n  throw new Error(`Airdrop of ${lamports} failed`);\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622813329854
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/sleep.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/sleep.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/sleep.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/sleep.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
        "sourceFileName": "sleep.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sleep = sleep;\n\n// zzz\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNsZWVwLmpzIl0sIm5hbWVzIjpbInNsZWVwIiwibXMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTtBQUNPLFNBQVNBLEtBQVQsQ0FBZUMsRUFBZixFQUEwQztBQUMvQyxTQUFPLElBQUlDLE9BQUosQ0FBWUMsT0FBTyxJQUFJQyxVQUFVLENBQUNELE9BQUQsRUFBVUYsRUFBVixDQUFqQyxDQUFQO0FBQ0QiLCJzb3VyY2VSb290IjoiL1VzZXJzL2Zhbnh1L3d3dy9ub2RlL3NvbGFuYS1wcm9ncmFtLWxpYnJhcnkvdG9rZW4tc3dhcC9qcy9jbGllbnQvdXRpbC8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuXG4vLyB6enpcbmV4cG9ydCBmdW5jdGlvbiBzbGVlcChtczogbnVtYmVyKTogUHJvbWlzZTx2b2lkPiB7XG4gIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "sleep.js"
      ],
      "names": [
        "sleep",
        "ms",
        "Promise",
        "resolve",
        "setTimeout"
      ],
      "mappings": ";;;;;;;AAEA;AACO,SAASA,KAAT,CAAeC,EAAf,EAA0C;AAC/C,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAAP;AACD",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
      "sourcesContent": [
        "// @flow\n\n// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622813329854
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/url.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/url.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/url.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/url.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/",
        "sourceFileName": "url.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.walletUrl = exports.urlTls = exports.url = exports.cluster = void 0;\n\nvar _web = require(\"@solana/web3.js\");\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\n// To connect to a public cluster, set `export LIVE=1` in your\n// environment. By default, `LIVE=1` will connect to the devnet cluster.\nfunction chooseCluster() {\n  _dotenv.default.config();\n\n  if (!process.env.LIVE) return;\n\n  switch (process.env.CLUSTER) {\n    case 'devnet':\n    case 'testnet':\n    case 'mainnet-beta':\n      {\n        return process.env.CLUSTER;\n      }\n  }\n\n  throw 'Unknown cluster \"' + process.env.CLUSTER + '\", check the .env file';\n}\n\nconst cluster = chooseCluster(); // export const url = 'https://api.mainnet-beta.solana.com';\n\nexports.cluster = cluster;\nconst url = 'https://solana-api.projectserum.com/'; // export const url =\n//   process.env.RPC_URL ||\n//   (process.env.LIVE ? clusterApiUrl(cluster, false) : 'http://localhost:8899');\n\nexports.url = url;\nconst urlTls = process.env.RPC_URL || (process.env.LIVE ? (0, _web.clusterApiUrl)(cluster, true) : 'http://localhost:8899');\nexports.urlTls = urlTls;\nlet walletUrl = process.env.WALLET_URL || 'https://solana-example-webwallet.herokuapp.com/';\nexports.walletUrl = walletUrl;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVybC5qcyJdLCJuYW1lcyI6WyJjaG9vc2VDbHVzdGVyIiwiZG90ZW52IiwiY29uZmlnIiwicHJvY2VzcyIsImVudiIsIkxJVkUiLCJDTFVTVEVSIiwiY2x1c3RlciIsInVybCIsInVybFRscyIsIlJQQ19VUkwiLCJ3YWxsZXRVcmwiLCJXQUxMRVRfVVJMIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFKQTtBQUNBO0FBS0EsU0FBU0EsYUFBVCxHQUE4QztBQUM1Q0Msa0JBQU9DLE1BQVA7O0FBQ0EsTUFBSSxDQUFDQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBakIsRUFBdUI7O0FBQ3ZCLFVBQVFGLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRSxPQUFwQjtBQUNFLFNBQUssUUFBTDtBQUNBLFNBQUssU0FBTDtBQUNBLFNBQUssY0FBTDtBQUFxQjtBQUNuQixlQUFPSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsT0FBbkI7QUFDRDtBQUxIOztBQU9BLFFBQU0sc0JBQXNCSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsT0FBbEMsR0FBNEMsd0JBQWxEO0FBQ0Q7O0FBRU0sTUFBTUMsT0FBTyxHQUFHUCxhQUFhLEVBQTdCLEMsQ0FFUDs7O0FBQ08sTUFBTVEsR0FBRyxHQUFHLHNDQUFaLEMsQ0FDUDtBQUNBO0FBQ0E7OztBQUVPLE1BQU1DLE1BQU0sR0FDakJOLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTSxPQUFaLEtBQ0NQLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLEdBQW1CLHdCQUFjRSxPQUFkLEVBQXVCLElBQXZCLENBQW5CLEdBQWtELHVCQURuRCxDQURLOztBQUlBLElBQUlJLFNBQVMsR0FDbEJSLE9BQU8sQ0FBQ0MsR0FBUixDQUFZUSxVQUFaLElBQTBCLGlEQURyQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZmFueHUvd3d3L25vZGUvc29sYW5hLXByb2dyYW0tbGlicmFyeS90b2tlbi1zd2FwL2pzLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRvIGNvbm5lY3QgdG8gYSBwdWJsaWMgY2x1c3Rlciwgc2V0IGBleHBvcnQgTElWRT0xYCBpbiB5b3VyXG4vLyBlbnZpcm9ubWVudC4gQnkgZGVmYXVsdCwgYExJVkU9MWAgd2lsbCBjb25uZWN0IHRvIHRoZSBkZXZuZXQgY2x1c3Rlci5cblxuaW1wb3J0IHtjbHVzdGVyQXBpVXJsLCBDbHVzdGVyfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IGRvdGVudiBmcm9tICdkb3RlbnYnO1xuXG5mdW5jdGlvbiBjaG9vc2VDbHVzdGVyKCk6IENsdXN0ZXIgfCB1bmRlZmluZWQge1xuICBkb3RlbnYuY29uZmlnKCk7XG4gIGlmICghcHJvY2Vzcy5lbnYuTElWRSkgcmV0dXJuO1xuICBzd2l0Y2ggKHByb2Nlc3MuZW52LkNMVVNURVIpIHtcbiAgICBjYXNlICdkZXZuZXQnOlxuICAgIGNhc2UgJ3Rlc3RuZXQnOlxuICAgIGNhc2UgJ21haW5uZXQtYmV0YSc6IHtcbiAgICAgIHJldHVybiBwcm9jZXNzLmVudi5DTFVTVEVSO1xuICAgIH1cbiAgfVxuICB0aHJvdyAnVW5rbm93biBjbHVzdGVyIFwiJyArIHByb2Nlc3MuZW52LkNMVVNURVIgKyAnXCIsIGNoZWNrIHRoZSAuZW52IGZpbGUnO1xufVxuXG5leHBvcnQgY29uc3QgY2x1c3RlciA9IGNob29zZUNsdXN0ZXIoKTtcblxuLy8gZXhwb3J0IGNvbnN0IHVybCA9ICdodHRwczovL2FwaS5tYWlubmV0LWJldGEuc29sYW5hLmNvbSc7XG5leHBvcnQgY29uc3QgdXJsID0gJ2h0dHBzOi8vc29sYW5hLWFwaS5wcm9qZWN0c2VydW0uY29tLyc7XG4vLyBleHBvcnQgY29uc3QgdXJsID1cbi8vICAgcHJvY2Vzcy5lbnYuUlBDX1VSTCB8fFxuLy8gICAocHJvY2Vzcy5lbnYuTElWRSA/IGNsdXN0ZXJBcGlVcmwoY2x1c3RlciwgZmFsc2UpIDogJ2h0dHA6Ly9sb2NhbGhvc3Q6ODg5OScpO1xuXG5leHBvcnQgY29uc3QgdXJsVGxzID1cbiAgcHJvY2Vzcy5lbnYuUlBDX1VSTCB8fFxuICAocHJvY2Vzcy5lbnYuTElWRSA/IGNsdXN0ZXJBcGlVcmwoY2x1c3RlciwgdHJ1ZSkgOiAnaHR0cDovL2xvY2FsaG9zdDo4ODk5Jyk7XG5cbmV4cG9ydCBsZXQgd2FsbGV0VXJsID1cbiAgcHJvY2Vzcy5lbnYuV0FMTEVUX1VSTCB8fCAnaHR0cHM6Ly9zb2xhbmEtZXhhbXBsZS13ZWJ3YWxsZXQuaGVyb2t1YXBwLmNvbS8nO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "url.js"
      ],
      "names": [
        "chooseCluster",
        "dotenv",
        "config",
        "process",
        "env",
        "LIVE",
        "CLUSTER",
        "cluster",
        "url",
        "urlTls",
        "RPC_URL",
        "walletUrl",
        "WALLET_URL"
      ],
      "mappings": ";;;;;;;;;AAGA;;AACA;;AAJA;AACA;AAKA,SAASA,aAAT,GAA8C;AAC5CC,kBAAOC,MAAP;;AACA,MAAI,CAACC,OAAO,CAACC,GAAR,CAAYC,IAAjB,EAAuB;;AACvB,UAAQF,OAAO,CAACC,GAAR,CAAYE,OAApB;AACE,SAAK,QAAL;AACA,SAAK,SAAL;AACA,SAAK,cAAL;AAAqB;AACnB,eAAOH,OAAO,CAACC,GAAR,CAAYE,OAAnB;AACD;AALH;;AAOA,QAAM,sBAAsBH,OAAO,CAACC,GAAR,CAAYE,OAAlC,GAA4C,wBAAlD;AACD;;AAEM,MAAMC,OAAO,GAAGP,aAAa,EAA7B,C,CAEP;;;AACO,MAAMQ,GAAG,GAAG,sCAAZ,C,CACP;AACA;AACA;;;AAEO,MAAMC,MAAM,GACjBN,OAAO,CAACC,GAAR,CAAYM,OAAZ,KACCP,OAAO,CAACC,GAAR,CAAYC,IAAZ,GAAmB,wBAAcE,OAAd,EAAuB,IAAvB,CAAnB,GAAkD,uBADnD,CADK;;AAIA,IAAII,SAAS,GAClBR,OAAO,CAACC,GAAR,CAAYQ,UAAZ,IAA0B,iDADrB",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/",
      "sourcesContent": [
        "// To connect to a public cluster, set `export LIVE=1` in your\n// environment. By default, `LIVE=1` will connect to the devnet cluster.\n\nimport {clusterApiUrl, Cluster} from '@solana/web3.js';\nimport dotenv from 'dotenv';\n\nfunction chooseCluster(): Cluster | undefined {\n  dotenv.config();\n  if (!process.env.LIVE) return;\n  switch (process.env.CLUSTER) {\n    case 'devnet':\n    case 'testnet':\n    case 'mainnet-beta': {\n      return process.env.CLUSTER;\n    }\n  }\n  throw 'Unknown cluster \"' + process.env.CLUSTER + '\", check the .env file';\n}\n\nexport const cluster = chooseCluster();\n\n// export const url = 'https://api.mainnet-beta.solana.com';\nexport const url = 'https://solana-api.projectserum.com/';\n// export const url =\n//   process.env.RPC_URL ||\n//   (process.env.LIVE ? clusterApiUrl(cluster, false) : 'http://localhost:8899');\n\nexport const urlTls =\n  process.env.RPC_URL ||\n  (process.env.LIVE ? clusterApiUrl(cluster, true) : 'http://localhost:8899');\n\nexport let walletUrl =\n  process.env.WALLET_URL || 'https://solana-example-webwallet.herokuapp.com/';\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622814637447
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/token-swap-test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/token-swap-test.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/token-swap-test.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/token-swap-test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/",
        "sourceFileName": "token-swap-test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAccounts = getAccounts;\nexports.transfer = transfer;\nexports.createFarmPool = createFarmPool;\nexports.updateFarmPool = updateFarmPool;\nexports.createVaultsPool = createVaultsPool;\nexports.updateVaultsPool = updateVaultsPool;\nexports.createVaultsPoolV4 = createVaultsPoolV4;\nexports.updateVaultsPoolV4 = updateVaultsPoolV4;\nexports.depositAndWithdrawPool = depositAndWithdrawPool;\nexports.depositAndWithdrawPoolV2 = depositAndWithdrawPoolV2;\nexports.depositAndWithdrawPoolV4 = depositAndWithdrawPoolV4;\n\nvar _web = require(\"@solana/web3.js\");\n\nvar _tweetnacl = _interopRequireDefault(require(\"tweetnacl\"));\n\nvar _splToken = require(\"@solana/spl-token\");\n\nrequire(\"crypto\");\n\nvar _tokenSwap = require(\"../client/token-swap\");\n\nvar _sendAndConfirmTransaction = require(\"../client/util/send-and-confirm-transaction\");\n\nvar _newAccountWithLamports = require(\"../client/util/new-account-with-lamports\");\n\nvar _url = require(\"../url\");\n\nvar _sleep = require(\"../client/util/sleep\");\n\nconst {\n  createHash,\n  createHmac\n} = require('crypto');\n\nlet fs = require(\"fs\");\n/**\n * @param {string} algorithm\n * @param {any} content\n *  @return {string}\n */\n\n\nconst encrypt = (algorithm, content) => {\n  let hash = createHash(algorithm);\n  hash.update(content);\n  return hash.digest('hex');\n};\n/**\n * @param {any} content\n *  @return {string}\n */\n\n\nconst sha1 = content => encrypt('sha1', content);\n/**\n * @param {any} content\n *  @return {string}\n */\n\n\nconst md5 = content => encrypt('md5', content);\n\nconst hmacMd5 = (scretKey, content) => {\n  const hmac = createHmac('md5', scretKey);\n  const up = hmac.update(content);\n  const result = up.digest('hex');\n  return result;\n};\n\nconst hmacSha256 = (scretKey, content) => {\n  const hmac = createHmac('sha256', scretKey);\n  const up = hmac.update(content);\n  let result = up.digest('hex'); // result = result;\n  // result = result.replace(/\\+/g, '%2B');\n  // console.log('result', escape(encodeURI(result)));\n\n  return result; // var crypto = require('crypto');\n  // //creating hmac object\n  // var hmac = crypto.createHmac('sha256', 'yoursecretkeyhere');\n  // //passing the data to be hashed\n  // data = hmac.update('nodejsera');\n  // //Creating the hmac in the required format\n  // gen_hmac = data.digest('hex');\n}; // The following globals are created by `createTokenSwap` and used by subsequent tests\n// Token swap\n\n\nlet tokenSwap; // authority of the token and accounts\n\nlet authority; // nonce used to generate the authority public key\n\nlet nonce; // owner of the user accounts\n// Hard-coded fee address, for testing production mode\n\nconst SWAP_PROGRAM_OWNER_FEE_ADDRESS = process.env.SWAP_PROGRAM_OWNER_FEE_ADDRESS; // Pool fees\n\nconst TRADING_FEE_NUMERATOR = 0;\nconst TRADING_FEE_DENOMINATOR = 0;\nconst OWNER_TRADING_FEE_NUMERATOR = 0;\nconst OWNER_TRADING_FEE_DENOMINATOR = 0;\nconst OWNER_WITHDRAW_FEE_NUMERATOR = 0;\nconst OWNER_WITHDRAW_FEE_DENOMINATOR = 0;\nconst HOST_FEE_NUMERATOR = 0;\nconst HOST_FEE_DENOMINATOR = 0; // curve type used to calculate swaps and deposits\n\nconst CURVE_TYPE = _tokenSwap.CurveType.ConstantProduct; // 384 ms\n//\n\nconst REWARD_PER_PLOT = 925925; // Initial amount in each swap token\n\nfunction assert(condition, message) {\n  if (!condition) {\n    console.log(Error().stack + ':token-test.js');\n    throw message || 'Assertion failed';\n  }\n}\n\nlet connection;\n\nasync function getConnection() {\n  if (connection) return connection;\n  connection = new _web.Connection(_url.url, 'recent');\n  const version = await connection.getVersion();\n  console.log('Connection to cluster established:', _url.url, version);\n  return connection;\n}\n\nfunction getOwnedAccountsFilters(publicKey) {\n  console.log(_splToken.AccountLayout);\n  return [{\n    memcmp: {\n      offset: _splToken.AccountLayout.offsetOf('mint'),\n      bytes: publicKey.toBase58()\n    }\n  }, {\n    dataSize: _splToken.AccountLayout.span\n  }];\n}\n\nasync function getAccounts(programId) {\n  farm_payer = await new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]);\n  const filters = getOwnedAccountsFilters(new _web.PublicKey(programId));\n  let connection = await getConnection();\n  const resp = await connection._rpcRequest('getProgramAccounts', [_splToken.TOKEN_PROGRAM_ID.toBase58(), {\n    commitment: connection.commitment,\n    filters\n  }]);\n  let list = resp['result'];\n  let token = new _splToken.Token(connection, new _web.PublicKey(programId), _splToken.TOKEN_PROGRAM_ID, farm_payer);\n  let arr = [];\n\n  for (let i = 0; i < list.length; i++) {\n    await (0, _sleep.sleep)(100);\n    let detail = await token.getAccountInfo(new _web.PublicKey(list[i].pubkey));\n    let amount = Number(detail.amount) / 1e9;\n\n    if (amount > 0) {\n      arr.push({\n        address: list[i].pubkey,\n        amount: detail.amount.toString()\n      });\n      console.log(i, list[i].pubkey, amount);\n    }\n  }\n\n  let data = JSON.stringify(arr);\n  fs.writeFileSync('farmv1.json', data);\n  return [];\n} //// ------------------------------- farm 挖矿逻辑 ---------------------------\n\n\nlet farmToken;\nlet farm_payer;\nlet farm_info;\nlet farmAuth;\nlet farm_mint;\nlet pool_farm_address;\nlet lp_mint;\nlet pool_lp_address;\nlet pool_fee_lp_address;\nlet farmDetail;\nlet farm_config = {\n  'name': 'SRM',\n  'poolid': '',\n  'farm': 'CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d',\n  'mintAddress': 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt'\n}; // 转账\n\nasync function transfer(from, to, mint, amount) {\n  farm_payer = await new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]);\n  const connection = await getConnection();\n  let lp = new _splToken.Token(connection, new _web.PublicKey(mint), farm_payer);\n  let to_lp = lp.getOrCreateAssociatedAccountInfo(to);\n  let mint_info = await lp.getMintInfo();\n  let base_deciaml = Math.pow(10, mint_info.decimals);\n  amount = (amount * base_deciaml).toFixed(0);\n  await lp.transfer(from, to_lp, farm_payer, [], Number(amount));\n}\n\nasync function createFarmPool(farm_config) {\n  const connection = await getConnection();\n  farm_payer = await new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]);\n  console.log('farm_config.farm', farm_config.farm);\n  farm_mint = new _splToken.Token(connection, new _web.PublicKey(farm_config.farm), _splToken.TOKEN_PROGRAM_ID, farm_payer);\n  farm_info = new _web.Account();\n  console.log('farm_config.farm', farm_config.farm);\n  [authority, nonce] = await _web.PublicKey.findProgramAddress([farm_info.publicKey.toBuffer()], _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  pool_farm_address = await farm_mint.createAccount(authority);\n  await farm_mint.transfer(new _web.PublicKey('EikSzrgHqMqEmmjMZiPqetHpSRgNDv6yQ2c99Mn1Y1Vj'), pool_farm_address, farm_payer, [], 10 * 1e9);\n  console.log('farm_config.mintAddress', farm_config.mintAddress);\n  lp_mint = new _splToken.Token(connection, new _web.PublicKey(farm_config.mintAddress), _splToken.TOKEN_PROGRAM_ID, farm_payer);\n  pool_lp_address = await lp_mint.createAccount(authority);\n  pool_fee_lp_address = await lp_mint.createAccount(farm_payer.publicKey);\n  let pool_id = null;\n  let pool_user_info = null;\n  let pool_other_info = null;\n  console.log('开始创建矿池', authority.toString(), nonce);\n  tokenSwap = await _tokenSwap.TokenSwap.createTokenFarm(new _web.PublicKey(), connection, farm_payer, _splToken.TOKEN_PROGRAM_ID, farm_info, authority, pool_farm_address, pool_lp_address, pool_fee_lp_address, pool_farm_address, pool_id, pool_user_info, pool_other_info, _tokenSwap.TOKEN_SWAP_PROGRAM_ID, nonce, TRADING_FEE_NUMERATOR, TRADING_FEE_DENOMINATOR, OWNER_TRADING_FEE_NUMERATOR, OWNER_TRADING_FEE_DENOMINATOR, OWNER_WITHDRAW_FEE_NUMERATOR, OWNER_WITHDRAW_FEE_DENOMINATOR, HOST_FEE_NUMERATOR, HOST_FEE_DENOMINATOR, REWARD_PER_PLOT, _tokenSwap.TokenFarmUserLayout.span); //\n  // console.log(\"******************************************矿池初始化成功\");\n\n  console.log('加载farm矿池');\n  farmDetail = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('******************************************普通矿池信息校验成功---------', farm_config.name);\n  console.log(\"poolId:\", \"'\" + farm_info.publicKey.toString() + \"',\");\n  console.log(\"nonce:\", \"'\" + farmDetail.nonce + \"',\");\n  console.log(\"poolAuthority:\", \"'\" + farmDetail.authority.toString() + \"',\");\n  console.log(\"poolLpTokenAccount:\", \"'\" + farmDetail.pool_lp_address.toString() + \"',\");\n  console.log(\"poolRewardTokenAccount:\", \"'\" + farmDetail.pool_farm_address.toString() + \"',\");\n  console.log(\"poolRayAddress:\", \"'\" + farmDetail.pool_ray_address.toString() + \"',\");\n  console.log(\"poolRewardTokenAccountB:\", \"'\" + farmDetail.pool_other_address.toString() + \"',\");\n  console.log(\"poolFeeAccount:\", \"'\" + farmDetail.pool_fee_lp_address.toString() + \"',\");\n  console.log(\"threePoolUserInfo:\", \"'\" + farmDetail.pool_user_info.toString() + \"',\");\n  console.log(\"TOKEN_SWAP_PROGRAM_ID:\", \"'\" + _tokenSwap.TOKEN_SWAP_PROGRAM_ID.toBase58() + \"',\");\n  return;\n}\n\nasync function updateFarmPool(farm_config, reward_per_second) {\n  const connection = await getConnection();\n  farm_payer = await new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]);\n  farm_info = new _web.PublicKey(farm_config.poolid);\n  console.log('加载farm矿池');\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  pool_farm_address = farmDetail1.pool_farm_address;\n  pool_lp_address = farmDetail1.pool_lp_address;\n  pool_fee_lp_address = farmDetail1.pool_fee_lp_address;\n  let pool_id = new _web.PublicKey();\n  let pool_user_info = farmDetail1.pool_user_info;\n  let pool_other_info = farmDetail1.pool_other_address;\n  console.log('开始更新矿池------', farm_config.name); // tokenSwap = await TokenSwap.updateTokenFarm(\n  //     new PublicKey(),\n  //     connection,\n  //     farm_payer,\n  //     TOKEN_PROGRAM_ID,\n  //     farm_info,\n  //     farmDetail1.authority,\n  //     pool_farm_address,\n  //     pool_lp_address,\n  //     pool_fee_lp_address,\n  //     pool_farm_address,\n  //     pool_id,\n  //     pool_user_info,\n  //     pool_other_info,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.nonce,\n  //     TRADING_FEE_NUMERATOR,\n  //     TRADING_FEE_DENOMINATOR,\n  //     OWNER_TRADING_FEE_NUMERATOR,\n  //     OWNER_TRADING_FEE_DENOMINATOR,\n  //     OWNER_WITHDRAW_FEE_NUMERATOR,\n  //     OWNER_WITHDRAW_FEE_DENOMINATOR,\n  //     HOST_FEE_NUMERATOR,\n  //     HOST_FEE_DENOMINATOR,\n  //     reward_per_second\n  // );\n  //\n\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  const userAccount = createUniqueAssociatedAccount(new _web.PublicKey('AG86tBRGiG3tVW4oyPnEM1151mYbBk94STwbVoTP8pDd'), farm_info);\n  const userDetail = await _tokenSwap.TokenSwap.loadTokenFarmUser(connection, userAccount.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('address', farmDetail1.pool_farm_address.toString());\n  console.log('总', farmDetail1.total_supply.toString());\n  console.log('每秒奖励', farmDetail1.reward_per_second.toString());\n  console.log('每share奖励', farmDetail1.reward_per_share.toString());\n  console.log(' user amount', userDetail.amount.toString());\n  console.log('user debt', userDetail.reward_debt.toString());\n  console.log('******************************************普通矿池信息校验成功---------', farm_config.name);\n  return;\n}\n\nlet farm_mint1;\nlet farm_info1;\nlet authority1;\nlet pool_farm1_address1;\nlet pool_farm_address1;\nlet pool_lp_address1;\nlet pool_ray_address;\nlet farm_payer1;\nlet farmDetail1;\nlet pool_fee_lp_address1;\nlet other_mint;\nlet lp_config = {\n  'name': 'RAY-USDC',\n  'farm': 'CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d',\n  'ray': '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n  // todo\n  'programid': 'EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q',\n  // ray 2币的programid\n  'poolid': '',\n  'threePoolId': '8nEWqxeDNZ2yo1izbPzY4nwR55isBZRaQk7CM8ntwUwR',\n  'thirdAuth': '6vQGZLsHgpJdqh1ER7q2q6mjZ43QwzhtTofTzb2sUhNh',\n  'thirdLpAddr': '77ujS15hjUfFZkM8QAw4HMLvMGZg95Gcm6ixjA1bnk3M',\n  'thirdRayAddr': '3ejmkn5HpXR9KdVWkai1Ngo87sQSUyKXrx8wSakipkno',\n  'mintAddress': 'BZFGfXMrjG2sS7QT2eiCDEevPFnkYYF7kzJpWfYxPbcx'\n};\n\nasync function createVaultsPool(lp_config) {\n  const connection = await getConnection();\n  farm_payer1 = await new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]); // farm v1\n\n  farm_mint1 = new _splToken.Token(connection, new _web.PublicKey(lp_config.farm), _splToken.TOKEN_PROGRAM_ID, farm_payer1); // RAY\n\n  farm_mint = new _splToken.Token(connection, new _web.PublicKey(lp_config.ray), _splToken.TOKEN_PROGRAM_ID, farm_payer1); // RAY-USDC\n\n  lp_mint = new _splToken.Token(connection, new _web.PublicKey(lp_config.mintAddress), _splToken.TOKEN_PROGRAM_ID, farm_payer1); // RAY-USDC poolid\n\n  let pool_id = new _web.PublicKey(lp_config.threePoolId); // farm_mint1 = await Token.createMint(\n  //   connection,\n  //   farm_payer,\n  //   farm_payer.publicKey,\n  //   null,\n  //   2,\n  //   TOKEN_PROGRAM_ID,\n  // );\n  // let farmAuth = await farm_mint1.createAccount(farm_payer1.publicKey)\n  // await farm_mint1.mintTo(farmAuth, farm_payer, [], 1000000)\n\n  farm_info1 = new _web.Account();\n  [authority1, nonce] = await _web.PublicKey.findProgramAddress([farm_info1.publicKey.toBuffer()], _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  pool_farm_address1 = await farm_mint1.createAccount(authority1);\n  await farm_mint1.transfer(new _web.PublicKey('EikSzrgHqMqEmmjMZiPqetHpSRgNDv6yQ2c99Mn1Y1Vj'), pool_farm_address1, farm_payer1, [], 1000 * 1e9);\n  pool_lp_address1 = await lp_mint.createAccount(authority1);\n  pool_fee_lp_address1 = await lp_mint.createAccount(farm_payer1.publicKey); // await farm_mint.transfer(farmAuth,pool_farm_address,farm_payer,[],500000);\n  // await farm_mint1.mintTo(pool_farm_address1,farm_payer,[],500000);\n\n  pool_ray_address = await farm_mint.createAccount(authority1);\n  let pool_user_info = null;\n  let pool_other_address = null;\n  let raydium_stake_program_id = new _web.PublicKey(lp_config.programid);\n  console.log('--------------------------------开始创建复投矿池-----', lp_config.name);\n  tokenSwap = await _tokenSwap.TokenSwap.createTokenFarm(raydium_stake_program_id, connection, farm_payer1, _splToken.TOKEN_PROGRAM_ID, farm_info1, authority1, pool_farm_address1, pool_lp_address1, pool_fee_lp_address1, pool_ray_address, pool_id, pool_user_info, pool_other_address, _tokenSwap.TOKEN_SWAP_PROGRAM_ID, nonce, TRADING_FEE_NUMERATOR, TRADING_FEE_DENOMINATOR, OWNER_TRADING_FEE_NUMERATOR, OWNER_TRADING_FEE_DENOMINATOR, OWNER_WITHDRAW_FEE_NUMERATOR, OWNER_WITHDRAW_FEE_DENOMINATOR, HOST_FEE_NUMERATOR, HOST_FEE_DENOMINATOR, REWARD_PER_PLOT, _tokenSwap.TokenRayUserLayout.span); //\n  // console.log(\"******************************************矿池初始化成功\");\n\n  console.log('加载复投矿池');\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info1.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('******************************************复投矿池信息校验成功---------', lp_config.name);\n  console.log(\"poolId:\", \"'\" + farm_info1.publicKey.toString() + \"',\");\n  console.log(\"poolAuthority:\", \"'\" + farmDetail1.authority.toString() + \"',\");\n  console.log(\"poolLpTokenAccount:\", \"'\" + farmDetail1.pool_lp_address.toString() + \"',\");\n  console.log(\"poolRewardTokenAccount:\", \"'\" + farmDetail1.pool_farm_address.toString() + \"',\");\n  console.log(\"poolRayAddress:\", \"'\" + farmDetail1.pool_ray_address.toString() + \"',\");\n  console.log(\"poolRewardTokenAccountB:\", \"'\" + farmDetail1.pool_other_address.toString() + \"',\");\n  console.log(\"poolFeeAccount:\", \"'\" + farmDetail1.pool_fee_lp_address.toString() + \"',\");\n  console.log(\"threePoolUserInfo:\", \"'\" + farmDetail1.pool_user_info.toString() + \"',\");\n  console.log(\"TOKEN_SWAP_PROGRAM_ID:\", \"'\" + _tokenSwap.TOKEN_SWAP_PROGRAM_ID.toBase58() + \"',\");\n}\n\nasync function updateVaultsPool(lp_config, reward_per_second) {\n  const connection = await getConnection();\n  farm_payer1 = await new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]); // RAY-USDC poolid\n\n  let pool_id = new _web.PublicKey(lp_config.threePoolId);\n  console.log('加载复投矿池');\n  farm_info1 = new _web.PublicKey(lp_config.poolid);\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info1, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  pool_farm_address1 = farmDetail1.pool_farm_address;\n  pool_lp_address1 = farmDetail1.pool_lp_address;\n  pool_fee_lp_address1 = farmDetail1.pool_fee_lp_address;\n  pool_ray_address = farmDetail1.pool_ray_address;\n  let pool_user_info = farmDetail1.pool_user_info;\n  let pool_other_address = farmDetail1.pool_other_address;\n  let raydium_stake_program_id = new _web.PublicKey(lp_config.programid);\n  console.log('--------------------------------开始更新复投矿池-----', lp_config.name); // tokenSwap = await TokenSwap.updateTokenFarm(\n  //     raydium_stake_program_id,\n  //     connection,\n  //     farm_payer1,\n  //     TOKEN_PROGRAM_ID,\n  //     farm_info1,\n  //     farmDetail1.authority,\n  //     pool_farm_address1,\n  //     pool_lp_address1,\n  //     pool_fee_lp_address1,\n  //     pool_ray_address,\n  //     pool_id,\n  //     pool_user_info,\n  //     pool_other_address,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.nonce,\n  //     TRADING_FEE_NUMERATOR,\n  //     TRADING_FEE_DENOMINATOR,\n  //     OWNER_TRADING_FEE_NUMERATOR,\n  //     OWNER_TRADING_FEE_DENOMINATOR,\n  //     OWNER_WITHDRAW_FEE_NUMERATOR,\n  //     OWNER_WITHDRAW_FEE_DENOMINATOR,\n  //     HOST_FEE_NUMERATOR,\n  //     HOST_FEE_DENOMINATOR,\n  //     reward_per_second,\n  // );\n  //\n\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info1, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  const user = createUniqueAssociatedAccount(new _web.PublicKey('AG86tBRGiG3tVW4oyPnEM1151mYbBk94STwbVoTP8pDd'), farm_info1);\n  let userInfo = await _tokenSwap.TokenSwap.loadTokenFarmUser(connection, user.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('最后更新时间', farmDetail1.last_update.toString());\n  console.log('总数', farmDetail1.total_supply.toString());\n  console.log('每秒奖励', farmDetail1.reward_per_second.toString());\n  console.log('每份额奖励', farmDetail1.reward_per_share.toString());\n  console.log('第三方id', farmDetail1.pool_id.toString());\n  console.log('reward_debt', userInfo.reward_debt.toString());\n  console.log('amount', userInfo.amount.toString());\n  console.log('******************************************复投矿池信息更新成功---------', lp_config.name);\n}\n\nlet lp_config_v4 = {\n  'name': 'KIN-RAY',\n  'farm': 'CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d',\n  'ray': '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n  'poolid': '',\n  // 'poolid':'7RFY9eMaD3nsV7EBTzVzuKBr4X4cLuDh3JaoWZTcGiJK',\n  'poolAuthority': 'q42hNDzfBDQ1WzKjxkueEtBzX1VPJ2hnikJXFjSYC91',\n  'other': 'MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb',\n  'mintAddress': 'CHT8sft3h3gpLYbCcZ9o27mT5s3Z6VifBVbUiDvprHPW',\n  'programid': 'CBuCnLe26faBpcBP2fktp4rp8abpcAnTWft6ZrP5Q4T'\n};\n\nasync function createVaultsPoolV4(lp_config_v4) {\n  const connection = await getConnection();\n  farm_payer1 = await new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]); // farm v1\n\n  farm_mint1 = new _splToken.Token(connection, new _web.PublicKey(lp_config_v4.farm), _splToken.TOKEN_PROGRAM_ID, farm_payer1); // RAY\n\n  farm_mint = new _splToken.Token(connection, new _web.PublicKey(lp_config_v4.ray), _splToken.TOKEN_PROGRAM_ID, farm_payer1); // FIDA\n\n  other_mint = new _splToken.Token(connection, new _web.PublicKey(lp_config_v4.other), _splToken.TOKEN_PROGRAM_ID, farm_payer1); // RAY-FIDA\n\n  lp_mint = new _splToken.Token(connection, new _web.PublicKey(lp_config_v4.mintAddress), _splToken.TOKEN_PROGRAM_ID, farm_payer1); // RAY-FIDA poolid\n\n  let pool_id = new _web.PublicKey(lp_config_v4.threePoolId);\n  farm_info1 = new _web.Account();\n  [authority1, nonce] = await _web.PublicKey.findProgramAddress([farm_info1.publicKey.toBuffer()], _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  pool_farm_address1 = await farm_mint1.createAccount(authority1);\n  await farm_mint1.transfer(new _web.PublicKey('EikSzrgHqMqEmmjMZiPqetHpSRgNDv6yQ2c99Mn1Y1Vj'), pool_farm_address1, farm_payer1, [], 1 * 1e9);\n  pool_lp_address1 = await lp_mint.createAccount(authority1);\n  pool_fee_lp_address1 = await lp_mint.createAccount(farm_payer1.publicKey);\n  pool_ray_address = await farm_mint.createAccount(authority1);\n  let pool_user_info = null;\n  let pool_other_address = await other_mint.createAccount(authority1);\n  let raydium_stake_program_id = new _web.PublicKey(lp_config_v4.programid);\n  console.log('--------------------------------开始创建双币复投矿池----', lp_config_v4.name);\n  tokenSwap = await _tokenSwap.TokenSwap.createTokenFarm(raydium_stake_program_id, connection, farm_payer1, _splToken.TOKEN_PROGRAM_ID, farm_info1, authority1, pool_farm_address1, pool_lp_address1, pool_fee_lp_address1, pool_ray_address, pool_id, pool_user_info, pool_other_address, _tokenSwap.TOKEN_SWAP_PROGRAM_ID, nonce, TRADING_FEE_NUMERATOR, TRADING_FEE_DENOMINATOR, OWNER_TRADING_FEE_NUMERATOR, OWNER_TRADING_FEE_DENOMINATOR, OWNER_WITHDRAW_FEE_NUMERATOR, OWNER_WITHDRAW_FEE_DENOMINATOR, HOST_FEE_NUMERATOR, HOST_FEE_DENOMINATOR, REWARD_PER_PLOT, _tokenSwap.TokenRayUserV4Layout.span);\n  console.log('加载复投矿池');\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info1.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('******************************************双币复投矿池信息校验成功---------', lp_config_v4.name);\n  console.log(\"poolId:\", \"'\" + farm_info1.publicKey.toString() + \"',\");\n  console.log(\"poolAuthority:\", \"'\" + farmDetail1.authority.toString() + \"',\");\n  console.log(\"poolLpTokenAccount:\", \"'\" + farmDetail1.pool_lp_address.toString() + \"',\");\n  console.log(\"poolRewardTokenAccount:\", \"'\" + farmDetail1.pool_farm_address.toString() + \"',\");\n  console.log(\"poolRayAddress:\", \"'\" + farmDetail1.pool_ray_address.toString() + \"',\");\n  console.log(\"poolRewardTokenAccountB:\", \"'\" + farmDetail1.pool_other_address.toString() + \"',\");\n  console.log(\"poolFeeAccount:\", \"'\" + farmDetail1.pool_fee_lp_address.toString() + \"',\");\n  console.log(\"threePoolUserInfo:\", \"'\" + farmDetail1.pool_user_info.toString() + \"',\");\n  console.log(\"TOKEN_SWAP_PROGRAM_ID:\", \"'\" + _tokenSwap.TOKEN_SWAP_PROGRAM_ID.toBase58() + \"',\");\n}\n\nasync function updateVaultsPoolV4(lp_config_v4, reward_per_second) {\n  const connection = await getConnection();\n  farm_payer1 = await new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]); // RAY-FIDA poolid\n\n  let pool_id = new _web.PublicKey(lp_config_v4.threePoolId);\n  farm_info1 = new _web.PublicKey(lp_config_v4.poolid);\n  console.log('加载双币复投矿池');\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info1, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log(\"farmDetail1.reward_per_share====================\", farmDetail1.reward_per_share.toString());\n  console.log(\"farmDetail1.reward_per_second====================\", farmDetail1.reward_per_second.toString());\n  pool_farm_address1 = farmDetail1.pool_farm_address;\n  pool_lp_address1 = farmDetail1.pool_lp_address;\n  pool_fee_lp_address1 = farmDetail1.pool_fee_lp_address;\n  pool_ray_address = farmDetail1.pool_ray_address;\n  let pool_user_info = farmDetail1.pool_user_info;\n  let pool_other_address = farmDetail1.pool_other_address;\n  let raydium_stake_program_id = new _web.PublicKey(lp_config_v4.programid);\n  console.log('--------------------------------开始更新双币复投矿池----', lp_config_v4.name); // tokenSwap = await TokenSwap.updateTokenFarm(\n  //     raydium_stake_program_id,\n  //     connection,\n  //     farm_payer1,\n  //     TOKEN_PROGRAM_ID,\n  //     farm_info1,\n  //     farmDetail1.authority,\n  //     pool_farm_address1,\n  //     pool_lp_address1,\n  //     pool_fee_lp_address1,\n  //     pool_ray_address,\n  //     pool_id,\n  //     pool_user_info,\n  //     pool_other_address,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.nonce,\n  //     TRADING_FEE_NUMERATOR,\n  //     TRADING_FEE_DENOMINATOR,\n  //     OWNER_TRADING_FEE_NUMERATOR,\n  //     OWNER_TRADING_FEE_DENOMINATOR,\n  //     OWNER_WITHDRAW_FEE_NUMERATOR,\n  //     OWNER_WITHDRAW_FEE_DENOMINATOR,\n  //     HOST_FEE_NUMERATOR,\n  //     HOST_FEE_DENOMINATOR,\n  //     reward_per_second\n  // );\n\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info1, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  const use1r = createUniqueAssociatedAccount(new _web.PublicKey('GnxeeXBom4pYCk7ejigh5bGQ8M37hXt8xikjfzrctsMo'), farm_info1);\n  let userInfo = await _tokenSwap.TokenSwap.loadTokenFarmUser(connection, use1r.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('total ', farmDetail1.total_supply.toString()); // console.log('每秒奖励 ',farmDetail1.reward_per_second.toString());\n  // console.log('每share奖励 ',farmDetail1.reward_per_share.toString());\n\n  console.log('other address ', farmDetail1.pool_other_address.toString());\n  console.log('poolid ', farmDetail1.pool_id.toString());\n  console.log('pool_user_info ', farmDetail1.pool_user_info.toString());\n  console.log('pool ', lp_config_v4.name);\n  console.log('user amount ', userInfo.amount.toString());\n  console.log('user debt ', userInfo.reward_debt.toString());\n  console.log('******************************************双币复投矿池信息更新成功---------', lp_config_v4.name);\n} // 根据用户地址和合约地址生成一个唯一地址\n\n\nfunction createUniqueAssociatedAccount(user, farm_info) {\n  let user_info_account_seed = hmacSha256(user.toBase58(), farm_info.toBase58());\n  let b = Buffer.from(user_info_account_seed);\n\n  let keyPair = _tweetnacl.default.sign.keyPair.fromSeed(b.subarray(0, 32));\n\n  return new _web.Account(keyPair.secretKey);\n} // 质押与提现\n\n\nasync function depositAndWithdrawPool(lp_config) {\n  const connection = await getConnection();\n  farm_payer1 = await new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]); // 用户A sol\n\n  const user = await (0, _newAccountWithLamports.newAccountWithLamports)(connection, 100000000000);\n  const user_lp_address = await lp_mint.createAccount(user.publicKey); // lp mint\n\n  await lp_mint.mintTo(user_lp_address, farm_payer, [], 10000);\n  let user_farm_address = await farm_mint.createAccount(user.publicKey); // 唯一生成一个关联账户 用户pubkey 与farm_info 联合唯一\n\n  let user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info.publicKey);\n  console.log(\"初始化给用户lp数量 10000 \\n 开始质押: 10000 lp\");\n  tokenSwap = await _tokenSwap.TokenSwap.depositFarm(connection, user, // 客服端钱包获取\n  farm_info.publicKey, // 常量\n  farmDetail.authority, // 通过常量获取\n  user_lp_address, // 客服端钱包获取\n  user_farm_address, // 客服端钱包获取\n  user_info_account, // 客服端钱包生成\n  farmDetail.pool_lp_address, user, // 客服端钱包获取\n  farmDetail.token_program_id, _tokenSwap.TOKEN_SWAP_PROGRAM_ID, farmDetail.pool_farm_address, farmDetail.pool_fee_lp_address, 10000); // 比对结果 账户 minA 余额理论为0\n\n  let userLpAccount = await lp_mint.getAccountInfo(user_lp_address);\n  console.log(\"用户剩余lp数量 \", userLpAccount.amount.toString());\n  assert(userLpAccount.amount == 0); // 比对结果 矿池 lp 余额理论为 10000\n\n  let poolLpAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  console.log(\"矿池剩余lp数量\", poolLpAccount.amount.toString());\n  assert(poolLpAccount.amount == 10000); // 查看\n\n  console.log(\"******************************************用户质押成功\");\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info.publicKey);\n  let userDetail = await _tokenSwap.TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('用户质押矿池 ：', userDetail.pool_id.toString());\n  console.log('用户质押金额 ：', userDetail.amount.toString());\n  assert(userDetail.amount == 10000);\n  console.log('用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  let userFarmAccount = await farm_mint.getAccountInfo(user_farm_address);\n  console.log(\"收取收益之前 用户 farm 余额\", userFarmAccount.amount.toString());\n  let poolFarmAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  (0, _sleep.sleep)(1000 * 30);\n  console.log(\"用户收取收益\"); // 收取收益\n\n  await _tokenSwap.TokenSwap.harvestFarm(connection, user, // 客服端钱包获取\n  farm_info.publicKey, // 常量\n  farmDetail.authority, // 通过常量获取\n  user_lp_address, // 客服端钱包获取\n  user_farm_address, // 客服端钱包获取\n  user_info_account, // 客服端钱包获取\n  farmDetail.pool_lp_address, user, // 客服端钱包获取\n  farmDetail.token_program_id, _tokenSwap.TOKEN_SWAP_PROGRAM_ID, farmDetail.pool_farm_address, farmDetail.pool_fee_lp_address, 0);\n  userFarmAccount = await farm_mint.getAccountInfo(user_farm_address);\n  console.log(\"收取收益之后 用户  farm 余额\", userFarmAccount.amount.toString());\n  poolFarmAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info.publicKey);\n  userDetail = await _tokenSwap.TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('收取收益之后 用户质押金额 ：', userDetail.amount.toString());\n  console.log('收取收益之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString()); // 查看\n\n  console.log(\"******************************************用户收取收益成功\");\n  console.log('开始提现');\n  tokenSwap = await _tokenSwap.TokenSwap.withdrawFarm(connection, user, // 客服端钱包获取\n  farm_info.publicKey, // 常量\n  farmDetail.authority, // 通过常量获取\n  user_lp_address, // 客服端钱包获取\n  user_farm_address, // 客服端钱包获取\n  user_info_account, // 客服端钱包生成\n  farmDetail.pool_lp_address, farmDetail.token_program_id, _tokenSwap.TOKEN_SWAP_PROGRAM_ID, farmDetail.pool_farm_address, farmDetail.pool_fee_lp_address, 10000);\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info.publicKey);\n  userDetail = await _tokenSwap.TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID); //\n\n  console.log('提现之后 用户质押金额 ：', userDetail.amount.toString()); //\n\n  assert(userDetail.amount == 0);\n  console.log('提现之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString()); //\n\n  userFarmAccount = await lp_mint.getAccountInfo(user_lp_address);\n  console.log(\"提现之后 用户 lp 余额\", userFarmAccount.amount.toString());\n  poolFarmAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  console.log(\"提现之后 矿池 lp 余额：\", poolFarmAccount.amount.toString());\n  console.log(\"******************************************用户提现成功\");\n} // 复投\n\n\nasync function depositAndWithdrawPoolV2() {\n  const connection = await getConnection(); // 用户A sol\n  // const user = await newAccountWithLamports(connection, 100000000000);\n\n  const user = new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]); // farm v1\n\n  farm_mint1 = new _splToken.Token(connection, new _web.PublicKey('CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d'), _splToken.TOKEN_PROGRAM_ID, user); // RAY\n\n  farm_mint = new _splToken.Token(connection, new _web.PublicKey('4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R'), _splToken.TOKEN_PROGRAM_ID, user); // RAY-USDC\n\n  lp_mint = new _splToken.Token(connection, new _web.PublicKey(lp_config.lp), _splToken.TOKEN_PROGRAM_ID, user); // RAY-USDC poolid\n\n  let ray_usdc_pool_id = new _web.PublicKey(lp_config.poolid); // 复投池\n\n  farm_info1 = new _web.PublicKey('DSSRNh74r7AdrVFxeWZxdXqCW6icqC84C16bhcsQayUp');\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info1, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('farm_ray_address', farmDetail1.pool_ray_address.toString()); // 自己的LP地址\n\n  const user_lp_address = new _web.PublicKey('FBGvfryiPuTCr8dATruk2d1B2eJ23agAuwZ8fia1XiZH'); //=====\n  // lp mint\n  // await lp_mint.mintTo(user_lp_address, user, [], 10000);\n  // let user_farm_address = await farm_mint1.createAccount(user.publicKey);\n\n  let user_farm_address = new _web.PublicKey('EtKp9jWCTHEUnvUPXVRAj9D25Tg8vqr3KUGoNK66Qy7X'); // let user_ray_address = await farm_mint.createAccount(user.publicKey);\n\n  let user_ray_address = new _web.PublicKey('Ceo2j3wYZiWG6mvu3uxoUQ3GBefiUNBQnzBFf9xr4s73');\n  let raydium_stake_program_id = new _web.PublicKey(lp_config.programid); // 唯一生成一个关联账户 用户pubkey 与farm_info 联合唯一\n\n  let user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1); // let user_info_account = new PublicKey('75szQsdeVhet8civkSUxZW8sXGYCDATnrBqC1mcCVU5G');\n\n  console.log(\"初始化给用户lp数量 10000 \\n 开始质押: 10000 lp\");\n  let rayUsdcFarmAuth = new _web.PublicKey(lp_config.thirdAuth);\n  let rayUsdcFarmReward = new _web.PublicKey(lp_config.thirdRayAddr);\n  let rayUsdcLp = new _web.PublicKey(lp_config.thirdLpAddr);\n  let depositAmount = 1000000; // tokenSwap = await TokenSwap.depositRaydium(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     user, // 客服端钱包获取\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     raydium_stake_program_id,\n  //     ray_usdc_pool_id,\n  //     rayUsdcFarmAuth,\n  //     farmDetail1.pool_user_info,\n  //     rayUsdcFarmReward,\n  //     rayUsdcLp,\n  //     depositAmount,\n  // );\n\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info1, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('farmDetail1', farmDetail1.reward_per_share.toString(), farmDetail1.ray_per_share.toString(), farmDetail1.last_update.toString()); // 比对结果 账户 minA 余额理论为0\n  // let userLpAccount = await lp_mint.getAccountInfo(user_lp_address);\n  // console.log(\"用户剩余lp数量 \", userLpAccount.amount.toString())\n  // assert(userLpAccount.amount == 0)\n  //\n  // // 比对结果 矿池 lp 余额理论为 10000\n  // let poolLpAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  //\n  // console.log(\"矿池剩余lp数量\", poolLpAccount.amount.toString())\n  // assert(poolLpAccount.amount == 10000)\n  // 查看\n\n  console.log(\"******************************************用户质押成功\");\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1); //\n\n  let userDetail = await _tokenSwap.TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('用户质押矿池 ：', userDetail.pool_id.toString());\n  console.log('用户质押金额 ：', userDetail.amount.toString());\n  console.log('用户理论已领取金额 ：', userDetail.reward_debt.toString()); // assert(userDetail.amount == 10000)\n  // console.log('用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  //\n  // let userFarmAccount = await farm_mint1.getAccountInfo(user_farm_address);\n  // console.log(\"收取收益之前 用户 farm 余额\", userFarmAccount.amount.toString());\n  //\n  // let poolFarmAccount = await farm_mint1.getAccountInfo(farmDetail1.pool_farm_address);\n  // console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  //\n  // let userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"收取收益之前 用户 ray 余额\", userRayAccount.amount.toString());\n  //\n  // let poolRayAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  // console.log(\"矿池ray剩余：\", poolRayAccount.amount.toString());\n  // console.log(\"用户收取收益\")\n  // // 收取收益\n  // await TokenSwap.harvestFarmV2(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1.publicKey, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     user, // 客服端钱包获取\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farm_info.publicKey,\n  //     farmDetail.authority,\n  //     farmDetail1.pool_user_info,\n  //     farmDetail.pool_farm_address,\n  //     farmDetail.pool_lp_address,\n  //     farmDetail.pool_fee_lp_address,\n  //     0,\n  // );\n  // userFarmAccount = await farm_mint1.getAccountInfo(user_farm_address);\n  // console.log(\"收取收益之后 用户  farm 余额\", userFarmAccount.amount.toString());\n  // poolFarmAccount = await farm_mint1.getAccountInfo(farmDetail1.pool_farm_address);\n  // console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  //\n  // user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1.publicKey);\n  //\n  // userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  // console.log('收取收益之后 用户质押金额 ：', userDetail.amount.toString());\n  //\n  // console.log('收取收益之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  // console.log('收取收益之后 用户理论已收取RAY奖励 ：', userDetail.ray_debt.toString());\n  //\n  //\n  // userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"收取收益之后 用户 ray 余额\", userRayAccount.amount.toString());\n  //\n  // poolRayAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  // console.log(\"矿池ray剩余：\", poolRayAccount.amount.toString());\n  //\n  // // 查看\n  // console.log(\"******************************************用户收取收益成功\");\n\n  console.log('开始提现');\n  tokenSwap = await _tokenSwap.TokenSwap.withdrawRaydium(connection, user, // 客服端钱包获取\n  farm_info1, // 常量\n  farmDetail1.authority, // 通过常量获取\n  user_lp_address, // 客服端钱包获取\n  user_farm_address, // 客服端钱包获取\n  user_info_account, // 客服端钱包生成\n  farmDetail1.pool_lp_address, farmDetail1.token_program_id, _tokenSwap.TOKEN_SWAP_PROGRAM_ID, farmDetail1.pool_farm_address, farmDetail1.pool_fee_lp_address, farmDetail1.pool_ray_address, user_ray_address, raydium_stake_program_id, ray_usdc_pool_id, rayUsdcFarmAuth, farmDetail1.pool_user_info, rayUsdcFarmReward, rayUsdcLp, 990000); // user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1.publicKey);\n  //\n  // userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  //\n  // //\n  // console.log('提现之后 用户质押金额 ：', userDetail.amount.toString());\n  //\n  // //\n  // assert(userDetail.amount == 0);\n  //\n  // console.log('提现之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  // console.log('提现之后 用户理论已收取RAY奖励 ：', userDetail.ray_debt.toString());\n  // userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"提现之后 用户 ray 余额\", userRayAccount.amount.toString());\n  // //\n  // userFarmAccount = await lp_mint.getAccountInfo(user_lp_address);\n  // console.log(\"提现之后 用户 lp 余额\", userFarmAccount.amount.toString());\n  //\n  // poolFarmAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  // console.log(\"提现之后 矿池 lp 余额：\", poolFarmAccount.amount.toString());\n\n  console.log(\"******************************************用户提现成功\");\n} // 复投\n\n\nasync function depositAndWithdrawPoolV4() {\n  const connection = await getConnection(); // 用户A sol\n  // const user = await newAccountWithLamports(connection, 100000000000);\n\n  const user = new _web.Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]); // farm v1\n\n  farm_mint1 = new _splToken.Token(connection, new _web.PublicKey('CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d'), _splToken.TOKEN_PROGRAM_ID, user); // RAY\n\n  farm_mint = new _splToken.Token(connection, new _web.PublicKey('4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R'), _splToken.TOKEN_PROGRAM_ID, user); // FIDA\n\n  other_mint = new _splToken.Token(connection, new _web.PublicKey('EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp'), _splToken.TOKEN_PROGRAM_ID, user); // RAY-FIDA\n\n  lp_mint = new _splToken.Token(connection, new _web.PublicKey('DsBuznXRTmzvEdb36Dx3aVLVo1XmH7r1PRZUFugLPTFv'), _splToken.TOKEN_PROGRAM_ID, user); // RAY-FIDA poolid\n\n  let ray_usdc_pool_id = new _web.PublicKey('8rAdapvcC5vYNLXzChMgt56s6HCQGE6Lbo469g3WRTUh'); // 复投池\n\n  farm_info1 = new _web.PublicKey('7WRRSzFES8a13so6hQAhVtpkEBtLwsdBiQH6vhgSX7KG');\n  farmDetail1 = await _tokenSwap.TokenSwap.loadTokenFarm(connection, farm_info1, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log(farmDetail1.pool_other_address.toString(), \"pool_other_address\", farmDetail1.pool_user_info.toString());\n  console.log(farmDetail1.token_program_id.toString());\n  console.log(\"farmDetail1.ray_per_share\", farmDetail1.ray_per_share.toString());\n  console.log(\"farmDetail1.ray_per_share\", farmDetail1.ray_total_supply.toString());\n  console.log(\"farmDetail1.last_update\", farmDetail1.last_update.toString()); // 自己的LP地址\n\n  const user_lp_address = new _web.PublicKey('J5kjbdzBpAmseNHirskBw1Fg9Uj4eyVK8PLzVH4ZENLB'); //=====\n  // lp mint\n  // await lp_mint.mintTo(user_lp_address, user, [], 10000);\n  // let user_farm_address = await farm_mint1.createAccount(user.publicKey);\n\n  let user_farm_address = new _web.PublicKey('FpFtrv4ZNDzdhcUvU6ekdrL88RXTYzJSzpYBEP4pyHqT'); // let user_ray_address = await farm_mint.createAccount(user.publicKey);\n\n  let user_ray_address = new _web.PublicKey('Ceo2j3wYZiWG6mvu3uxoUQ3GBefiUNBQnzBFf9xr4s73');\n  let raydium_stake_program_id = new _web.PublicKey('CBuCnLe26faBpcBP2fktp4rp8abpcAnTWft6ZrP5Q4T'); // 唯一生成一个关联账户 用户pubkey 与farm_info 联合唯一\n\n  let user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1);\n  console.log(\"初始化给用户lp数量 10000 \\n 开始质押: 10000 lp\");\n  let rayUsdcFarmAuth = new _web.PublicKey('EcCKf3mgPtL6dNNAVG4gQQtLkAoTAUdf5vzFukkrviWq');\n  let rayUsdcFarmReward = new _web.PublicKey('7vnPTB2HAXFUAV5iiVZTNHgAnVYjgXcdumbbqfeK6ugp');\n  let rayUsdcLpAccount = new _web.PublicKey('H6kzwNNg9zbgC1YBjvCN4BdebtA4NusvgUhUSDZoz8rP');\n  let depositAmount = 1000000;\n  let farm_other_address = new _web.PublicKey('EGHdQm9KGLz6nw7W4rK13DyAMMJcGP9RpzCJaXiq75kQ');\n  let user_other_address = new _web.PublicKey('GCAo54WVTuoDyqzjeSB7YQDHFDU4a5Pz6YKi9g7P2p7a'); // tokenSwap = await TokenSwap.depositRaydiumV4(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     user, // 客服端钱包获取\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     raydium_stake_program_id,\n  //     ray_usdc_pool_id,\n  //     rayUsdcFarmAuth,\n  //     farmDetail1.pool_user_info,\n  //     rayUsdcFarmReward,\n  //     rayUsdcLpAccount,\n  //     farmDetail1.pool_other_address,\n  //     farm_other_address,\n  //     user_other_address,\n  //     depositAmount,\n  // );\n  // 比对结果 账户 minA 余额理论为0\n  // let userLpAccount = await lp_mint.getAccountInfo(user_lp_address);\n  // console.log(\"用户剩余lp数量 \", userLpAccount.amount.toString())\n  // assert(userLpAccount.amount == 0)\n  //\n  // // 比对结果 矿池 lp 余额理论为 10000\n  // let poolLpAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  //\n  // console.log(\"矿池剩余lp数量\", poolLpAccount.amount.toString())\n  // assert(poolLpAccount.amount == 10000)\n  // 查看\n\n  console.log(\"******************************************用户质押成功\");\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1); //\n\n  let userDetail = await _tokenSwap.TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, _tokenSwap.TOKEN_SWAP_PROGRAM_ID);\n  console.log('用户质押矿池 ：', userDetail.pool_id.toString());\n  console.log('用户质押金额 ：', userDetail.amount.toString());\n  console.log('用户理论已领取金额 ：', userDetail.reward_debt.toString()); // assert(userDetail.amount == 10000)\n  // console.log('用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  //\n  // let userFarmAccount = await farm_mint1.getAccountInfo(user_farm_address);\n  // console.log(\"收取收益之前 用户 farm 余额\", userFarmAccount.amount.toString());\n  //\n  // let poolFarmAccount = await farm_mint1.getAccountInfo(farmDetail1.pool_farm_address);\n  // console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  //\n  // let userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"收取收益之前 用户 ray 余额\", userRayAccount.amount.toString());\n  //\n  // let poolRayAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  // console.log(\"矿池ray剩余：\", poolRayAccount.amount.toString());\n  // console.log(\"用户收取收益\")\n  // // 收取收益\n  // await TokenSwap.harvestFarmV2(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1.publicKey, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     user, // 客服端钱包获取\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farm_info.publicKey,\n  //     farmDetail.authority,\n  //     farmDetail1.pool_user_info,\n  //     farmDetail.pool_farm_address,\n  //     farmDetail.pool_lp_address,\n  //     farmDetail.pool_fee_lp_address,\n  //     0,\n  // );\n  // userFarmAccount = await farm_mint1.getAccountInfo(user_farm_address);\n  // console.log(\"收取收益之后 用户  farm 余额\", userFarmAccount.amount.toString());\n  // poolFarmAccount = await farm_mint1.getAccountInfo(farmDetail1.pool_farm_address);\n  // console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  //\n  // user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1.publicKey);\n  //\n  // userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  // console.log('收取收益之后 用户质押金额 ：', userDetail.amount.toString());\n  //\n  // console.log('收取收益之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  // console.log('收取收益之后 用户理论已收取RAY奖励 ：', userDetail.ray_debt.toString());\n  //\n  //\n  // userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"收取收益之后 用户 ray 余额\", userRayAccount.amount.toString());\n  //\n  // poolRayAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  // console.log(\"矿池ray剩余：\", poolRayAccount.amount.toString());\n  //\n  // // 查看\n  // console.log(\"******************************************用户收取收益成功\");\n\n  console.log('开始提现'); // tokenSwap = await TokenSwap.withdrawRaydiumV4(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     raydium_stake_program_id,\n  //     ray_usdc_pool_id,\n  //     rayUsdcFarmAuth,\n  //     farmDetail1.pool_user_info,\n  //     rayUsdcFarmReward,\n  //     rayUsdcLpAccount,\n  //     farmDetail1.pool_other_address,\n  //     farm_other_address,\n  //     user_other_address,\n  //     depositAmount,\n  // );\n  // user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1.publicKey);\n  //\n  // userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  //\n  // //\n  // console.log('提现之后 用户质押金额 ：', userDetail.amount.toString());\n  //\n  // //\n  // assert(userDetail.amount == 0);\n  //\n  // console.log('提现之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  // console.log('提现之后 用户理论已收取RAY奖励 ：', userDetail.ray_debt.toString());\n  // userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"提现之后 用户 ray 余额\", userRayAccount.amount.toString());\n  // //\n  // userFarmAccount = await lp_mint.getAccountInfo(user_lp_address);\n  // console.log(\"提现之后 用户 lp 余额\", userFarmAccount.amount.toString());\n  //\n  // poolFarmAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  // console.log(\"提现之后 矿池 lp 余额：\", poolFarmAccount.amount.toString());\n\n  console.log(\"******************************************用户提现成功\");\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "token-swap-test.js"
      ],
      "names": [
        "createHash",
        "createHmac",
        "require",
        "fs",
        "encrypt",
        "algorithm",
        "content",
        "hash",
        "update",
        "digest",
        "sha1",
        "md5",
        "hmacMd5",
        "scretKey",
        "hmac",
        "up",
        "result",
        "hmacSha256",
        "tokenSwap",
        "authority",
        "nonce",
        "SWAP_PROGRAM_OWNER_FEE_ADDRESS",
        "process",
        "env",
        "TRADING_FEE_NUMERATOR",
        "TRADING_FEE_DENOMINATOR",
        "OWNER_TRADING_FEE_NUMERATOR",
        "OWNER_TRADING_FEE_DENOMINATOR",
        "OWNER_WITHDRAW_FEE_NUMERATOR",
        "OWNER_WITHDRAW_FEE_DENOMINATOR",
        "HOST_FEE_NUMERATOR",
        "HOST_FEE_DENOMINATOR",
        "CURVE_TYPE",
        "CurveType",
        "ConstantProduct",
        "REWARD_PER_PLOT",
        "assert",
        "condition",
        "message",
        "console",
        "log",
        "Error",
        "stack",
        "connection",
        "getConnection",
        "Connection",
        "url",
        "version",
        "getVersion",
        "getOwnedAccountsFilters",
        "publicKey",
        "AccountLayout",
        "memcmp",
        "offset",
        "offsetOf",
        "bytes",
        "toBase58",
        "dataSize",
        "span",
        "getAccounts",
        "programId",
        "farm_payer",
        "Account",
        "filters",
        "PublicKey",
        "resp",
        "_rpcRequest",
        "TOKEN_PROGRAM_ID",
        "commitment",
        "list",
        "token",
        "Token",
        "arr",
        "i",
        "length",
        "detail",
        "getAccountInfo",
        "pubkey",
        "amount",
        "Number",
        "push",
        "address",
        "toString",
        "data",
        "JSON",
        "stringify",
        "writeFileSync",
        "farmToken",
        "farm_info",
        "farmAuth",
        "farm_mint",
        "pool_farm_address",
        "lp_mint",
        "pool_lp_address",
        "pool_fee_lp_address",
        "farmDetail",
        "farm_config",
        "transfer",
        "from",
        "to",
        "mint",
        "lp",
        "to_lp",
        "getOrCreateAssociatedAccountInfo",
        "mint_info",
        "getMintInfo",
        "base_deciaml",
        "Math",
        "pow",
        "decimals",
        "toFixed",
        "createFarmPool",
        "farm",
        "findProgramAddress",
        "toBuffer",
        "TOKEN_SWAP_PROGRAM_ID",
        "createAccount",
        "mintAddress",
        "pool_id",
        "pool_user_info",
        "pool_other_info",
        "TokenSwap",
        "createTokenFarm",
        "TokenFarmUserLayout",
        "loadTokenFarm",
        "name",
        "pool_ray_address",
        "pool_other_address",
        "updateFarmPool",
        "reward_per_second",
        "poolid",
        "farmDetail1",
        "userAccount",
        "createUniqueAssociatedAccount",
        "userDetail",
        "loadTokenFarmUser",
        "total_supply",
        "reward_per_share",
        "reward_debt",
        "farm_mint1",
        "farm_info1",
        "authority1",
        "pool_farm1_address1",
        "pool_farm_address1",
        "pool_lp_address1",
        "farm_payer1",
        "pool_fee_lp_address1",
        "other_mint",
        "lp_config",
        "createVaultsPool",
        "ray",
        "threePoolId",
        "raydium_stake_program_id",
        "programid",
        "TokenRayUserLayout",
        "updateVaultsPool",
        "user",
        "userInfo",
        "last_update",
        "lp_config_v4",
        "createVaultsPoolV4",
        "other",
        "TokenRayUserV4Layout",
        "updateVaultsPoolV4",
        "use1r",
        "user_info_account_seed",
        "b",
        "Buffer",
        "keyPair",
        "nacl",
        "sign",
        "fromSeed",
        "subarray",
        "secretKey",
        "depositAndWithdrawPool",
        "user_lp_address",
        "mintTo",
        "user_farm_address",
        "user_info_account",
        "depositFarm",
        "token_program_id",
        "userLpAccount",
        "poolLpAccount",
        "userFarmAccount",
        "poolFarmAccount",
        "harvestFarm",
        "withdrawFarm",
        "depositAndWithdrawPoolV2",
        "ray_usdc_pool_id",
        "user_ray_address",
        "rayUsdcFarmAuth",
        "thirdAuth",
        "rayUsdcFarmReward",
        "thirdRayAddr",
        "rayUsdcLp",
        "thirdLpAddr",
        "depositAmount",
        "ray_per_share",
        "withdrawRaydium",
        "depositAndWithdrawPoolV4",
        "ray_total_supply",
        "rayUsdcLpAccount",
        "farm_other_address",
        "user_other_address"
      ],
      "mappings": "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G,IAAI3I,cAAJ,CAAc,8CAAd,CAAzB,CAlD8D,CAmD9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAzB,EAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AAEA0I,EAAAA,iBAAiB,GAAG7C,6BAA6B,CAACuB,IAAI,CAAC1G,SAAN,EAAiB0F,UAAjB,CAAjD,CA5F8D,CA6F9D;;AACA,MAAIN,UAAU,GAAG,MAAMb,qBAAUc,iBAAV,CAA4B5F,UAA5B,EAAwCuI,iBAAiB,CAAChI,SAA1D,EAAqEiE,gCAArE,CAAvB;AACA5E,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB8F,UAAU,CAAChB,OAAX,CAAmBpC,QAAnB,EAAxB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB8F,UAAU,CAACxD,MAAX,CAAkBI,QAAlB,EAAxB;AACA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B8F,UAAU,CAACI,WAAX,CAAuBxD,QAAvB,EAA3B,EAjG8D,CAkG9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAnK8D,CAqK9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIAD,EAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AACD",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/",
      "sourcesContent": [
        "// @flow\n\nimport {\n  Account,\n  Connection,\n  PublicKey,\n} from '@solana/web3.js';\nimport nacl from 'tweetnacl';\nimport { AccountLayout, Token, TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport 'crypto'\nimport {\n  TokenSwap,\n  CurveType,\n  TOKEN_SWAP_PROGRAM_ID, TokenRayUserLayout, TokenRayUserV4Layout, TokenFarmUserLayout,\n} from '../client/token-swap';\nimport { sendAndConfirmTransaction } from '../client/util/send-and-confirm-transaction';\nimport { newAccountWithLamports } from '../client/util/new-account-with-lamports';\nimport { url } from '../url';\nimport { sleep } from '../client/util/sleep';\nconst { createHash, createHmac } = require('crypto');\nlet fs = require(\"fs\");\n/**\n * @param {string} algorithm\n * @param {any} content\n *  @return {string}\n */\nconst encrypt = (algorithm, content) => {\n  let hash = createHash(algorithm)\n  hash.update(content)\n  return hash.digest('hex')\n}\n/**\n * @param {any} content\n *  @return {string}\n */\nconst sha1 = (content) => encrypt('sha1', content);\n/**\n * @param {any} content\n *  @return {string}\n */\nconst md5 = (content) => encrypt('md5', content);\n\n\n\nconst hmacMd5 = (scretKey, content) => {\n  const hmac = createHmac('md5', scretKey);\n  const up = hmac.update(content);\n  const result = up.digest('hex');\n  return result;\n}\n\nconst hmacSha256 = (scretKey, content) => {\n  const hmac = createHmac('sha256', scretKey);\n  const up = hmac.update(content);\n\n  let result = up.digest('hex');\n  // result = result;\n  // result = result.replace(/\\+/g, '%2B');\n  // console.log('result', escape(encodeURI(result)));\n  return result;\n\n\n  // var crypto = require('crypto');\n  // //creating hmac object\n  // var hmac = crypto.createHmac('sha256', 'yoursecretkeyhere');\n  // //passing the data to be hashed\n  // data = hmac.update('nodejsera');\n  // //Creating the hmac in the required format\n  // gen_hmac = data.digest('hex');\n}\n// The following globals are created by `createTokenSwap` and used by subsequent tests\n// Token swap\nlet tokenSwap: TokenSwap;\n// authority of the token and accounts\nlet authority: PublicKey;\n// nonce used to generate the authority public key\nlet nonce: number;\n// owner of the user accounts\n\n// Hard-coded fee address, for testing production mode\nconst SWAP_PROGRAM_OWNER_FEE_ADDRESS =\n  process.env.SWAP_PROGRAM_OWNER_FEE_ADDRESS;\n\n// Pool fees\nconst TRADING_FEE_NUMERATOR = 0;\nconst TRADING_FEE_DENOMINATOR = 0;\nconst OWNER_TRADING_FEE_NUMERATOR = 0;\nconst OWNER_TRADING_FEE_DENOMINATOR = 0;\nconst OWNER_WITHDRAW_FEE_NUMERATOR = 0;\nconst OWNER_WITHDRAW_FEE_DENOMINATOR = 0;\nconst HOST_FEE_NUMERATOR = 0;\nconst HOST_FEE_DENOMINATOR = 0;\n\n// curve type used to calculate swaps and deposits\nconst CURVE_TYPE = CurveType.ConstantProduct;\n// 384 ms\n//\nconst REWARD_PER_PLOT = 925925;\n\n// Initial amount in each swap token\n\nfunction assert(condition, message) {\n  if (!condition) {\n    console.log(Error().stack + ':token-test.js');\n    throw message || 'Assertion failed';\n  }\n}\n\nlet connection;\nasync function getConnection(): Promise<Connection> {\n  if (connection) return connection;\n\n  connection = new Connection(url, 'recent');\n  const version = await connection.getVersion();\n\n  console.log('Connection to cluster established:', url, version);\n  return connection;\n}\n\nfunction getOwnedAccountsFilters(publicKey:PublicKey) {\n  console.log(AccountLayout);\n  return [\n    {\n      memcmp: {\n        offset: AccountLayout.offsetOf('mint'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: AccountLayout.span,\n    },\n  ];\n}\nexport async function getAccounts(programId){\n  farm_payer = await new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n  const filters = getOwnedAccountsFilters(new PublicKey(programId));\n  let connection = await getConnection();\n\n  const resp = await connection._rpcRequest('getProgramAccounts', [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment:connection.commitment,\n      filters,\n    }\n  ]);\n  let list = resp['result'];\n  let token = new Token(connection,new PublicKey(programId),TOKEN_PROGRAM_ID,farm_payer);\n  let arr = [];\n  for (let i = 0;i<list.length;i++){\n    await sleep(100);\n    let detail = await token.getAccountInfo(new PublicKey(list[i].pubkey));\n    let amount = Number(detail.amount) / 1e9;\n    if (amount > 0){\n      arr.push({\n        address : list[i].pubkey,\n        amount : detail.amount.toString(),\n      });\n      console.log(i,list[i].pubkey,amount);\n    }\n  }\n\n  let data = JSON.stringify(arr);\n  fs.writeFileSync('farmv1.json', data);\n  return [];\n}\n\n//// ------------------------------- farm 挖矿逻辑 ---------------------------\nlet farmToken;\nlet farm_payer;\nlet farm_info;\nlet farmAuth;\nlet farm_mint;\nlet pool_farm_address;\nlet lp_mint;\nlet pool_lp_address;\nlet pool_fee_lp_address;\nlet farmDetail\nlet farm_config = {\n  'name':'SRM',\n  'poolid':'',\n  'farm':'CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d',\n  'mintAddress':'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt',\n}\n// 转账\nexport async function transfer(from,to,mint,amount) {\n  farm_payer = await new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n  const connection = await getConnection();\n  let lp = new Token(connection,new PublicKey(mint),farm_payer);\n  let to_lp = lp.getOrCreateAssociatedAccountInfo(to);\n  let mint_info = await lp.getMintInfo();\n  let base_deciaml = Math.pow(10,mint_info.decimals);\n  amount = (amount*base_deciaml).toFixed(0)\n  await lp.transfer(from,to_lp,farm_payer,[],Number(amount));\n}\nexport async function createFarmPool(farm_config): Promise<void> {\n\n  const connection = await getConnection();\n  farm_payer = await new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n  console.log('farm_config.farm',farm_config.farm)\n  farm_mint = new Token(connection,new PublicKey(farm_config.farm),TOKEN_PROGRAM_ID,farm_payer);\n  farm_info = new Account();\n  console.log('farm_config.farm',farm_config.farm);\n  [authority, nonce] = await PublicKey.findProgramAddress(\n    [farm_info.publicKey.toBuffer()],\n    TOKEN_SWAP_PROGRAM_ID,\n  );\n  pool_farm_address = await farm_mint.createAccount(authority);\n  await farm_mint.transfer(new PublicKey('EikSzrgHqMqEmmjMZiPqetHpSRgNDv6yQ2c99Mn1Y1Vj'),pool_farm_address,farm_payer,[],10*1e9);\n  console.log('farm_config.mintAddress',farm_config.mintAddress);\n  lp_mint = new Token(connection,new PublicKey(farm_config.mintAddress),TOKEN_PROGRAM_ID,farm_payer);\n  pool_lp_address = await lp_mint.createAccount(authority);\n  pool_fee_lp_address = await lp_mint.createAccount(farm_payer.publicKey);\n  let pool_id = null;\n  let pool_user_info = null;\n  let pool_other_info = null;\n  console.log('开始创建矿池',authority.toString(),nonce);\n  tokenSwap = await TokenSwap.createTokenFarm(\n      new PublicKey(),\n      connection,\n      farm_payer,\n      TOKEN_PROGRAM_ID,\n      farm_info,\n      authority,\n      pool_farm_address,\n      pool_lp_address,\n      pool_fee_lp_address,\n      pool_farm_address,\n      pool_id,\n      pool_user_info,\n      pool_other_info,\n      TOKEN_SWAP_PROGRAM_ID,\n      nonce,\n      TRADING_FEE_NUMERATOR,\n      TRADING_FEE_DENOMINATOR,\n      OWNER_TRADING_FEE_NUMERATOR,\n      OWNER_TRADING_FEE_DENOMINATOR,\n      OWNER_WITHDRAW_FEE_NUMERATOR,\n      OWNER_WITHDRAW_FEE_DENOMINATOR,\n      HOST_FEE_NUMERATOR,\n      HOST_FEE_DENOMINATOR,\n      REWARD_PER_PLOT,\n      TokenFarmUserLayout.span,\n  );\n  //\n  // console.log(\"******************************************矿池初始化成功\");\n\n  console.log('加载farm矿池');\n\n  farmDetail = await TokenSwap.loadTokenFarm(\n    connection,\n    farm_info.publicKey,\n    TOKEN_SWAP_PROGRAM_ID,\n  );\n\n  console.log('******************************************普通矿池信息校验成功---------',farm_config.name);\n  console.log(\"poolId:\", \"'\"+farm_info.publicKey.toString()+\"',\");\n  console.log(\"nonce:\", \"'\"+farmDetail.nonce+\"',\");\n  console.log(\"poolAuthority:\", \"'\"+farmDetail.authority.toString()+\"',\");\n  console.log(\"poolLpTokenAccount:\", \"'\"+farmDetail.pool_lp_address.toString()+\"',\");\n  console.log(\"poolRewardTokenAccount:\", \"'\"+farmDetail.pool_farm_address.toString()+\"',\");\n  console.log(\"poolRayAddress:\", \"'\"+farmDetail.pool_ray_address.toString()+\"',\");\n  console.log(\"poolRewardTokenAccountB:\", \"'\"+farmDetail.pool_other_address.toString()+\"',\");\n  console.log(\"poolFeeAccount:\", \"'\"+farmDetail.pool_fee_lp_address.toString()+\"',\");\n  console.log(\"threePoolUserInfo:\", \"'\"+farmDetail.pool_user_info.toString()+\"',\");\n  console.log(\"TOKEN_SWAP_PROGRAM_ID:\", \"'\"+TOKEN_SWAP_PROGRAM_ID.toBase58()+\"',\");\n  return\n}\nexport async function updateFarmPool(farm_config,reward_per_second): Promise<void> {\n  const connection = await getConnection();\n  farm_payer = await new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n  farm_info = new PublicKey(farm_config.poolid);\n  console.log('加载farm矿池');\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n  pool_farm_address = farmDetail1.pool_farm_address;\n  pool_lp_address = farmDetail1.pool_lp_address;\n  pool_fee_lp_address = farmDetail1.pool_fee_lp_address;\n  let pool_id = new PublicKey();\n  let pool_user_info = farmDetail1.pool_user_info;\n  let pool_other_info = farmDetail1.pool_other_address;\n  console.log('开始更新矿池------',farm_config.name);\n  // tokenSwap = await TokenSwap.updateTokenFarm(\n  //     new PublicKey(),\n  //     connection,\n  //     farm_payer,\n  //     TOKEN_PROGRAM_ID,\n  //     farm_info,\n  //     farmDetail1.authority,\n  //     pool_farm_address,\n  //     pool_lp_address,\n  //     pool_fee_lp_address,\n  //     pool_farm_address,\n  //     pool_id,\n  //     pool_user_info,\n  //     pool_other_info,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.nonce,\n  //     TRADING_FEE_NUMERATOR,\n  //     TRADING_FEE_DENOMINATOR,\n  //     OWNER_TRADING_FEE_NUMERATOR,\n  //     OWNER_TRADING_FEE_DENOMINATOR,\n  //     OWNER_WITHDRAW_FEE_NUMERATOR,\n  //     OWNER_WITHDRAW_FEE_DENOMINATOR,\n  //     HOST_FEE_NUMERATOR,\n  //     HOST_FEE_DENOMINATOR,\n  //     reward_per_second\n  // );\n  //\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n  const userAccount = createUniqueAssociatedAccount(new PublicKey('AG86tBRGiG3tVW4oyPnEM1151mYbBk94STwbVoTP8pDd'),farm_info);\n  const userDetail = await TokenSwap.loadTokenFarmUser(\n      connection,\n      userAccount.publicKey,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n  console.log('address',farmDetail1.pool_farm_address.toString());\n  console.log('总',farmDetail1.total_supply.toString());\n  console.log('每秒奖励',farmDetail1.reward_per_second.toString());\n  console.log('每share奖励',farmDetail1.reward_per_share.toString());\n  console.log(' user amount',userDetail.amount.toString());\n  console.log('user debt',userDetail.reward_debt.toString());\n  console.log('******************************************普通矿池信息校验成功---------',farm_config.name);\n  return\n}\nlet farm_mint1;\nlet farm_info1;\nlet authority1;\nlet pool_farm1_address1;\nlet pool_farm_address1;\nlet pool_lp_address1;\nlet pool_ray_address;\nlet farm_payer1;\nlet farmDetail1;\nlet pool_fee_lp_address1;\nlet other_mint;\nlet lp_config = {\n  'name':'RAY-USDC',\n  'farm':'CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d',\n  'ray':'4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n  // todo\n  'programid':'EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q', // ray 2币的programid\n  'poolid':'',\n  'threePoolId':'8nEWqxeDNZ2yo1izbPzY4nwR55isBZRaQk7CM8ntwUwR',\n  'thirdAuth':'6vQGZLsHgpJdqh1ER7q2q6mjZ43QwzhtTofTzb2sUhNh',\n  'thirdLpAddr':'77ujS15hjUfFZkM8QAw4HMLvMGZg95Gcm6ixjA1bnk3M',\n  'thirdRayAddr':'3ejmkn5HpXR9KdVWkai1Ngo87sQSUyKXrx8wSakipkno',\n  'mintAddress':'BZFGfXMrjG2sS7QT2eiCDEevPFnkYYF7kzJpWfYxPbcx',\n};\nexport async function createVaultsPool(lp_config): Promise<void> {\n  const connection = await getConnection();\n  farm_payer1 = await new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n  // farm v1\n  farm_mint1 = new Token(connection,new PublicKey(lp_config.farm),TOKEN_PROGRAM_ID,farm_payer1);\n  // RAY\n  farm_mint = new Token(connection,new PublicKey(lp_config.ray),TOKEN_PROGRAM_ID,farm_payer1);\n\n  // RAY-USDC\n  lp_mint = new Token(connection,new PublicKey(lp_config.mintAddress),TOKEN_PROGRAM_ID,farm_payer1);\n  // RAY-USDC poolid\n  let pool_id = new PublicKey(lp_config.threePoolId);\n\n  // farm_mint1 = await Token.createMint(\n  //   connection,\n  //   farm_payer,\n  //   farm_payer.publicKey,\n  //   null,\n  //   2,\n  //   TOKEN_PROGRAM_ID,\n  // );\n  // let farmAuth = await farm_mint1.createAccount(farm_payer1.publicKey)\n  // await farm_mint1.mintTo(farmAuth, farm_payer, [], 1000000)\n\n  farm_info1 = new Account();\n  [authority1, nonce] = await PublicKey.findProgramAddress(\n    [farm_info1.publicKey.toBuffer()],\n    TOKEN_SWAP_PROGRAM_ID,\n  );\n  pool_farm_address1 = await farm_mint1.createAccount(authority1);\n  await farm_mint1.transfer(new PublicKey('EikSzrgHqMqEmmjMZiPqetHpSRgNDv6yQ2c99Mn1Y1Vj'),pool_farm_address1,farm_payer1,[],1000*1e9);\n  pool_lp_address1 = await lp_mint.createAccount(authority1);\n  pool_fee_lp_address1 = await lp_mint.createAccount(farm_payer1.publicKey);\n  // await farm_mint.transfer(farmAuth,pool_farm_address,farm_payer,[],500000);\n  // await farm_mint1.mintTo(pool_farm_address1,farm_payer,[],500000);\n\n  pool_ray_address = await farm_mint.createAccount(authority1);\n  let pool_user_info = null;\n  let pool_other_address = null;\n  let raydium_stake_program_id = new PublicKey(lp_config.programid)\n  console.log('--------------------------------开始创建复投矿池-----',lp_config.name);\n  tokenSwap = await TokenSwap.createTokenFarm(\n      raydium_stake_program_id,\n      connection,\n      farm_payer1,\n      TOKEN_PROGRAM_ID,\n      farm_info1,\n      authority1,\n      pool_farm_address1,\n      pool_lp_address1,\n      pool_fee_lp_address1,\n      pool_ray_address,\n      pool_id,\n      pool_user_info,\n      pool_other_address,\n      TOKEN_SWAP_PROGRAM_ID,\n      nonce,\n      TRADING_FEE_NUMERATOR,\n      TRADING_FEE_DENOMINATOR,\n      OWNER_TRADING_FEE_NUMERATOR,\n      OWNER_TRADING_FEE_DENOMINATOR,\n      OWNER_WITHDRAW_FEE_NUMERATOR,\n      OWNER_WITHDRAW_FEE_DENOMINATOR,\n      HOST_FEE_NUMERATOR,\n      HOST_FEE_DENOMINATOR,\n      REWARD_PER_PLOT,\n      TokenRayUserLayout.span,\n  );\n  //\n  // console.log(\"******************************************矿池初始化成功\");\n\n  console.log('加载复投矿池');\n\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n    connection,\n    farm_info1.publicKey,\n    TOKEN_SWAP_PROGRAM_ID,\n  );\n\n  console.log('******************************************复投矿池信息校验成功---------',lp_config.name);\n  console.log(\"poolId:\", \"'\"+farm_info1.publicKey.toString()+\"',\");\n  console.log(\"poolAuthority:\", \"'\"+farmDetail1.authority.toString()+\"',\");\n  console.log(\"poolLpTokenAccount:\", \"'\"+farmDetail1.pool_lp_address.toString()+\"',\");\n  console.log(\"poolRewardTokenAccount:\", \"'\"+farmDetail1.pool_farm_address.toString()+\"',\");\n  console.log(\"poolRayAddress:\", \"'\"+farmDetail1.pool_ray_address.toString()+\"',\");\n  console.log(\"poolRewardTokenAccountB:\", \"'\"+farmDetail1.pool_other_address.toString()+\"',\");\n  console.log(\"poolFeeAccount:\", \"'\"+farmDetail1.pool_fee_lp_address.toString()+\"',\");\n  console.log(\"threePoolUserInfo:\", \"'\"+farmDetail1.pool_user_info.toString()+\"',\");\n  console.log(\"TOKEN_SWAP_PROGRAM_ID:\", \"'\"+TOKEN_SWAP_PROGRAM_ID.toBase58()+\"',\");\n}\n\nexport async function updateVaultsPool(lp_config,reward_per_second): Promise<void> {\n  const connection = await getConnection();\n  farm_payer1 = await new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n  // RAY-USDC poolid\n  let pool_id = new PublicKey(lp_config.threePoolId);\n  console.log('加载复投矿池');\n  farm_info1 = new PublicKey(lp_config.poolid);\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info1,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n  pool_farm_address1 = farmDetail1.pool_farm_address;\n  pool_lp_address1 = farmDetail1.pool_lp_address;\n  pool_fee_lp_address1 = farmDetail1.pool_fee_lp_address;\n\n  pool_ray_address = farmDetail1.pool_ray_address;\n  let pool_user_info = farmDetail1.pool_user_info;\n  let pool_other_address = farmDetail1.pool_other_address;\n  let raydium_stake_program_id = new PublicKey(lp_config.programid);\n  console.log('--------------------------------开始更新复投矿池-----',lp_config.name);\n  // tokenSwap = await TokenSwap.updateTokenFarm(\n  //     raydium_stake_program_id,\n  //     connection,\n  //     farm_payer1,\n  //     TOKEN_PROGRAM_ID,\n  //     farm_info1,\n  //     farmDetail1.authority,\n  //     pool_farm_address1,\n  //     pool_lp_address1,\n  //     pool_fee_lp_address1,\n  //     pool_ray_address,\n  //     pool_id,\n  //     pool_user_info,\n  //     pool_other_address,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.nonce,\n  //     TRADING_FEE_NUMERATOR,\n  //     TRADING_FEE_DENOMINATOR,\n  //     OWNER_TRADING_FEE_NUMERATOR,\n  //     OWNER_TRADING_FEE_DENOMINATOR,\n  //     OWNER_WITHDRAW_FEE_NUMERATOR,\n  //     OWNER_WITHDRAW_FEE_DENOMINATOR,\n  //     HOST_FEE_NUMERATOR,\n  //     HOST_FEE_DENOMINATOR,\n  //     reward_per_second,\n  // );\n  //\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info1,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n  const user = createUniqueAssociatedAccount(new PublicKey('AG86tBRGiG3tVW4oyPnEM1151mYbBk94STwbVoTP8pDd'),farm_info1);\n  let userInfo = await TokenSwap.loadTokenFarmUser(connection,user.publicKey,TOKEN_SWAP_PROGRAM_ID);\n  console.log('最后更新时间',farmDetail1.last_update.toString());\n  console.log('总数',farmDetail1.total_supply.toString());\n  console.log('每秒奖励',farmDetail1.reward_per_second.toString());\n  console.log('每份额奖励',farmDetail1.reward_per_share.toString());\n  console.log('第三方id',farmDetail1.pool_id.toString());\n  console.log('reward_debt',userInfo.reward_debt.toString());\n  console.log('amount',userInfo.amount.toString());\n  console.log('******************************************复投矿池信息更新成功---------',lp_config.name);\n}\n\nlet lp_config_v4 = {\n  'name':'KIN-RAY',\n  'farm':'CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d',\n  'ray':'4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n  'poolid':'',\n  // 'poolid':'7RFY9eMaD3nsV7EBTzVzuKBr4X4cLuDh3JaoWZTcGiJK',\n  'poolAuthority':'q42hNDzfBDQ1WzKjxkueEtBzX1VPJ2hnikJXFjSYC91',\n  'other':'MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb',\n  'mintAddress':'CHT8sft3h3gpLYbCcZ9o27mT5s3Z6VifBVbUiDvprHPW',\n  'programid':'CBuCnLe26faBpcBP2fktp4rp8abpcAnTWft6ZrP5Q4T',\n}\nexport async function createVaultsPoolV4(lp_config_v4): Promise<void> {\n  const connection = await getConnection();\n  farm_payer1 = await new Account([47, 47, 180, 85, 255, 194, 171, 118, 193, 173, 109, 77, 200, 226, 203, 67, 199, 30, 206, 105, 97, 122, 135, 238, 147, 208, 165, 90, 72, 151, 190, 81, 195, 34, 148, 188, 174, 176, 167, 252, 7, 200, 114, 236, 146, 114, 33, 23, 159, 124, 143, 206, 120, 112, 45, 239, 130, 156, 190, 115, 50, 98, 112, 228]);\n  // farm v1\n  farm_mint1 = new Token(connection, new PublicKey(lp_config_v4.farm), TOKEN_PROGRAM_ID, farm_payer1);\n  // RAY\n  farm_mint = new Token(connection, new PublicKey(lp_config_v4.ray), TOKEN_PROGRAM_ID, farm_payer1);\n  // FIDA\n  other_mint = new Token(connection, new PublicKey(lp_config_v4.other), TOKEN_PROGRAM_ID, farm_payer1);\n\n  // RAY-FIDA\n  lp_mint = new Token(connection, new PublicKey(lp_config_v4.mintAddress), TOKEN_PROGRAM_ID, farm_payer1);\n\n  // RAY-FIDA poolid\n  let pool_id = new PublicKey(lp_config_v4.threePoolId);\n\n  farm_info1 = new Account();\n  [authority1, nonce] = await PublicKey.findProgramAddress(\n      [farm_info1.publicKey.toBuffer()],\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n  pool_farm_address1 = await farm_mint1.createAccount(authority1);\n  await farm_mint1.transfer(new PublicKey('EikSzrgHqMqEmmjMZiPqetHpSRgNDv6yQ2c99Mn1Y1Vj'),pool_farm_address1,farm_payer1,[],1*1e9);\n  pool_lp_address1 = await lp_mint.createAccount(authority1);\n  pool_fee_lp_address1 = await lp_mint.createAccount(farm_payer1.publicKey);\n\n  pool_ray_address = await farm_mint.createAccount(authority1);\n  let pool_user_info = null;\n  let pool_other_address = await other_mint.createAccount(authority1);\n  let raydium_stake_program_id = new PublicKey(lp_config_v4.programid);\n  console.log('--------------------------------开始创建双币复投矿池----', lp_config_v4.name);\n  tokenSwap = await TokenSwap.createTokenFarm(\n      raydium_stake_program_id,\n      connection,\n      farm_payer1,\n      TOKEN_PROGRAM_ID,\n      farm_info1,\n      authority1,\n      pool_farm_address1,\n      pool_lp_address1,\n      pool_fee_lp_address1,\n      pool_ray_address,\n      pool_id,\n      pool_user_info,\n      pool_other_address,\n      TOKEN_SWAP_PROGRAM_ID,\n      nonce,\n      TRADING_FEE_NUMERATOR,\n      TRADING_FEE_DENOMINATOR,\n      OWNER_TRADING_FEE_NUMERATOR,\n      OWNER_TRADING_FEE_DENOMINATOR,\n      OWNER_WITHDRAW_FEE_NUMERATOR,\n      OWNER_WITHDRAW_FEE_DENOMINATOR,\n      HOST_FEE_NUMERATOR,\n      HOST_FEE_DENOMINATOR,\n      REWARD_PER_PLOT,\n      TokenRayUserV4Layout.span\n  );\n\n  console.log('加载复投矿池');\n\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info1.publicKey,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n\n  console.log('******************************************双币复投矿池信息校验成功---------',lp_config_v4.name);\n  console.log(\"poolId:\", \"'\"+farm_info1.publicKey.toString()+\"',\");\n  console.log(\"poolAuthority:\", \"'\"+farmDetail1.authority.toString()+\"',\");\n  console.log(\"poolLpTokenAccount:\", \"'\"+farmDetail1.pool_lp_address.toString()+\"',\");\n  console.log(\"poolRewardTokenAccount:\", \"'\"+farmDetail1.pool_farm_address.toString()+\"',\");\n  console.log(\"poolRayAddress:\", \"'\"+farmDetail1.pool_ray_address.toString()+\"',\");\n  console.log(\"poolRewardTokenAccountB:\", \"'\"+farmDetail1.pool_other_address.toString()+\"',\");\n  console.log(\"poolFeeAccount:\", \"'\"+farmDetail1.pool_fee_lp_address.toString()+\"',\");\n  console.log(\"threePoolUserInfo:\", \"'\"+farmDetail1.pool_user_info.toString()+\"',\");\n  console.log(\"TOKEN_SWAP_PROGRAM_ID:\", \"'\"+TOKEN_SWAP_PROGRAM_ID.toBase58()+\"',\");\n}\n\nexport async function updateVaultsPoolV4(lp_config_v4,reward_per_second): Promise<void> {\n  const connection = await getConnection();\n  farm_payer1 = await new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n\n  // RAY-FIDA poolid\n  let pool_id = new PublicKey(lp_config_v4.threePoolId);\n\n  farm_info1 = new PublicKey(lp_config_v4.poolid)\n  console.log('加载双币复投矿池');\n\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info1,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n  console.log(\"farmDetail1.reward_per_share====================\",farmDetail1.reward_per_share.toString());\n  console.log(\"farmDetail1.reward_per_second====================\",farmDetail1.reward_per_second.toString());\n  pool_farm_address1 = farmDetail1.pool_farm_address;\n  pool_lp_address1 = farmDetail1.pool_lp_address;\n  pool_fee_lp_address1 = farmDetail1.pool_fee_lp_address;\n  pool_ray_address = farmDetail1.pool_ray_address;\n  let pool_user_info = farmDetail1.pool_user_info;\n  let pool_other_address = farmDetail1.pool_other_address;\n  let raydium_stake_program_id = new PublicKey(lp_config_v4.programid);\n\n  console.log('--------------------------------开始更新双币复投矿池----',lp_config_v4.name);\n  // tokenSwap = await TokenSwap.updateTokenFarm(\n  //     raydium_stake_program_id,\n  //     connection,\n  //     farm_payer1,\n  //     TOKEN_PROGRAM_ID,\n  //     farm_info1,\n  //     farmDetail1.authority,\n  //     pool_farm_address1,\n  //     pool_lp_address1,\n  //     pool_fee_lp_address1,\n  //     pool_ray_address,\n  //     pool_id,\n  //     pool_user_info,\n  //     pool_other_address,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.nonce,\n  //     TRADING_FEE_NUMERATOR,\n  //     TRADING_FEE_DENOMINATOR,\n  //     OWNER_TRADING_FEE_NUMERATOR,\n  //     OWNER_TRADING_FEE_DENOMINATOR,\n  //     OWNER_WITHDRAW_FEE_NUMERATOR,\n  //     OWNER_WITHDRAW_FEE_DENOMINATOR,\n  //     HOST_FEE_NUMERATOR,\n  //     HOST_FEE_DENOMINATOR,\n  //     reward_per_second\n  // );\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info1,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n  const use1r = createUniqueAssociatedAccount(new PublicKey('GnxeeXBom4pYCk7ejigh5bGQ8M37hXt8xikjfzrctsMo'),farm_info1);\n  let userInfo = await TokenSwap.loadTokenFarmUser(connection,use1r.publicKey,TOKEN_SWAP_PROGRAM_ID)\n  console.log('total ',farmDetail1.total_supply.toString());\n  // console.log('每秒奖励 ',farmDetail1.reward_per_second.toString());\n  // console.log('每share奖励 ',farmDetail1.reward_per_share.toString());\n  console.log('other address ',farmDetail1.pool_other_address.toString());\n  console.log('poolid ',farmDetail1.pool_id.toString());\n  console.log('pool_user_info ',farmDetail1.pool_user_info.toString());\n  console.log('pool ',lp_config_v4.name);\n  console.log('user amount ',userInfo.amount.toString());\n  console.log('user debt ',userInfo.reward_debt.toString());\n  console.log('******************************************双币复投矿池信息更新成功---------',lp_config_v4.name);\n}\n\n// 根据用户地址和合约地址生成一个唯一地址\nfunction createUniqueAssociatedAccount(user: PublicKey, farm_info: PublicKey): Account {\n  let user_info_account_seed = hmacSha256(user.toBase58(), farm_info.toBase58());\n  let b = Buffer.from(user_info_account_seed);\n  let keyPair = nacl.sign.keyPair.fromSeed(b.subarray(0, 32));\n  return new Account(keyPair.secretKey);\n}\n\n// 质押与提现\nexport async function depositAndWithdrawPool(lp_config): Promise<void> {\n  const connection = await getConnection();\n  farm_payer1 = await new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n\n  // 用户A sol\n  const user = await newAccountWithLamports(connection, 100000000000);\n  const user_lp_address = await lp_mint.createAccount(user.publicKey);\n\n  // lp mint\n  await lp_mint.mintTo(user_lp_address, farm_payer, [], 10000);\n  let user_farm_address = await farm_mint.createAccount(user.publicKey);\n\n\n  // 唯一生成一个关联账户 用户pubkey 与farm_info 联合唯一\n\n  let user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info.publicKey);\n\n  console.log(\"初始化给用户lp数量 10000 \\n 开始质押: 10000 lp\");\n\n  tokenSwap = await TokenSwap.depositFarm(\n    connection,\n    user, // 客服端钱包获取\n    farm_info.publicKey, // 常量\n    farmDetail.authority, // 通过常量获取\n    user_lp_address, // 客服端钱包获取\n    user_farm_address, // 客服端钱包获取\n    user_info_account, // 客服端钱包生成\n    farmDetail.pool_lp_address,\n    user, // 客服端钱包获取\n    farmDetail.token_program_id,\n    TOKEN_SWAP_PROGRAM_ID,\n    farmDetail.pool_farm_address,\n    farmDetail.pool_fee_lp_address,\n    10000,\n  );\n\n  // 比对结果 账户 minA 余额理论为0\n  let userLpAccount = await lp_mint.getAccountInfo(user_lp_address);\n  console.log(\"用户剩余lp数量 \", userLpAccount.amount.toString())\n  assert(userLpAccount.amount == 0)\n\n  // 比对结果 矿池 lp 余额理论为 10000\n  let poolLpAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n\n  console.log(\"矿池剩余lp数量\", poolLpAccount.amount.toString())\n  assert(poolLpAccount.amount == 10000)\n  // 查看\n  console.log(\"******************************************用户质押成功\");\n\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info.publicKey);\n\n  let userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  console.log('用户质押矿池 ：', userDetail.pool_id.toString());\n  console.log('用户质押金额 ：', userDetail.amount.toString());\n  assert(userDetail.amount == 10000)\n  console.log('用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n\n  let userFarmAccount = await farm_mint.getAccountInfo(user_farm_address);\n  console.log(\"收取收益之前 用户 farm 余额\", userFarmAccount.amount.toString());\n\n  let poolFarmAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n\n  sleep(1000 * 30);\n  console.log(\"用户收取收益\")\n  // 收取收益\n  await TokenSwap.harvestFarm(\n    connection,\n    user, // 客服端钱包获取\n    farm_info.publicKey, // 常量\n    farmDetail.authority, // 通过常量获取\n    user_lp_address, // 客服端钱包获取\n    user_farm_address, // 客服端钱包获取\n    user_info_account, // 客服端钱包获取\n    farmDetail.pool_lp_address,\n    user, // 客服端钱包获取\n    farmDetail.token_program_id,\n    TOKEN_SWAP_PROGRAM_ID,\n    farmDetail.pool_farm_address,\n    farmDetail.pool_fee_lp_address,\n    0,\n  );\n  userFarmAccount = await farm_mint.getAccountInfo(user_farm_address);\n  console.log(\"收取收益之后 用户  farm 余额\", userFarmAccount.amount.toString());\n  poolFarmAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info.publicKey);\n\n  userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  console.log('收取收益之后 用户质押金额 ：', userDetail.amount.toString());\n\n  console.log('收取收益之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n\n  // 查看\n  console.log(\"******************************************用户收取收益成功\");\n\n  console.log('开始提现');\n\n  tokenSwap = await TokenSwap.withdrawFarm(\n    connection,\n    user, // 客服端钱包获取\n    farm_info.publicKey, // 常量\n    farmDetail.authority, // 通过常量获取\n    user_lp_address, // 客服端钱包获取\n    user_farm_address, // 客服端钱包获取\n    user_info_account, // 客服端钱包生成\n    farmDetail.pool_lp_address,\n    farmDetail.token_program_id,\n    TOKEN_SWAP_PROGRAM_ID,\n    farmDetail.pool_farm_address,\n    farmDetail.pool_fee_lp_address,\n    10000,\n  );\n\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info.publicKey);\n\n  userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n\n  //\n  console.log('提现之后 用户质押金额 ：', userDetail.amount.toString());\n\n  //\n  assert(userDetail.amount == 0);\n\n  console.log('提现之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n\n  //\n  userFarmAccount = await lp_mint.getAccountInfo(user_lp_address);\n  console.log(\"提现之后 用户 lp 余额\", userFarmAccount.amount.toString());\n\n  poolFarmAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  console.log(\"提现之后 矿池 lp 余额：\", poolFarmAccount.amount.toString());\n\n  console.log(\"******************************************用户提现成功\");\n}\n\n// 复投\nexport async function depositAndWithdrawPoolV2(): Promise<void> {\n  const connection = await getConnection();\n\n  // 用户A sol\n  // const user = await newAccountWithLamports(connection, 100000000000);\n  const user = new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n\n  // farm v1\n  farm_mint1 = new Token(connection,new PublicKey('CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d'),TOKEN_PROGRAM_ID,user);\n  // RAY\n  farm_mint = new Token(connection,new PublicKey('4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R'),TOKEN_PROGRAM_ID,user);\n\n  // RAY-USDC\n  lp_mint = new Token(connection,new PublicKey(lp_config.lp),TOKEN_PROGRAM_ID,user);\n  // RAY-USDC poolid\n  let ray_usdc_pool_id = new PublicKey(lp_config.poolid);\n  // 复投池\n  farm_info1 = new PublicKey('DSSRNh74r7AdrVFxeWZxdXqCW6icqC84C16bhcsQayUp');\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info1,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n\n  console.log('farm_ray_address',farmDetail1.pool_ray_address.toString());\n  // 自己的LP地址\n  const user_lp_address = new PublicKey('FBGvfryiPuTCr8dATruk2d1B2eJ23agAuwZ8fia1XiZH');\n  //=====\n  // lp mint\n  // await lp_mint.mintTo(user_lp_address, user, [], 10000);\n  // let user_farm_address = await farm_mint1.createAccount(user.publicKey);\n  let user_farm_address = new PublicKey('EtKp9jWCTHEUnvUPXVRAj9D25Tg8vqr3KUGoNK66Qy7X');\n\n  // let user_ray_address = await farm_mint.createAccount(user.publicKey);\n  let user_ray_address = new PublicKey('Ceo2j3wYZiWG6mvu3uxoUQ3GBefiUNBQnzBFf9xr4s73');\n  let raydium_stake_program_id = new PublicKey(lp_config.programid)\n\n  // 唯一生成一个关联账户 用户pubkey 与farm_info 联合唯一\n\n  let user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1);\n  // let user_info_account = new PublicKey('75szQsdeVhet8civkSUxZW8sXGYCDATnrBqC1mcCVU5G');\n\n  console.log(\"初始化给用户lp数量 10000 \\n 开始质押: 10000 lp\");\n  let rayUsdcFarmAuth = new PublicKey(lp_config.thirdAuth);\n  let rayUsdcFarmReward = new PublicKey(lp_config.thirdRayAddr);\n  let rayUsdcLp = new PublicKey(lp_config.thirdLpAddr);\n  let depositAmount = 1000000;\n  // tokenSwap = await TokenSwap.depositRaydium(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     user, // 客服端钱包获取\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     raydium_stake_program_id,\n  //     ray_usdc_pool_id,\n  //     rayUsdcFarmAuth,\n  //     farmDetail1.pool_user_info,\n  //     rayUsdcFarmReward,\n  //     rayUsdcLp,\n  //     depositAmount,\n  // );\n\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info1,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n\n  console.log('farmDetail1',farmDetail1.reward_per_share.toString(),farmDetail1.ray_per_share.toString(),\n      farmDetail1.last_update.toString(),);\n\n  // 比对结果 账户 minA 余额理论为0\n  // let userLpAccount = await lp_mint.getAccountInfo(user_lp_address);\n  // console.log(\"用户剩余lp数量 \", userLpAccount.amount.toString())\n  // assert(userLpAccount.amount == 0)\n  //\n  // // 比对结果 矿池 lp 余额理论为 10000\n  // let poolLpAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  //\n  // console.log(\"矿池剩余lp数量\", poolLpAccount.amount.toString())\n  // assert(poolLpAccount.amount == 10000)\n  // 查看\n  console.log(\"******************************************用户质押成功\");\n\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1);\n  //\n  let userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  console.log('用户质押矿池 ：', userDetail.pool_id.toString());\n  console.log('用户质押金额 ：', userDetail.amount.toString());\n  console.log('用户理论已领取金额 ：', userDetail.reward_debt.toString());\n  // assert(userDetail.amount == 10000)\n  // console.log('用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  //\n  // let userFarmAccount = await farm_mint1.getAccountInfo(user_farm_address);\n  // console.log(\"收取收益之前 用户 farm 余额\", userFarmAccount.amount.toString());\n  //\n  // let poolFarmAccount = await farm_mint1.getAccountInfo(farmDetail1.pool_farm_address);\n  // console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  //\n  // let userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"收取收益之前 用户 ray 余额\", userRayAccount.amount.toString());\n  //\n  // let poolRayAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  // console.log(\"矿池ray剩余：\", poolRayAccount.amount.toString());\n\n  // console.log(\"用户收取收益\")\n  // // 收取收益\n  // await TokenSwap.harvestFarmV2(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1.publicKey, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     user, // 客服端钱包获取\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farm_info.publicKey,\n  //     farmDetail.authority,\n  //     farmDetail1.pool_user_info,\n  //     farmDetail.pool_farm_address,\n  //     farmDetail.pool_lp_address,\n  //     farmDetail.pool_fee_lp_address,\n  //     0,\n  // );\n  // userFarmAccount = await farm_mint1.getAccountInfo(user_farm_address);\n  // console.log(\"收取收益之后 用户  farm 余额\", userFarmAccount.amount.toString());\n  // poolFarmAccount = await farm_mint1.getAccountInfo(farmDetail1.pool_farm_address);\n  // console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  //\n  // user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1.publicKey);\n  //\n  // userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  // console.log('收取收益之后 用户质押金额 ：', userDetail.amount.toString());\n  //\n  // console.log('收取收益之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  // console.log('收取收益之后 用户理论已收取RAY奖励 ：', userDetail.ray_debt.toString());\n  //\n  //\n  // userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"收取收益之后 用户 ray 余额\", userRayAccount.amount.toString());\n  //\n  // poolRayAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  // console.log(\"矿池ray剩余：\", poolRayAccount.amount.toString());\n  //\n  // // 查看\n  // console.log(\"******************************************用户收取收益成功\");\n\n  console.log('开始提现');\n\n  tokenSwap = await TokenSwap.withdrawRaydium(\n      connection,\n      user, // 客服端钱包获取\n      farm_info1, // 常量\n      farmDetail1.authority, // 通过常量获取\n      user_lp_address, // 客服端钱包获取\n      user_farm_address, // 客服端钱包获取\n      user_info_account, // 客服端钱包生成\n      farmDetail1.pool_lp_address,\n      farmDetail1.token_program_id,\n      TOKEN_SWAP_PROGRAM_ID,\n      farmDetail1.pool_farm_address,\n      farmDetail1.pool_fee_lp_address,\n      farmDetail1.pool_ray_address,\n      user_ray_address,\n      raydium_stake_program_id,\n      ray_usdc_pool_id,\n      rayUsdcFarmAuth,\n      farmDetail1.pool_user_info,\n      rayUsdcFarmReward,\n      rayUsdcLp,\n      990000,\n  );\n\n  // user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1.publicKey);\n  //\n  // userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  //\n  // //\n  // console.log('提现之后 用户质押金额 ：', userDetail.amount.toString());\n  //\n  // //\n  // assert(userDetail.amount == 0);\n  //\n  // console.log('提现之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  // console.log('提现之后 用户理论已收取RAY奖励 ：', userDetail.ray_debt.toString());\n  // userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"提现之后 用户 ray 余额\", userRayAccount.amount.toString());\n  // //\n  // userFarmAccount = await lp_mint.getAccountInfo(user_lp_address);\n  // console.log(\"提现之后 用户 lp 余额\", userFarmAccount.amount.toString());\n  //\n  // poolFarmAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  // console.log(\"提现之后 矿池 lp 余额：\", poolFarmAccount.amount.toString());\n\n\n\n  console.log(\"******************************************用户提现成功\");\n}\n// 复投\nexport async function depositAndWithdrawPoolV4(): Promise<void> {\n  const connection = await getConnection();\n\n  // 用户A sol\n  // const user = await newAccountWithLamports(connection, 100000000000);\n  const user = new Account([47,47,180,85,255,194,171,118,193,173,109,77,200,226,203,67,199,30,206,105,97,122,135,238,147,208,165,90,72,151,190,81,195,34,148,188,174,176,167,252,7,200,114,236,146,114,33,23,159,124,143,206,120,112,45,239,130,156,190,115,50,98,112,228]);\n  // farm v1\n  farm_mint1 = new Token(connection,new PublicKey('CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d'),TOKEN_PROGRAM_ID,user);\n  // RAY\n  farm_mint = new Token(connection,new PublicKey('4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R'),TOKEN_PROGRAM_ID,user);\n  // FIDA\n  other_mint = new Token(connection,new PublicKey('EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp'),TOKEN_PROGRAM_ID,user);\n  // RAY-FIDA\n  lp_mint = new Token(connection,new PublicKey('DsBuznXRTmzvEdb36Dx3aVLVo1XmH7r1PRZUFugLPTFv'),TOKEN_PROGRAM_ID,user);\n  // RAY-FIDA poolid\n  let ray_usdc_pool_id = new PublicKey('8rAdapvcC5vYNLXzChMgt56s6HCQGE6Lbo469g3WRTUh');\n  // 复投池\n  farm_info1 = new PublicKey('7WRRSzFES8a13so6hQAhVtpkEBtLwsdBiQH6vhgSX7KG');\n  farmDetail1 = await TokenSwap.loadTokenFarm(\n      connection,\n      farm_info1,\n      TOKEN_SWAP_PROGRAM_ID,\n  );\n  console.log(farmDetail1.pool_other_address.toString(),\"pool_other_address\",farmDetail1.pool_user_info.toString(),);\n  console.log(farmDetail1.token_program_id.toString(),);\n  console.log(\"farmDetail1.ray_per_share\",farmDetail1.ray_per_share.toString(),);\n  console.log(\"farmDetail1.ray_per_share\",farmDetail1.ray_total_supply.toString(),);\n  console.log(\"farmDetail1.last_update\",farmDetail1.last_update.toString(),);\n  // 自己的LP地址\n  const user_lp_address = new PublicKey('J5kjbdzBpAmseNHirskBw1Fg9Uj4eyVK8PLzVH4ZENLB');\n  //=====\n  // lp mint\n  // await lp_mint.mintTo(user_lp_address, user, [], 10000);\n  // let user_farm_address = await farm_mint1.createAccount(user.publicKey);\n  let user_farm_address = new PublicKey('FpFtrv4ZNDzdhcUvU6ekdrL88RXTYzJSzpYBEP4pyHqT');\n\n  // let user_ray_address = await farm_mint.createAccount(user.publicKey);\n  let user_ray_address = new PublicKey('Ceo2j3wYZiWG6mvu3uxoUQ3GBefiUNBQnzBFf9xr4s73');\n  let raydium_stake_program_id = new PublicKey('CBuCnLe26faBpcBP2fktp4rp8abpcAnTWft6ZrP5Q4T')\n\n  // 唯一生成一个关联账户 用户pubkey 与farm_info 联合唯一\n\n  let user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1);\n\n  console.log(\"初始化给用户lp数量 10000 \\n 开始质押: 10000 lp\");\n  let rayUsdcFarmAuth = new PublicKey('EcCKf3mgPtL6dNNAVG4gQQtLkAoTAUdf5vzFukkrviWq');\n  let rayUsdcFarmReward = new PublicKey('7vnPTB2HAXFUAV5iiVZTNHgAnVYjgXcdumbbqfeK6ugp');\n  let rayUsdcLpAccount = new PublicKey('H6kzwNNg9zbgC1YBjvCN4BdebtA4NusvgUhUSDZoz8rP');\n  let depositAmount = 1000000;\n  let farm_other_address = new PublicKey('EGHdQm9KGLz6nw7W4rK13DyAMMJcGP9RpzCJaXiq75kQ');\n  let user_other_address = new PublicKey('GCAo54WVTuoDyqzjeSB7YQDHFDU4a5Pz6YKi9g7P2p7a');\n  // tokenSwap = await TokenSwap.depositRaydiumV4(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     user, // 客服端钱包获取\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     raydium_stake_program_id,\n  //     ray_usdc_pool_id,\n  //     rayUsdcFarmAuth,\n  //     farmDetail1.pool_user_info,\n  //     rayUsdcFarmReward,\n  //     rayUsdcLpAccount,\n  //     farmDetail1.pool_other_address,\n  //     farm_other_address,\n  //     user_other_address,\n  //     depositAmount,\n  // );\n\n  // 比对结果 账户 minA 余额理论为0\n  // let userLpAccount = await lp_mint.getAccountInfo(user_lp_address);\n  // console.log(\"用户剩余lp数量 \", userLpAccount.amount.toString())\n  // assert(userLpAccount.amount == 0)\n  //\n  // // 比对结果 矿池 lp 余额理论为 10000\n  // let poolLpAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  //\n  // console.log(\"矿池剩余lp数量\", poolLpAccount.amount.toString())\n  // assert(poolLpAccount.amount == 10000)\n  // 查看\n  console.log(\"******************************************用户质押成功\");\n\n  user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1);\n  //\n  let userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  console.log('用户质押矿池 ：', userDetail.pool_id.toString());\n  console.log('用户质押金额 ：', userDetail.amount.toString());\n  console.log('用户理论已领取金额 ：', userDetail.reward_debt.toString());\n  // assert(userDetail.amount == 10000)\n  // console.log('用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  //\n  // let userFarmAccount = await farm_mint1.getAccountInfo(user_farm_address);\n  // console.log(\"收取收益之前 用户 farm 余额\", userFarmAccount.amount.toString());\n  //\n  // let poolFarmAccount = await farm_mint1.getAccountInfo(farmDetail1.pool_farm_address);\n  // console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  //\n  // let userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"收取收益之前 用户 ray 余额\", userRayAccount.amount.toString());\n  //\n  // let poolRayAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  // console.log(\"矿池ray剩余：\", poolRayAccount.amount.toString());\n\n  // console.log(\"用户收取收益\")\n  // // 收取收益\n  // await TokenSwap.harvestFarmV2(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1.publicKey, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     user, // 客服端钱包获取\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farm_info.publicKey,\n  //     farmDetail.authority,\n  //     farmDetail1.pool_user_info,\n  //     farmDetail.pool_farm_address,\n  //     farmDetail.pool_lp_address,\n  //     farmDetail.pool_fee_lp_address,\n  //     0,\n  // );\n  // userFarmAccount = await farm_mint1.getAccountInfo(user_farm_address);\n  // console.log(\"收取收益之后 用户  farm 余额\", userFarmAccount.amount.toString());\n  // poolFarmAccount = await farm_mint1.getAccountInfo(farmDetail1.pool_farm_address);\n  // console.log(\"矿池farm剩余：\", poolFarmAccount.amount.toString());\n  //\n  // user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1.publicKey);\n  //\n  // userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  // console.log('收取收益之后 用户质押金额 ：', userDetail.amount.toString());\n  //\n  // console.log('收取收益之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  // console.log('收取收益之后 用户理论已收取RAY奖励 ：', userDetail.ray_debt.toString());\n  //\n  //\n  // userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"收取收益之后 用户 ray 余额\", userRayAccount.amount.toString());\n  //\n  // poolRayAccount = await farm_mint.getAccountInfo(farmDetail.pool_farm_address);\n  // console.log(\"矿池ray剩余：\", poolRayAccount.amount.toString());\n  //\n  // // 查看\n  // console.log(\"******************************************用户收取收益成功\");\n\n  console.log('开始提现');\n\n  // tokenSwap = await TokenSwap.withdrawRaydiumV4(\n  //     connection,\n  //     user, // 客服端钱包获取\n  //     farm_info1, // 常量\n  //     farmDetail1.authority, // 通过常量获取\n  //     user_lp_address, // 客服端钱包获取\n  //     user_farm_address, // 客服端钱包获取\n  //     user_info_account, // 客服端钱包生成\n  //     farmDetail1.pool_lp_address,\n  //     farmDetail1.token_program_id,\n  //     TOKEN_SWAP_PROGRAM_ID,\n  //     farmDetail1.pool_farm_address,\n  //     farmDetail1.pool_fee_lp_address,\n  //     farmDetail1.pool_ray_address,\n  //     user_ray_address,\n  //     raydium_stake_program_id,\n  //     ray_usdc_pool_id,\n  //     rayUsdcFarmAuth,\n  //     farmDetail1.pool_user_info,\n  //     rayUsdcFarmReward,\n  //     rayUsdcLpAccount,\n  //     farmDetail1.pool_other_address,\n  //     farm_other_address,\n  //     user_other_address,\n  //     depositAmount,\n  // );\n\n  // user_info_account = createUniqueAssociatedAccount(user.publicKey, farm_info1.publicKey);\n  //\n  // userDetail = await TokenSwap.loadTokenFarmUser(connection, user_info_account.publicKey, TOKEN_SWAP_PROGRAM_ID);\n  //\n  // //\n  // console.log('提现之后 用户质押金额 ：', userDetail.amount.toString());\n  //\n  // //\n  // assert(userDetail.amount == 0);\n  //\n  // console.log('提现之后 用户理论已收取奖励 ：', userDetail.reward_debt.toString());\n  // console.log('提现之后 用户理论已收取RAY奖励 ：', userDetail.ray_debt.toString());\n  // userRayAccount = await farm_mint.getAccountInfo(user_ray_address);\n  // console.log(\"提现之后 用户 ray 余额\", userRayAccount.amount.toString());\n  // //\n  // userFarmAccount = await lp_mint.getAccountInfo(user_lp_address);\n  // console.log(\"提现之后 用户 lp 余额\", userFarmAccount.amount.toString());\n  //\n  // poolFarmAccount = await lp_mint.getAccountInfo(farmDetail.pool_lp_address);\n  // console.log(\"提现之后 矿池 lp 余额：\", poolFarmAccount.amount.toString());\n\n\n\n  console.log(\"******************************************用户提现成功\");\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1622817022333
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/token-swap.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/token-swap.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/token-swap.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/token-swap.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/",
        "sourceFileName": "token-swap.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenSwap = exports.CurveType = exports.TokenRayUserV4Layout = exports.TokenRayUserLayout = exports.TokenFarmUserLayout = exports.TokenFarmLayout = exports.Numberu128 = exports.Numberu64 = exports.TOKEN_SWAP_PROGRAM_ID = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _assert = _interopRequireDefault(require(\"assert\"));\n\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\n\nvar _buffer = require(\"buffer\");\n\nvar BufferLayout = _interopRequireWildcard(require(\"buffer-layout\"));\n\nvar _web = require(\"@solana/web3.js\");\n\nvar Layout = _interopRequireWildcard(require(\"./layout\"));\n\nvar _sendAndConfirmTransaction = require(\"./util/send-and-confirm-transaction\");\n\nvar _account = require(\"./util/account\");\n\nvar _splToken = require(\"@solana/spl-token\");\n\nconst TOKEN_SWAP_PROGRAM_ID = new _web.PublicKey( // 'HTpjeN1FocdopyJxwFJzBsQ5edeDVXkNB3ssePWmhfyj',\n'DgUj4FuTYjFVTK6yT73MuGNS3wV3FPXa4Kp3Mqw87a77'); //\n\n/**\n * Some amount of tokens\n */\n\nexports.TOKEN_SWAP_PROGRAM_ID = TOKEN_SWAP_PROGRAM_ID;\n\nclass Numberu64 extends _bn.default {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer() {\n    const a = super.toArray().reverse();\n\n    const b = _buffer.Buffer.from(a);\n\n    if (b.length === 8) {\n      return b;\n    }\n\n    (0, _assert.default)(b.length < 8, 'Numberu64 too large');\n\n    const zeroPad = _buffer.Buffer.alloc(8);\n\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n  /**\n   * Construct a Numberu64 from Buffer representation\n   */\n\n\n  static fromBuffer(buffer) {\n    (0, _assert.default)(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    return new Numberu64([...buffer].reverse().map(i => `00${i.toString(16)}`.slice(-2)).join(''), 16);\n  }\n\n}\n/**\n * Some amount of tokens\n */\n\n\nexports.Numberu64 = Numberu64;\n\nclass Numberu128 extends _bn.default {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer() {\n    const a = super.toArray().reverse();\n\n    const b = _buffer.Buffer.from(a);\n\n    if (b.length === 16) {\n      return b;\n    }\n\n    (0, _assert.default)(b.length < 16, 'Numberu64 too large');\n\n    const zeroPad = _buffer.Buffer.alloc(16);\n\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n  /**\n   * Construct a Numberu64 from Buffer representation\n   */\n\n\n  static fromBuffer(buffer) {\n    (0, _assert.default)(buffer.length === 16, `Invalid buffer length: ${buffer.length}`);\n    return new Numberu64([...buffer].reverse().map(i => `00${i.toString(16)}`.slice(-2)).join(''), 16);\n  }\n\n}\n/**\n * // farm 结构体\n * @private\n */\n\n\nexports.Numberu128 = Numberu128;\nconst TokenFarmLayout = BufferLayout.struct([BufferLayout.u8('isInitialized'), // 1-2\nBufferLayout.u8('nonce'), // 1\nLayout.publicKey('tokenProgramId'), Layout.publicKey('poolFarmAddress'), // 矿池 farm地址\nLayout.publicKey('poolLpAddress'), // 矿池 lp地址\nLayout.publicKey('poolFeeLpAddress'), // 矿池 lp手续费地址\nLayout.uint64('tradeFeeNumerator'), Layout.uint64('tradeFeeDenominator'), Layout.uint64('ownerTradeFeeNumerator'), Layout.uint64('ownerTradeFeeDenominator'), Layout.uint64('ownerWithdrawFeeNumerator'), Layout.uint64('ownerWithdrawFeeDenominator'), Layout.uint64('hostFeeNumerator'), Layout.uint64('hostFeeDenominator'), Layout.uint64('lastUpdate'), // 最后一次slot\nLayout.uint64('rewardPerSecond'), // 每slot奖励\nLayout.uint128('rewardPerShare'), // 每个份额奖励\nLayout.uint64('totalSupply'), // 总质押量\nLayout.uint128('rayPerShare'), // ray 每份额奖励\nLayout.uint64('rayTotalSupply'), // 总质押量\nLayout.uint128('otherPerShare'), // other 每份额奖励\nLayout.uint64('otherTotalSupply'), // 总质押量\nLayout.publicKey('owner'), // owner\nLayout.publicKey('poolRayAddress'), // owner\nLayout.publicKey('poolId'), // owner\nLayout.publicKey('poolUserInfo'), // owner\nLayout.publicKey('poolOtherAddress') // owner\n]);\n/**\n * // farm user 结构体\n * @private\n */\n\nexports.TokenFarmLayout = TokenFarmLayout;\nconst TokenFarmUserLayout = BufferLayout.struct([BufferLayout.u8('isInitialized'), // 1-2\nLayout.publicKey('poolId'), //\nLayout.uint64('amount'), // 质押金额\nLayout.uint64('rewardDebt'), // 理论已领取奖励\nLayout.uint64('rayDebt'), // 理论ray已领取奖励\nLayout.uint64('otherDebt'), // 理论ray已领取奖励\nLayout.publicKey('userLpAddress') // 理论ray已领取奖励\n]);\n/**\n * // farm user 结构体\n * @private\n */\n\nexports.TokenFarmUserLayout = TokenFarmUserLayout;\nconst TokenRayUserLayout = BufferLayout.struct([Layout.uint64('state'), // 8 + 32 + 32 + 8 + 8\nLayout.publicKey('poolId'), Layout.publicKey('stakerOwner'), Layout.uint64('depositBalance'), Layout.uint64('rewardDebt')]);\n/**\n * // farm user 结构体\n * @private\n */\n\nexports.TokenRayUserLayout = TokenRayUserLayout;\nconst TokenRayUserV4Layout = BufferLayout.struct([Layout.uint64('state'), Layout.publicKey('poolId'), Layout.publicKey('stakerOwner'), Layout.uint64('depositBalance'), Layout.uint64('rewardDebt'), Layout.uint64('rewardDebtB')]);\nexports.TokenRayUserV4Layout = TokenRayUserV4Layout;\nconst CurveType = Object.freeze({\n  ConstantProduct: 0,\n  // Constant product curve, Uniswap-style\n  ConstantPrice: 1,\n  // Constant price curve, always X amount of A token for 1 B token, where X is defined at init\n  Offset: 3 // Offset curve, like Uniswap, but with an additional offset on the token B side\n\n});\n/**\n * A program to exchange tokens against a pool of liquidity\n */\n\nexports.CurveType = CurveType;\n\nclass TokenSwap {\n  /**\n   * @private\n   */\n\n  /**\n   * Program Identifier for the Token program\n   */\n\n  /**\n   * The public key for the fee account receiving trade and/or withdrawal fees\n   */\n\n  /**\n   * Authority\n   */\n\n  /**\n   * Fee payer\n   */\n\n  /**\n   * Create a Token object attached to the specific token\n   *\n   * @param connection The connection to use\n   * @param tokenSwap The token swap account\n   * @param swapProgramId The program ID of the token-swap program\n   * @param tokenProgramId The program ID of the token program\n   * @param poolToken The pool token\n   * @param authority The authority over the swap and accounts\n   * @param tokenAccountA: The token swap's Token A account\n   * @param tokenAccountB: The token swap's Token B account\n   * @param payer Pays for the transaction\n   */\n  constructor(connection, payer) {\n    (0, _defineProperty2.default)(this, \"connection\", void 0);\n    (0, _defineProperty2.default)(this, \"tokenProgramId\", void 0);\n    (0, _defineProperty2.default)(this, \"feeAccount\", void 0);\n    (0, _defineProperty2.default)(this, \"authority\", void 0);\n    (0, _defineProperty2.default)(this, \"payer\", void 0);\n  }\n  /**\n   * Get the minimum balance for the token swap account to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n\n\n  static async getMinBalanceRentForExemptTokenSwap(connection) {\n    return await connection.getMinimumBalanceForRentExemption(TokenFarmLayout.span);\n  }\n\n  static createInitFarmInstruction(tokenProgramId, // 通用token 转账 的地址\n  farm_info, //\n  authority, //\n  pool_farm_address, //\n  pool_lp_address, //\n  pool_fee_lp_address, //\n  pool_ray_address, //\n  pool_id, //\n  pool_user_info, //\n  pool_other_address, //\n  swapProgramId, // swap-farm 程序地址\n  nonce, tradeFeeNumerator, tradeFeeDenominator, ownerTradeFeeNumerator, ownerTradeFeeDenominator, ownerWithdrawFeeNumerator, ownerWithdrawFeeDenominator, hostFeeNumerator, hostFeeDenominator, reward_per_second) {\n    // 时间合约地址 记录区块的时间信息 slot\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, // 通用token地址\n    {\n      pubkey: farm_info.publicKey,\n      isSigner: false,\n      isWritable: true\n    }, // farm 矿池地址\n    {\n      pubkey: authority,\n      isSigner: false,\n      isWritable: false\n    }, // 矿池auth\n    {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: false\n    }, // 矿池对应的farm接收地址\n    {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: false\n    }, // 矿池对应的lp接收地址\n    {\n      pubkey: pool_fee_lp_address,\n      isSigner: false,\n      isWritable: false\n    }, // 手续费地址\n    {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_ray_address,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_id,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_user_info,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_other_address,\n      isSigner: false,\n      isWritable: false\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u8('nonce'), BufferLayout.nu64('tradeFeeNumerator'), BufferLayout.nu64('tradeFeeDenominator'), BufferLayout.nu64('ownerTradeFeeNumerator'), BufferLayout.nu64('ownerTradeFeeDenominator'), BufferLayout.nu64('ownerWithdrawFeeNumerator'), BufferLayout.nu64('ownerWithdrawFeeDenominator'), BufferLayout.nu64('hostFeeNumerator'), BufferLayout.nu64('hostFeeDenominator'), BufferLayout.nu64('reward_per_second')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 0,\n        // InitializeFarm instruction\n        nonce,\n        tradeFeeNumerator,\n        tradeFeeDenominator,\n        ownerTradeFeeNumerator,\n        ownerTradeFeeDenominator,\n        ownerWithdrawFeeNumerator,\n        ownerWithdrawFeeDenominator,\n        hostFeeNumerator,\n        hostFeeDenominator,\n        reward_per_second\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static updateFarmInstruction(tokenProgramId, // 通用token 转账 的地址\n  farm_info, //\n  authority, //\n  pool_farm_address, //\n  pool_lp_address, //\n  pool_fee_lp_address, //\n  pool_ray_address, //\n  pool_id, //\n  pool_user_info, //\n  pool_other_address, //\n  swapProgramId, // swap-farm 程序地址\n  nonce, tradeFeeNumerator, tradeFeeDenominator, ownerTradeFeeNumerator, ownerTradeFeeDenominator, ownerWithdrawFeeNumerator, ownerWithdrawFeeDenominator, hostFeeNumerator, hostFeeDenominator, reward_per_second) {\n    // 时间合约地址 记录区块的时间信息 slot\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, // 通用token地址\n    {\n      pubkey: farm_info,\n      isSigner: false,\n      isWritable: true\n    }, // farm 矿池地址\n    {\n      pubkey: authority,\n      isSigner: false,\n      isWritable: false\n    }, // 矿池auth\n    {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: false\n    }, // 矿池对应的farm接收地址\n    {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: false\n    }, // 矿池对应的lp接收地址\n    {\n      pubkey: pool_fee_lp_address,\n      isSigner: false,\n      isWritable: false\n    }, // 手续费地址\n    {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_ray_address,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_id,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_user_info,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_other_address,\n      isSigner: false,\n      isWritable: false\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u8('nonce'), BufferLayout.nu64('tradeFeeNumerator'), BufferLayout.nu64('tradeFeeDenominator'), BufferLayout.nu64('ownerTradeFeeNumerator'), BufferLayout.nu64('ownerTradeFeeDenominator'), BufferLayout.nu64('ownerWithdrawFeeNumerator'), BufferLayout.nu64('ownerWithdrawFeeDenominator'), BufferLayout.nu64('hostFeeNumerator'), BufferLayout.nu64('hostFeeDenominator'), BufferLayout.nu64('reward_per_second')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 0,\n        // InitializeFarm instruction\n        nonce,\n        tradeFeeNumerator,\n        tradeFeeDenominator,\n        ownerTradeFeeNumerator,\n        ownerTradeFeeDenominator,\n        ownerWithdrawFeeNumerator,\n        ownerWithdrawFeeDenominator,\n        hostFeeNumerator,\n        hostFeeDenominator,\n        reward_per_second\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static depositFarmInstruction(farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户接收farm奖励的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 矿池接收lp的地址\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, amount) {\n    // 时间合约地址\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: farm_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池信息\n    {\n      pubkey: authority_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池代币owner\n    {\n      pubkey: user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_transfer_authority_info,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_fee_lp_account,\n      isSigner: false,\n      isWritable: true\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.nu64('amount')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 7,\n        // Deposit instruction\n        amount\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static depositFarmV2Instruction(farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户接收farm奖励的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 矿池接收lp的地址\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, farm_fee_lp_address, amount) {\n    // 时间合约地址\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: farm_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池信息\n    {\n      pubkey: authority_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池代币owner\n    {\n      pubkey: user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_transfer_authority_info,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_fee_lp_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_program_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_pool_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_authority_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_fee_lp_address,\n      isSigner: false,\n      isWritable: true\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.nu64('amount')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 11,\n        // Deposit V2 instruction\n        amount\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static depositRaydiumInstruction(farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户接收farm奖励的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 矿池接收lp的地址\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, amount) {\n    // 时间合约地址\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: farm_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池信息\n    {\n      pubkey: authority_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池代币owner\n    {\n      pubkey: user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_transfer_authority_info,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_fee_lp_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_authority_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_pool_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_program_id,\n      isSigner: false,\n      isWritable: true\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.nu64('amount')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 3,\n        // Deposit Raydium instruction\n        amount\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static depositRaydiumV4Instruction(farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户接收farm奖励的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 矿池接收lp的地址\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, pool_other_address, farm_other_address, user_other_address, amount) {\n    // 时间合约地址\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: farm_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池信息\n    {\n      pubkey: authority_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池代币owner\n    {\n      pubkey: user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_transfer_authority_info,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_fee_lp_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_authority_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_pool_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_program_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_other_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_other_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_other_address,\n      isSigner: false,\n      isWritable: true\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.nu64('amount')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 7,\n        // Deposit Raydium instruction\n        amount\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static withdrawRaydiumV4Instruction(farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户接收farm奖励的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 矿池接收lp的地址\n  pool_lp_address, // 矿池接收lp的地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, pool_other_address, farm_other_address, user_other_address, amount) {\n    // 时间合约地址\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: farm_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池信息\n    {\n      pubkey: authority_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池代币owner\n    {\n      pubkey: user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_fee_lp_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_authority_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_pool_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_program_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_other_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_other_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_other_address,\n      isSigner: false,\n      isWritable: true\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.nu64('amount')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 8,\n        // Withdraw Raydium V4 instruction\n        amount\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static withdrawRaydiumInstruction(farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户接收farm奖励的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 矿池接收lp的地址\n  pool_lp_address, // 矿池接收lp的地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, amount) {\n    // 时间合约地址\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: farm_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池信息\n    {\n      pubkey: authority_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池代币owner\n    {\n      pubkey: user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_fee_lp_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_authority_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_pool_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_program_id,\n      isSigner: false,\n      isWritable: true\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.nu64('amount')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 4,\n        // Withdraw Raydium instruction\n        amount\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static withdrawFarmV2Instruction(farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户接收farm奖励的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 矿池接收lp的地址\n  pool_lp_address, // 矿池接收lp的地址\n  tokenProgramId, //\n  swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, farm_fee_lp_address, amount) {\n    // 时间合约地址\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: farm_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池信息\n    {\n      pubkey: authority_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池代币owner\n    {\n      pubkey: user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_fee_lp_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_ray_account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_program_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_pool_id,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_authority_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farm_fee_lp_address,\n      isSigner: false,\n      isWritable: true\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.nu64('amount')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 12,\n        // Withdraw V2 instruction\n        amount\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static withdrawFarmInstruction(farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户接收farm奖励的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 矿池接收lp的地址\n  pool_lp_address, // 矿池接收lp的地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, amount) {\n    // 时间合约地址\n    let clock = new _web.PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [{\n      pubkey: farm_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池信息\n    {\n      pubkey: authority_info,\n      isSigner: false,\n      isWritable: true\n    }, // 矿池代币owner\n    {\n      pubkey: user_info,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: user_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: pool_lp_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: tokenProgramId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_farm_address,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: clock,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: pool_fee_lp_account,\n      isSigner: false,\n      isWritable: true\n    }];\n    const commandDataLayout = BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.nu64('amount')]);\n\n    let data = _buffer.Buffer.alloc(1024);\n\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 8,\n        // Withdraw instruction\n        amount\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new _web.TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data\n    });\n  }\n\n  static async loadTokenSwap(connection, address, programId, payer) {\n    const data = await (0, _account.loadAccount)(connection, address, programId);\n    const tokenSwapData = TokenSwapLayout.decode(data);\n\n    if (!tokenSwapData.isInitialized) {\n      throw new Error(`Invalid token swap state`);\n    }\n\n    const [authority] = await _web.PublicKey.findProgramAddress([address.toBuffer()], programId);\n    const poolToken = new _web.PublicKey(tokenSwapData.tokenPool);\n    const feeAccount = new _web.PublicKey(tokenSwapData.feeAccount);\n    const tokenAccountA = new _web.PublicKey(tokenSwapData.tokenAccountA);\n    const tokenAccountB = new _web.PublicKey(tokenSwapData.tokenAccountB);\n    const mintA = new _web.PublicKey(tokenSwapData.mintA);\n    const mintB = new _web.PublicKey(tokenSwapData.mintB);\n    const tokenProgramId = new _web.PublicKey(tokenSwapData.tokenProgramId);\n    const tradeFeeNumerator = Numberu64.fromBuffer(tokenSwapData.tradeFeeNumerator);\n    const tradeFeeDenominator = Numberu64.fromBuffer(tokenSwapData.tradeFeeDenominator);\n    const ownerTradeFeeNumerator = Numberu64.fromBuffer(tokenSwapData.ownerTradeFeeNumerator);\n    const ownerTradeFeeDenominator = Numberu64.fromBuffer(tokenSwapData.ownerTradeFeeDenominator);\n    const ownerWithdrawFeeNumerator = Numberu64.fromBuffer(tokenSwapData.ownerWithdrawFeeNumerator);\n    const ownerWithdrawFeeDenominator = Numberu64.fromBuffer(tokenSwapData.ownerWithdrawFeeDenominator);\n    const hostFeeNumerator = Numberu64.fromBuffer(tokenSwapData.hostFeeNumerator);\n    const hostFeeDenominator = Numberu64.fromBuffer(tokenSwapData.hostFeeDenominator);\n    const curveType = tokenSwapData.curveType;\n    return new TokenSwap(connection, address, programId, tokenProgramId, poolToken, feeAccount, authority, tokenAccountA, tokenAccountB, mintA, mintB, tradeFeeNumerator, tradeFeeDenominator, ownerTradeFeeNumerator, ownerTradeFeeDenominator, ownerWithdrawFeeNumerator, ownerWithdrawFeeDenominator, hostFeeNumerator, hostFeeDenominator, curveType, payer);\n  }\n\n  static async loadTokenFarm(connection, address, programId) {\n    const data = await (0, _account.loadAccount)(connection, address, programId);\n    const tokenSwapData = TokenFarmLayout.decode(data);\n\n    if (!tokenSwapData.isInitialized) {\n      throw new Error(`未初始化`);\n    }\n\n    const [authority] = await _web.PublicKey.findProgramAddress([address.toBuffer()], programId);\n    let poolInfo = {};\n    poolInfo['authority'] = authority;\n    poolInfo['tradeFeeNumerator'] = Numberu64.fromBuffer(tokenSwapData.tradeFeeNumerator);\n    poolInfo['ownerTradeFeeNumerator'] = Numberu64.fromBuffer(tokenSwapData.ownerTradeFeeNumerator);\n    poolInfo['tradeFeeDenominator'] = Numberu64.fromBuffer(tokenSwapData.tradeFeeDenominator);\n    poolInfo['ownerTradeFeeDenominator'] = Numberu64.fromBuffer(tokenSwapData.ownerTradeFeeDenominator);\n    poolInfo['ownerWithdrawFeeNumerator'] = Numberu64.fromBuffer(tokenSwapData.ownerWithdrawFeeNumerator);\n    poolInfo['ownerWithdrawFeeDenominator'] = Numberu64.fromBuffer(tokenSwapData.ownerWithdrawFeeDenominator);\n    poolInfo['hostFeeNumerator'] = Numberu64.fromBuffer(tokenSwapData.hostFeeNumerator);\n    poolInfo['hostFeeDenominator'] = Numberu64.fromBuffer(tokenSwapData.hostFeeDenominator);\n    poolInfo['nonce'] = tokenSwapData.nonce;\n    poolInfo['token_program_id'] = new _web.PublicKey(tokenSwapData.tokenProgramId);\n    poolInfo['pool_farm_address'] = new _web.PublicKey(tokenSwapData.poolFarmAddress);\n    poolInfo['pool_lp_address'] = new _web.PublicKey(tokenSwapData.poolLpAddress);\n    poolInfo['pool_fee_lp_address'] = new _web.PublicKey(tokenSwapData.poolFeeLpAddress);\n    poolInfo['last_update'] = Numberu64.fromBuffer(tokenSwapData.lastUpdate);\n    poolInfo['reward_per_second'] = Numberu64.fromBuffer(tokenSwapData.rewardPerSecond);\n    poolInfo['reward_per_share'] = Numberu128.fromBuffer(tokenSwapData.rewardPerShare);\n    poolInfo['total_supply'] = Numberu64.fromBuffer(tokenSwapData.totalSupply);\n    poolInfo['ray_per_share'] = Numberu128.fromBuffer(tokenSwapData.rayPerShare);\n    poolInfo['other_per_share'] = Numberu128.fromBuffer(tokenSwapData.otherPerShare);\n    poolInfo['ray_total_supply'] = Numberu64.fromBuffer(tokenSwapData.rayTotalSupply);\n    poolInfo['pool_ray_address'] = new _web.PublicKey(tokenSwapData.poolRayAddress);\n    poolInfo['pool_id'] = new _web.PublicKey(tokenSwapData.poolId);\n    poolInfo['pool_user_info'] = new _web.PublicKey(tokenSwapData.poolUserInfo);\n    poolInfo['pool_other_address'] = new _web.PublicKey(tokenSwapData.poolOtherAddress);\n    return poolInfo;\n  }\n\n  static async loadTokenFarmUser(connection, address, programId) {\n    const data = await (0, _account.loadAccount)(connection, address, programId);\n    const userData = TokenFarmUserLayout.decode(data);\n\n    if (!userData.isInitialized) {\n      throw new Error(`未初始化`);\n    }\n\n    let userInfo = {};\n    userInfo['amount'] = Numberu64.fromBuffer(userData.amount);\n    userInfo['pool_id'] = new _web.PublicKey(userData.poolId);\n    userInfo['reward_debt'] = Numberu64.fromBuffer(userData.rewardDebt);\n    userInfo['ray_debt'] = Numberu64.fromBuffer(userData.rayDebt);\n    userInfo['other_debt'] = Numberu64.fromBuffer(userData.rayDebt);\n    return userInfo;\n  }\n\n  static async loadRaydiumFarmUser(connection, address, programId) {\n    const data = await (0, _account.loadAccount)(connection, address, programId);\n    const userData = TokenRayUserLayout.decode(data);\n\n    if (!userData.isInitialized) {\n      throw new Error(`未初始化`);\n    }\n\n    let userInfo = {};\n    userInfo['amount'] = Numberu64.fromBuffer(userData.amount);\n    userInfo['pool_id'] = new _web.PublicKey(userData.poolId);\n    userInfo['reward_debt'] = Numberu64.fromBuffer(userData.rewardDebt);\n    userInfo['ray_debt'] = Numberu64.fromBuffer(userData.rayDebt);\n    return userInfo;\n  }\n  /**\n   * Create a new Token Swap\n   *\n   * @param connection The connection to use\n   * @param payer Pays for the transaction\n   * @param tokenSwapAccount The token swap account\n   * @param authority The authority over the swap and accounts\n   * @param nonce The nonce used to generate the authority\n   * @param tokenAccountA: The token swap's Token A account\n   * @param tokenAccountB: The token swap's Token B account\n   * @param poolToken The pool token\n   * @param tokenAccountPool The token swap's pool token account\n   * @param tokenProgramId The program ID of the token program\n   * @param swapProgramId The program ID of the token-swap program\n   * @param feeNumerator Numerator of the fee ratio\n   * @param feeDenominator Denominator of the fee ratio\n   * @return Token object for the newly minted token, Public key of the account holding the total supply of new tokens\n   */\n\n\n  static async createTokenFarm(raydium_stake_program_id, connection, payer, tokenProgramId, farm_info, authority, pool_farm_address, pool_lp_address, //\n  pool_fee_lp_address, //\n  pool_ray_address, //\n  pool_id, //\n  pool_user_info, //\n  pool_other_address, //\n  swapProgramId, nonce, tradeFeeNumerator, tradeFeeDenominator, ownerTradeFeeNumerator, ownerTradeFeeDenominator, ownerWithdrawFeeNumerator, ownerWithdrawFeeDenominator, hostFeeNumerator, hostFeeDenominator, reward_per_second, user_len) {\n    let transaction; // Allocate memory for the account\n\n    const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(connection);\n    transaction = new _web.Transaction();\n    transaction.add(_web.SystemProgram.createAccount({\n      fromPubkey: payer.publicKey,\n      newAccountPubkey: farm_info.publicKey,\n      lamports: balanceNeeded,\n      space: TokenFarmLayout.span,\n      programId: swapProgramId\n    }));\n    let signers = [];\n\n    if (!pool_id) {\n      let pool = new _web.Account();\n      pool_id = pool.publicKey;\n      signers.push(pool);\n      transaction.add(_web.SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: pool_id,\n        lamports: balanceNeeded,\n        space: TokenFarmLayout.span,\n        programId: swapProgramId\n      }));\n    }\n\n    if (!pool_other_address) {\n      let poa = new _web.Account();\n      pool_other_address = poa.publicKey;\n      signers.push(poa);\n      transaction.add(_web.SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: pool_other_address,\n        lamports: balanceNeeded,\n        space: _splToken.AccountLayout.span,\n        programId: swapProgramId\n      }));\n    }\n\n    if (!pool_user_info) {\n      let pui = new _web.Account();\n      pool_user_info = pui.publicKey;\n      signers.push(pui);\n      transaction.add(_web.SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: pool_user_info,\n        lamports: balanceNeeded,\n        space: user_len,\n        programId: raydium_stake_program_id\n      }));\n    }\n\n    const instruction = TokenSwap.createInitFarmInstruction(tokenProgramId, // 通用token 转账 的地址\n    farm_info, //\n    authority, //\n    pool_farm_address, pool_lp_address, //\n    pool_fee_lp_address, //\n    pool_ray_address, //\n    pool_id, //\n    pool_user_info, //\n    pool_other_address, swapProgramId, nonce, tradeFeeNumerator, tradeFeeDenominator, ownerTradeFeeNumerator, ownerTradeFeeDenominator, ownerWithdrawFeeNumerator, ownerWithdrawFeeDenominator, hostFeeNumerator, hostFeeDenominator, reward_per_second);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('createAccount and InitializeFarm', connection, transaction, payer, farm_info, ...signers);\n    console.log(\"result:\", result);\n  }\n\n  static async updateTokenFarm(raydium_stake_program_id, connection, payer, tokenProgramId, farm_info, authority, pool_farm_address, pool_lp_address, //\n  pool_fee_lp_address, //\n  pool_ray_address, //\n  pool_id, //\n  pool_user_info, //\n  pool_other_address, //\n  swapProgramId, nonce, tradeFeeNumerator, tradeFeeDenominator, ownerTradeFeeNumerator, ownerTradeFeeDenominator, ownerWithdrawFeeNumerator, ownerWithdrawFeeDenominator, hostFeeNumerator, hostFeeDenominator, reward_per_second) {\n    let transaction = new _web.Transaction();\n    let signers = [];\n    const instruction = TokenSwap.updateFarmInstruction(tokenProgramId, // 通用token 转账 的地址\n    farm_info, //\n    authority, //\n    pool_farm_address, pool_lp_address, //\n    pool_fee_lp_address, //\n    pool_ray_address, //\n    pool_id, //\n    pool_user_info, //\n    pool_other_address, swapProgramId, nonce, tradeFeeNumerator, tradeFeeDenominator, ownerTradeFeeNumerator, ownerTradeFeeDenominator, ownerWithdrawFeeNumerator, ownerWithdrawFeeDenominator, hostFeeNumerator, hostFeeDenominator, reward_per_second);\n    console.log('日产币量:', (reward_per_second * 86400 / 1e9).toFixed(0), 'tradeFeeNumerator', tradeFeeNumerator);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('Update Farm', connection, transaction, payer, ...signers);\n    console.log(\"result:\", result);\n  }\n\n  static async depositFarm(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, amount) {\n    let transaction = new _web.Transaction();\n    const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(connection); // Todo 判断balanceNeeded是否存在\n\n    transaction.add(_web.SystemProgram.createAccount({\n      fromPubkey: payer.publicKey,\n      newAccountPubkey: user_info.publicKey,\n      lamports: balanceNeeded,\n      space: TokenFarmUserLayout.span,\n      programId: swapProgramId\n    }));\n    const instruction = TokenSwap.depositFarmInstruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    user_transfer_authority_info.publicKey, // 委托方地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('deposit', connection, transaction, payer, user_transfer_authority_info, // Todo 判断balanceNeeded是否存在,有的话不用传\n    user_info);\n    console.log(\"result:\", result);\n  }\n\n  static async depositFarmV2(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, farm_fee_lp_address, amount) {\n    let transaction = new _web.Transaction(); // const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(\n    //     connection,\n    // );\n    // // Todo 判断balanceNeeded是否存在\n    // transaction.add(\n    //     SystemProgram.createAccount({\n    //         fromPubkey: payer.publicKey,\n    //         newAccountPubkey: user_info.publicKey,\n    //         lamports: balanceNeeded,\n    //         space: TokenFarmUserLayout.span,\n    //         programId: swapProgramId,\n    //     }),\n    // );\n\n    const instruction = TokenSwap.depositFarmV2Instruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    user_transfer_authority_info.publicKey, // 委托方地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, farm_fee_lp_address, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('deposit', connection, transaction, payer, user_transfer_authority_info // Todo 判断balanceNeeded是否存在,有的话不用传\n    // user_info,\n    );\n    console.log(\"result:\", result);\n  }\n\n  static async depositRaydium(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, amount) {\n    let transaction = new _web.Transaction();\n    const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(connection); // Todo 判断balanceNeeded是否存在\n\n    transaction.add(_web.SystemProgram.createAccount({\n      fromPubkey: payer.publicKey,\n      newAccountPubkey: user_info.publicKey,\n      lamports: balanceNeeded,\n      space: TokenFarmUserLayout.span,\n      programId: swapProgramId\n    }));\n    const instruction = TokenSwap.depositRaydiumInstruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    user_transfer_authority_info.publicKey, // 委托方地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('deposit', connection, transaction, payer, user_transfer_authority_info, // Todo 判断balanceNeeded是否存在,有的话不用传\n    user_info);\n    console.log(\"result:\", result);\n  }\n\n  static async depositRaydiumV4(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, pool_other_address, farm_other_address, user_other_address, amount) {\n    let transaction = new _web.Transaction(); // const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(\n    //     connection,\n    // );\n    // // Todo 判断balanceNeeded是否存在\n    // transaction.add(\n    //     SystemProgram.createAccount({\n    //         fromPubkey: payer.publicKey,\n    //         newAccountPubkey: user_info.publicKey,\n    //         lamports: balanceNeeded,\n    //         space: TokenFarmUserLayout.span,\n    //         programId: swapProgramId,\n    //     }),\n    // );\n\n    const instruction = TokenSwap.depositRaydiumV4Instruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    user_transfer_authority_info.publicKey, // 委托方地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, pool_other_address, farm_other_address, user_other_address, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('deposit', connection, transaction, payer, user_transfer_authority_info // Todo 判断balanceNeeded是否存在,有的话不用传\n    // user_info,\n    );\n    console.log(\"result:\", result);\n  }\n\n  static async withdrawRaydiumV4(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, pool_other_address, farm_other_address, user_other_address, amount) {\n    let transaction = new _web.Transaction();\n    const instruction = TokenSwap.withdrawRaydiumV4Instruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, pool_other_address, farm_other_address, user_other_address, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('withdraw', connection, transaction, payer);\n    console.log(\"result:\", result);\n  }\n\n  static async withdrawRaydium(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, amount) {\n    let transaction = new _web.Transaction();\n    const instruction = TokenSwap.withdrawRaydiumInstruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('withdraw', connection, transaction, payer // user_info,\n    );\n    console.log(\"result:\", result);\n  }\n\n  static async harvestFarmV2(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, farm_fee_lp_address, amount) {\n    let transaction = new _web.Transaction();\n    const instruction = TokenSwap.depositFarmV2Instruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    user_transfer_authority_info.publicKey, // 委托方地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, farm_fee_lp_address, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('deposit', connection, transaction, payer, user_transfer_authority_info);\n    console.log(\"result:\", result);\n  }\n\n  static async withdrawFarmV2(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, farm_fee_lp_address, amount) {\n    let transaction = new _web.Transaction();\n    const instruction = TokenSwap.withdrawFarmV2Instruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, pool_ray_account, user_ray_account, farm_program_id, farm_pool_id, farm_authority_info, pool_user_info, farm_farm_address, farm_lp_address, farm_fee_lp_address, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('withdraw', connection, transaction, payer);\n    console.log(\"result:\", result);\n  }\n\n  static async withdrawFarm(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, amount) {\n    let transaction = new _web.Transaction();\n    const instruction = TokenSwap.withdrawFarmInstruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('deposit', connection, transaction, payer);\n    console.log(\"result:\", result);\n  }\n\n  static async harvestFarm(connection, payer, farm_info, authority_info, // 矿池的owner账户\n  user_lp_address, // 用户lp的地址\n  user_farm_address, // 用户接收farm奖励的地址\n  user_info, // 用户详情\n  pool_lp_address, // 矿池接收lp的地址\n  user_transfer_authority_info, // 委托方地址\n  tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, amount) {\n    let transaction = new _web.Transaction();\n    const instruction = TokenSwap.depositFarmInstruction(farm_info, authority_info, // 矿池的owner账户\n    user_lp_address, // 用户接收farm奖励的地址\n    user_farm_address, // 用户接收farm奖励的地址\n    user_info.publicKey, // 矿池接收lp的地址\n    pool_lp_address, // 矿池接收lp的地址\n    user_transfer_authority_info.publicKey, // 委托方地址\n    tokenProgramId, swapProgramId, pool_farm_address, pool_fee_lp_account, amount);\n    transaction.add(instruction);\n    let result = await (0, _sendAndConfirmTransaction.sendAndConfirmTransaction)('harvest', connection, transaction, payer, user_transfer_authority_info);\n    console.log(\"result:\", result);\n  }\n\n}\n\nexports.TokenSwap = TokenSwap;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "token-swap.js"
      ],
      "names": [
        "TOKEN_SWAP_PROGRAM_ID",
        "PublicKey",
        "Numberu64",
        "BN",
        "toBuffer",
        "a",
        "toArray",
        "reverse",
        "b",
        "Buffer",
        "from",
        "length",
        "zeroPad",
        "alloc",
        "copy",
        "fromBuffer",
        "buffer",
        "map",
        "i",
        "toString",
        "slice",
        "join",
        "Numberu128",
        "TokenFarmLayout",
        "BufferLayout",
        "struct",
        "u8",
        "Layout",
        "publicKey",
        "uint64",
        "uint128",
        "TokenFarmUserLayout",
        "TokenRayUserLayout",
        "TokenRayUserV4Layout",
        "CurveType",
        "Object",
        "freeze",
        "ConstantProduct",
        "ConstantPrice",
        "Offset",
        "TokenSwap",
        "constructor",
        "connection",
        "payer",
        "getMinBalanceRentForExemptTokenSwap",
        "getMinimumBalanceForRentExemption",
        "span",
        "createInitFarmInstruction",
        "tokenProgramId",
        "farm_info",
        "authority",
        "pool_farm_address",
        "pool_lp_address",
        "pool_fee_lp_address",
        "pool_ray_address",
        "pool_id",
        "pool_user_info",
        "pool_other_address",
        "swapProgramId",
        "nonce",
        "tradeFeeNumerator",
        "tradeFeeDenominator",
        "ownerTradeFeeNumerator",
        "ownerTradeFeeDenominator",
        "ownerWithdrawFeeNumerator",
        "ownerWithdrawFeeDenominator",
        "hostFeeNumerator",
        "hostFeeDenominator",
        "reward_per_second",
        "clock",
        "keys",
        "pubkey",
        "isSigner",
        "isWritable",
        "commandDataLayout",
        "nu64",
        "data",
        "encodeLength",
        "encode",
        "instruction",
        "TransactionInstruction",
        "programId",
        "updateFarmInstruction",
        "depositFarmInstruction",
        "authority_info",
        "user_lp_address",
        "user_farm_address",
        "user_info",
        "user_transfer_authority_info",
        "pool_fee_lp_account",
        "amount",
        "depositFarmV2Instruction",
        "pool_ray_account",
        "user_ray_account",
        "farm_program_id",
        "farm_pool_id",
        "farm_authority_info",
        "farm_farm_address",
        "farm_lp_address",
        "farm_fee_lp_address",
        "depositRaydiumInstruction",
        "depositRaydiumV4Instruction",
        "farm_other_address",
        "user_other_address",
        "withdrawRaydiumV4Instruction",
        "withdrawRaydiumInstruction",
        "withdrawFarmV2Instruction",
        "withdrawFarmInstruction",
        "loadTokenSwap",
        "address",
        "tokenSwapData",
        "TokenSwapLayout",
        "decode",
        "isInitialized",
        "Error",
        "findProgramAddress",
        "poolToken",
        "tokenPool",
        "feeAccount",
        "tokenAccountA",
        "tokenAccountB",
        "mintA",
        "mintB",
        "curveType",
        "loadTokenFarm",
        "poolInfo",
        "poolFarmAddress",
        "poolLpAddress",
        "poolFeeLpAddress",
        "lastUpdate",
        "rewardPerSecond",
        "rewardPerShare",
        "totalSupply",
        "rayPerShare",
        "otherPerShare",
        "rayTotalSupply",
        "poolRayAddress",
        "poolId",
        "poolUserInfo",
        "poolOtherAddress",
        "loadTokenFarmUser",
        "userData",
        "userInfo",
        "rewardDebt",
        "rayDebt",
        "loadRaydiumFarmUser",
        "createTokenFarm",
        "raydium_stake_program_id",
        "user_len",
        "transaction",
        "balanceNeeded",
        "Transaction",
        "add",
        "SystemProgram",
        "createAccount",
        "fromPubkey",
        "newAccountPubkey",
        "lamports",
        "space",
        "signers",
        "pool",
        "Account",
        "push",
        "poa",
        "AccountLayout",
        "pui",
        "result",
        "console",
        "log",
        "updateTokenFarm",
        "toFixed",
        "depositFarm",
        "depositFarmV2",
        "depositRaydium",
        "depositRaydiumV4",
        "withdrawRaydiumV4",
        "withdrawRaydium",
        "harvestFarmV2",
        "withdrawFarmV2",
        "withdrawFarm",
        "harvestFarm"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/",
      "sourcesContent": [
        "/**\n * @flow\n */\n\nimport assert from 'assert';\nimport BN from 'bn.js';\nimport { Buffer } from 'buffer';\nimport * as BufferLayout from 'buffer-layout';\nimport type { Connection, TransactionSignature } from '@solana/web3.js';\nimport {\n  Account,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n} from '@solana/web3.js';\n\nimport * as Layout from './layout';\nimport { sendAndConfirmTransaction } from './util/send-and-confirm-transaction';\nimport { loadAccount } from './util/account';\nimport { AccountLayout, Token, TOKEN_PROGRAM_ID } from '@solana/spl-token';\nexport const TOKEN_SWAP_PROGRAM_ID: PublicKey = new PublicKey(\n  // 'HTpjeN1FocdopyJxwFJzBsQ5edeDVXkNB3ssePWmhfyj',\n  'DgUj4FuTYjFVTK6yT73MuGNS3wV3FPXa4Kp3Mqw87a77',\n  // '51MP7fEUh9aexfZsRkHwQdSa7zFxVdPjYW9aRMUZ7Ygb'\n  // 'C9THsxkiKNj3TFNSPDsSzCBGmB3Zvjn1vaAUDH6YvYhv',\n);\n//\n\n/**\n * Some amount of tokens\n */\nexport class Numberu64 extends BN {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer(): typeof Buffer {\n    const a = super.toArray().reverse();\n    const b = Buffer.from(a);\n    if (b.length === 8) {\n      return b;\n    }\n    assert(b.length < 8, 'Numberu64 too large');\n\n    const zeroPad = Buffer.alloc(8);\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n\n  /**\n   * Construct a Numberu64 from Buffer representation\n   */\n  static fromBuffer(buffer: typeof Buffer): Numberu64 {\n    assert(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    return new Numberu64(\n      [...buffer]\n        .reverse()\n        .map(i => `00${i.toString(16)}`.slice(-2))\n        .join(''),\n      16,\n    );\n  }\n}\n\n/**\n * Some amount of tokens\n */\nexport class Numberu128 extends BN {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer(): typeof Buffer {\n    const a = super.toArray().reverse();\n    const b = Buffer.from(a);\n    if (b.length === 16) {\n      return b;\n    }\n    assert(b.length < 16, 'Numberu64 too large');\n\n    const zeroPad = Buffer.alloc(16);\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n\n  /**\n   * Construct a Numberu64 from Buffer representation\n   */\n  static fromBuffer(buffer: typeof Buffer): Numberu64 {\n    assert(buffer.length === 16, `Invalid buffer length: ${buffer.length}`);\n    return new Numberu64(\n      [...buffer]\n        .reverse()\n        .map(i => `00${i.toString(16)}`.slice(-2))\n        .join(''),\n      16,\n    );\n  }\n}\n\n/**\n * // farm 结构体\n * @private\n */\nexport const TokenFarmLayout: typeof BufferLayout.Structure = BufferLayout.struct(\n  [\n    BufferLayout.u8('isInitialized'), // 1-2\n    BufferLayout.u8('nonce'), // 1\n    Layout.publicKey('tokenProgramId'),\n    Layout.publicKey('poolFarmAddress'), // 矿池 farm地址\n    Layout.publicKey('poolLpAddress'), // 矿池 lp地址\n    Layout.publicKey('poolFeeLpAddress'), // 矿池 lp手续费地址\n    Layout.uint64('tradeFeeNumerator'),\n    Layout.uint64('tradeFeeDenominator'),\n    Layout.uint64('ownerTradeFeeNumerator'),\n    Layout.uint64('ownerTradeFeeDenominator'),\n    Layout.uint64('ownerWithdrawFeeNumerator'),\n    Layout.uint64('ownerWithdrawFeeDenominator'),\n    Layout.uint64('hostFeeNumerator'),\n    Layout.uint64('hostFeeDenominator'),\n    Layout.uint64('lastUpdate'), // 最后一次slot\n    Layout.uint64('rewardPerSecond'), // 每slot奖励\n    Layout.uint128('rewardPerShare'),// 每个份额奖励\n    Layout.uint64('totalSupply'), // 总质押量\n    Layout.uint128('rayPerShare'), // ray 每份额奖励\n    Layout.uint64('rayTotalSupply'), // 总质押量\n    Layout.uint128('otherPerShare'), // other 每份额奖励\n    Layout.uint64('otherTotalSupply'), // 总质押量\n    Layout.publicKey('owner'), // owner\n    Layout.publicKey('poolRayAddress'), // owner\n    Layout.publicKey('poolId'), // owner\n    Layout.publicKey('poolUserInfo'), // owner\n    Layout.publicKey('poolOtherAddress'), // owner\n  ],\n);\n\n/**\n * // farm user 结构体\n * @private\n */\nexport const TokenFarmUserLayout: typeof BufferLayout.Structure = BufferLayout.struct(\n  [\n      BufferLayout.u8('isInitialized'), // 1-2\n      Layout.publicKey('poolId'), //\n      Layout.uint64('amount'), // 质押金额\n      Layout.uint64('rewardDebt'),// 理论已领取奖励\n      Layout.uint64('rayDebt'),// 理论ray已领取奖励\n      Layout.uint64('otherDebt'),// 理论ray已领取奖励\n      Layout.publicKey('userLpAddress'),// 理论ray已领取奖励\n  ],\n);\n\n/**\n * // farm user 结构体\n * @private\n */\nexport const TokenRayUserLayout: typeof BufferLayout.Structure = BufferLayout.struct(\n  [\n    Layout.uint64('state'), // 8 + 32 + 32 + 8 + 8\n    Layout.publicKey('poolId'),\n    Layout.publicKey('stakerOwner'),\n    Layout.uint64('depositBalance'),\n    Layout.uint64('rewardDebt')\n  ],\n);\n\n/**\n * // farm user 结构体\n * @private\n */\nexport const TokenRayUserV4Layout: typeof BufferLayout.Structure = BufferLayout.struct(\n  [\n    Layout.uint64('state'),\n    Layout.publicKey('poolId'),\n    Layout.publicKey('stakerOwner'),\n    Layout.uint64('depositBalance'),\n    Layout.uint64('rewardDebt'),\n    Layout.uint64('rewardDebtB')\n  ],\n);\n\nexport const CurveType = Object.freeze({\n  ConstantProduct: 0, // Constant product curve, Uniswap-style\n  ConstantPrice: 1, // Constant price curve, always X amount of A token for 1 B token, where X is defined at init\n  Offset: 3, // Offset curve, like Uniswap, but with an additional offset on the token B side\n});\n\n/**\n * A program to exchange tokens against a pool of liquidity\n */\nexport class TokenSwap {\n  /**\n   * @private\n   */\n  connection: Connection;\n\n  /**\n   * Program Identifier for the Token program\n   */\n  tokenProgramId: PublicKey;\n\n  /**\n   * The public key for the fee account receiving trade and/or withdrawal fees\n   */\n  feeAccount: PublicKey;\n\n  /**\n   * Authority\n   */\n  authority: PublicKey;\n\n  /**\n   * Fee payer\n   */\n  payer: Account;\n\n  /**\n   * Create a Token object attached to the specific token\n   *\n   * @param connection The connection to use\n   * @param tokenSwap The token swap account\n   * @param swapProgramId The program ID of the token-swap program\n   * @param tokenProgramId The program ID of the token program\n   * @param poolToken The pool token\n   * @param authority The authority over the swap and accounts\n   * @param tokenAccountA: The token swap's Token A account\n   * @param tokenAccountB: The token swap's Token B account\n   * @param payer Pays for the transaction\n   */\n  constructor(\n    connection: Connection,\n    payer: Account,\n  ) {\n  }\n\n  /**\n   * Get the minimum balance for the token swap account to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptTokenSwap(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      TokenFarmLayout.span,\n    );\n  }\n\n  static createInitFarmInstruction(\n    tokenProgramId: PublicKey, // 通用token 转账 的地址\n    farm_info: Account, //\n    authority: PublicKey, //\n    pool_farm_address: PublicKey, //\n    pool_lp_address: PublicKey, //\n    pool_fee_lp_address: PublicKey, //\n    pool_ray_address: PublicKey, //\n    pool_id: PublicKey, //\n    pool_user_info: PublicKey, //\n    pool_other_address:PublicKey,//\n    swapProgramId: PublicKey, // swap-farm 程序地址\n    nonce: number,\n    tradeFeeNumerator: number,\n    tradeFeeDenominator: number,\n    ownerTradeFeeNumerator: number,\n    ownerTradeFeeDenominator: number,\n    ownerWithdrawFeeNumerator: number,\n    ownerWithdrawFeeDenominator: number,\n    hostFeeNumerator: number,\n    hostFeeDenominator: number,\n    reward_per_second: number,\n  ): TransactionInstruction {\n    // 时间合约地址 记录区块的时间信息 slot\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },// 通用token地址\n      { pubkey: farm_info.publicKey, isSigner: false, isWritable: true }, // farm 矿池地址\n      { pubkey: authority, isSigner: false, isWritable: false }, // 矿池auth\n      { pubkey: pool_farm_address, isSigner: false, isWritable: false },// 矿池对应的farm接收地址\n      { pubkey: pool_lp_address, isSigner: false, isWritable: false },// 矿池对应的lp接收地址\n      { pubkey: pool_fee_lp_address, isSigner: false, isWritable: false },// 手续费地址\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_ray_address, isSigner: false, isWritable: false },\n      { pubkey: pool_id, isSigner: false, isWritable: false },\n      { pubkey: pool_user_info, isSigner: false, isWritable: false },\n      { pubkey: pool_other_address, isSigner: false, isWritable: false },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('nonce'),\n      BufferLayout.nu64('tradeFeeNumerator'),\n      BufferLayout.nu64('tradeFeeDenominator'),\n      BufferLayout.nu64('ownerTradeFeeNumerator'),\n      BufferLayout.nu64('ownerTradeFeeDenominator'),\n      BufferLayout.nu64('ownerWithdrawFeeNumerator'),\n      BufferLayout.nu64('ownerWithdrawFeeDenominator'),\n      BufferLayout.nu64('hostFeeNumerator'),\n      BufferLayout.nu64('hostFeeDenominator'),\n      BufferLayout.nu64('reward_per_second'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 0, // InitializeFarm instruction\n          nonce,\n          tradeFeeNumerator,\n          tradeFeeDenominator,\n          ownerTradeFeeNumerator,\n          ownerTradeFeeDenominator,\n          ownerWithdrawFeeNumerator,\n          ownerWithdrawFeeDenominator,\n          hostFeeNumerator,\n          hostFeeDenominator,\n          reward_per_second,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static updateFarmInstruction(\n    tokenProgramId: PublicKey, // 通用token 转账 的地址\n    farm_info: Account, //\n    authority: PublicKey, //\n    pool_farm_address: PublicKey, //\n    pool_lp_address: PublicKey, //\n    pool_fee_lp_address: PublicKey, //\n    pool_ray_address: PublicKey, //\n    pool_id: PublicKey, //\n    pool_user_info: PublicKey, //\n    pool_other_address:PublicKey,//\n    swapProgramId: PublicKey, // swap-farm 程序地址\n    nonce: number,\n    tradeFeeNumerator: number,\n    tradeFeeDenominator: number,\n    ownerTradeFeeNumerator: number,\n    ownerTradeFeeDenominator: number,\n    ownerWithdrawFeeNumerator: number,\n    ownerWithdrawFeeDenominator: number,\n    hostFeeNumerator: number,\n    hostFeeDenominator: number,\n    reward_per_second: number,\n  ): TransactionInstruction {\n    // 时间合约地址 记录区块的时间信息 slot\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },// 通用token地址\n      { pubkey: farm_info, isSigner: false, isWritable: true }, // farm 矿池地址\n      { pubkey: authority, isSigner: false, isWritable: false }, // 矿池auth\n      { pubkey: pool_farm_address, isSigner: false, isWritable: false },// 矿池对应的farm接收地址\n      { pubkey: pool_lp_address, isSigner: false, isWritable: false },// 矿池对应的lp接收地址\n      { pubkey: pool_fee_lp_address, isSigner: false, isWritable: false },// 手续费地址\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_ray_address, isSigner: false, isWritable: false },\n      { pubkey: pool_id, isSigner: false, isWritable: false },\n      { pubkey: pool_user_info, isSigner: false, isWritable: false },\n      { pubkey: pool_other_address, isSigner: false, isWritable: false },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('nonce'),\n      BufferLayout.nu64('tradeFeeNumerator'),\n      BufferLayout.nu64('tradeFeeDenominator'),\n      BufferLayout.nu64('ownerTradeFeeNumerator'),\n      BufferLayout.nu64('ownerTradeFeeDenominator'),\n      BufferLayout.nu64('ownerWithdrawFeeNumerator'),\n      BufferLayout.nu64('ownerWithdrawFeeDenominator'),\n      BufferLayout.nu64('hostFeeNumerator'),\n      BufferLayout.nu64('hostFeeDenominator'),\n      BufferLayout.nu64('reward_per_second'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 0, // InitializeFarm instruction\n          nonce,\n          tradeFeeNumerator,\n          tradeFeeDenominator,\n          ownerTradeFeeNumerator,\n          ownerTradeFeeDenominator,\n          ownerWithdrawFeeNumerator,\n          ownerWithdrawFeeDenominator,\n          hostFeeNumerator,\n          hostFeeDenominator,\n          reward_per_second,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static depositFarmInstruction(\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户接收farm奖励的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: PublicKey,// 矿池接收lp的地址\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    user_transfer_authority_info: PublicKey,// 委托方地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    amount: number,\n  ): TransactionInstruction {\n    // 时间合约地址\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: farm_info, isSigner: false, isWritable: true }, // 矿池信息\n      { pubkey: authority_info, isSigner: false, isWritable: true },// 矿池代币owner\n      { pubkey: user_info, isSigner: false, isWritable: true },\n      { pubkey: user_farm_address, isSigner: false, isWritable: true },\n      { pubkey: user_lp_address, isSigner: false, isWritable: true },\n      { pubkey: pool_lp_address, isSigner: false, isWritable: true },\n      { pubkey: user_transfer_authority_info, isSigner: true, isWritable: true },\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n      { pubkey: pool_farm_address, isSigner: false, isWritable: true },\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_fee_lp_account, isSigner: false, isWritable: true },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('amount'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 7, // Deposit instruction\n          amount,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static depositFarmV2Instruction(\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户接收farm奖励的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: PublicKey,// 矿池接收lp的地址\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    user_transfer_authority_info: PublicKey,// 委托方地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    farm_fee_lp_address: PublicKey,\n    amount: number,\n  ): TransactionInstruction {\n    // 时间合约地址\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: farm_info, isSigner: false, isWritable: true }, // 矿池信息\n      { pubkey: authority_info, isSigner: false, isWritable: true },// 矿池代币owner\n      { pubkey: user_info, isSigner: false, isWritable: true },\n      { pubkey: user_farm_address, isSigner: false, isWritable: true },\n      { pubkey: user_lp_address, isSigner: false, isWritable: true },\n      { pubkey: pool_lp_address, isSigner: false, isWritable: true },\n      { pubkey: user_transfer_authority_info, isSigner: true, isWritable: true },\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n      { pubkey: pool_farm_address, isSigner: false, isWritable: true },\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_fee_lp_account, isSigner: false, isWritable: true },\n      { pubkey: pool_ray_account, isSigner: false, isWritable: true },\n      { pubkey: user_ray_account, isSigner: false, isWritable: true },\n      { pubkey: farm_program_id, isSigner: false, isWritable: true },\n      { pubkey: farm_pool_id, isSigner: false, isWritable: true },\n      { pubkey: farm_authority_info, isSigner: false, isWritable: true },\n      { pubkey: pool_user_info, isSigner: false, isWritable: true },\n      { pubkey: farm_farm_address, isSigner: false, isWritable: true },\n      { pubkey: farm_lp_address, isSigner: false, isWritable: true },\n      { pubkey: farm_fee_lp_address, isSigner: false, isWritable: true },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('amount'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 11, // Deposit V2 instruction\n          amount,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static depositRaydiumInstruction(\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户接收farm奖励的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: PublicKey,// 矿池接收lp的地址\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    user_transfer_authority_info: PublicKey,// 委托方地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    amount: number,\n  ): TransactionInstruction {\n    // 时间合约地址\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: farm_info, isSigner: false, isWritable: true }, // 矿池信息\n      { pubkey: authority_info, isSigner: false, isWritable: true },// 矿池代币owner\n      { pubkey: user_info, isSigner: false, isWritable: true },\n      { pubkey: user_farm_address, isSigner: false, isWritable: true },\n      { pubkey: user_lp_address, isSigner: false, isWritable: true },\n      { pubkey: pool_lp_address, isSigner: false, isWritable: true },\n      { pubkey: user_transfer_authority_info, isSigner: true, isWritable: true },\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n      { pubkey: pool_farm_address, isSigner: false, isWritable: true },\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_fee_lp_account, isSigner: false, isWritable: true },\n      { pubkey: pool_ray_account, isSigner: false, isWritable: true },\n      { pubkey: user_ray_account, isSigner: false, isWritable: true },\n      { pubkey: farm_authority_info, isSigner: false, isWritable: true },\n      { pubkey: farm_lp_address, isSigner: false, isWritable: true },\n      { pubkey: farm_farm_address, isSigner: false, isWritable: true },\n      { pubkey: pool_user_info, isSigner: false, isWritable: true },\n      { pubkey: farm_pool_id, isSigner: false, isWritable: true },\n      { pubkey: farm_program_id, isSigner: false, isWritable: true },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('amount'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 3, // Deposit Raydium instruction\n          amount,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static depositRaydiumV4Instruction(\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户接收farm奖励的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: PublicKey,// 矿池接收lp的地址\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    user_transfer_authority_info: PublicKey,// 委托方地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    pool_other_address:PublicKey,\n    farm_other_address:PublicKey,\n    user_other_address:PublicKey,\n    amount: number,\n  ): TransactionInstruction {\n    // 时间合约地址\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: farm_info, isSigner: false, isWritable: true }, // 矿池信息\n      { pubkey: authority_info, isSigner: false, isWritable: true },// 矿池代币owner\n      { pubkey: user_info, isSigner: false, isWritable: true },\n      { pubkey: user_farm_address, isSigner: false, isWritable: true },\n      { pubkey: user_lp_address, isSigner: false, isWritable: true },\n      { pubkey: pool_lp_address, isSigner: false, isWritable: true },\n      { pubkey: user_transfer_authority_info, isSigner: true, isWritable: true },\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n      { pubkey: pool_farm_address, isSigner: false, isWritable: true },\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_fee_lp_account, isSigner: false, isWritable: true },\n      { pubkey: pool_ray_account, isSigner: false, isWritable: true },\n      { pubkey: user_ray_account, isSigner: false, isWritable: true },\n      { pubkey: farm_authority_info, isSigner: false, isWritable: true },\n      { pubkey: farm_lp_address, isSigner: false, isWritable: true },\n      { pubkey: farm_farm_address, isSigner: false, isWritable: true },\n      { pubkey: pool_user_info, isSigner: false, isWritable: true },\n      { pubkey: farm_pool_id, isSigner: false, isWritable: true },\n      { pubkey: farm_program_id, isSigner: false, isWritable: true },\n      { pubkey: pool_other_address, isSigner: false, isWritable: true },\n      { pubkey: farm_other_address, isSigner: false, isWritable: true },\n      { pubkey: user_other_address, isSigner: false, isWritable: true },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('amount'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 7, // Deposit Raydium instruction\n          amount,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static withdrawRaydiumV4Instruction(\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户接收farm奖励的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: PublicKey,// 矿池接收lp的地址\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    pool_other_address:PublicKey,\n    farm_other_address:PublicKey,\n    user_other_address:PublicKey,\n    amount: number,\n  ): TransactionInstruction {\n    // 时间合约地址\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: farm_info, isSigner: false, isWritable: true }, // 矿池信息\n      { pubkey: authority_info, isSigner: false, isWritable: true },// 矿池代币owner\n      { pubkey: user_info, isSigner: false, isWritable: true },\n      { pubkey: user_farm_address, isSigner: false, isWritable: true },\n      { pubkey: user_lp_address, isSigner: false, isWritable: true },\n      { pubkey: pool_lp_address, isSigner: false, isWritable: true },\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n      { pubkey: pool_farm_address, isSigner: false, isWritable: true },\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_fee_lp_account, isSigner: false, isWritable: true },\n      { pubkey: pool_ray_account, isSigner: false, isWritable: true },\n      { pubkey: user_ray_account, isSigner: false, isWritable: true },\n      { pubkey: farm_authority_info, isSigner: false, isWritable: true },\n      { pubkey: farm_lp_address, isSigner: false, isWritable: true },\n      { pubkey: farm_farm_address, isSigner: false, isWritable: true },\n      { pubkey: pool_user_info, isSigner: false, isWritable: true },\n      { pubkey: farm_pool_id, isSigner: false, isWritable: true },\n      { pubkey: farm_program_id, isSigner: false, isWritable: true },\n      { pubkey: pool_other_address, isSigner: false, isWritable: true },\n      { pubkey: farm_other_address, isSigner: false, isWritable: true },\n      { pubkey: user_other_address, isSigner: false, isWritable: true },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('amount'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 8, // Withdraw Raydium V4 instruction\n          amount,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static withdrawRaydiumInstruction(\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户接收farm奖励的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: PublicKey,// 矿池接收lp的地址\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    amount: number,\n  ): TransactionInstruction {\n    // 时间合约地址\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: farm_info, isSigner: false, isWritable: true }, // 矿池信息\n      { pubkey: authority_info, isSigner: false, isWritable: true },// 矿池代币owner\n      { pubkey: user_info, isSigner: false, isWritable: true },\n      { pubkey: user_farm_address, isSigner: false, isWritable: true },\n      { pubkey: user_lp_address, isSigner: false, isWritable: true },\n      { pubkey: pool_lp_address, isSigner: false, isWritable: true },\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n      { pubkey: pool_farm_address, isSigner: false, isWritable: true },\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_fee_lp_account, isSigner: false, isWritable: true },\n      { pubkey: pool_ray_account, isSigner: false, isWritable: true },\n      { pubkey: user_ray_account, isSigner: false, isWritable: true },\n      { pubkey: farm_authority_info, isSigner: false, isWritable: true },\n      { pubkey: farm_lp_address, isSigner: false, isWritable: true },\n      { pubkey: farm_farm_address, isSigner: false, isWritable: true },\n      { pubkey: pool_user_info, isSigner: false, isWritable: true },\n      { pubkey: farm_pool_id, isSigner: false, isWritable: true },\n      { pubkey: farm_program_id, isSigner: false, isWritable: true },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('amount'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 4, // Withdraw Raydium instruction\n          amount,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static withdrawFarmV2Instruction(\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户接收farm奖励的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: PublicKey,// 矿池接收lp的地址\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    tokenProgramId: PublicKey,//\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    farm_fee_lp_address: PublicKey,\n    amount: number,\n  ): TransactionInstruction {\n    // 时间合约地址\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: farm_info, isSigner: false, isWritable: true }, // 矿池信息\n      { pubkey: authority_info, isSigner: false, isWritable: true },// 矿池代币owner\n      { pubkey: user_info, isSigner: false, isWritable: true },\n      { pubkey: user_farm_address, isSigner: false, isWritable: true },\n      { pubkey: user_lp_address, isSigner: false, isWritable: true },\n      { pubkey: pool_lp_address, isSigner: false, isWritable: true },\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n      { pubkey: pool_farm_address, isSigner: false, isWritable: true },\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_fee_lp_account, isSigner: false, isWritable: true },\n      { pubkey: pool_ray_account, isSigner: false, isWritable: true },\n      { pubkey: user_ray_account, isSigner: false, isWritable: true },\n      { pubkey: farm_program_id, isSigner: false, isWritable: true },\n      { pubkey: farm_pool_id, isSigner: false, isWritable: true },\n      { pubkey: farm_authority_info, isSigner: false, isWritable: true },\n      { pubkey: pool_user_info, isSigner: false, isWritable: true },\n      { pubkey: farm_farm_address, isSigner: false, isWritable: true },\n      { pubkey: farm_lp_address, isSigner: false, isWritable: true },\n      { pubkey: farm_fee_lp_address, isSigner: false, isWritable: true },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('amount'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 12, // Withdraw V2 instruction\n          amount,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static withdrawFarmInstruction(\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户接收farm奖励的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: PublicKey,// 矿池接收lp的地址\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    amount: number,\n  ): TransactionInstruction {\n    // 时间合约地址\n    let clock = new PublicKey('SysvarC1ock11111111111111111111111111111111');\n    const keys = [\n      { pubkey: farm_info, isSigner: false, isWritable: true }, // 矿池信息\n      { pubkey: authority_info, isSigner: false, isWritable: true },// 矿池代币owner\n      { pubkey: user_info, isSigner: false, isWritable: true },\n      { pubkey: user_farm_address, isSigner: false, isWritable: true },\n      { pubkey: user_lp_address, isSigner: false, isWritable: true },\n      { pubkey: pool_lp_address, isSigner: false, isWritable: true },\n      { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n      { pubkey: pool_farm_address, isSigner: false, isWritable: true },\n      { pubkey: clock, isSigner: false, isWritable: false },\n      { pubkey: pool_fee_lp_account, isSigner: false, isWritable: true },\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('amount'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 8, // Withdraw instruction\n          amount,\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: swapProgramId,\n      data,\n    });\n  }\n\n  static async loadTokenSwap(\n    connection: Connection,\n    address: PublicKey,\n    programId: PublicKey,\n    payer: Account,\n  ): Promise<TokenSwap> {\n    const data = await loadAccount(connection, address, programId);\n    const tokenSwapData = TokenSwapLayout.decode(data);\n    if (!tokenSwapData.isInitialized) {\n      throw new Error(`Invalid token swap state`);\n    }\n\n    const [authority] = await PublicKey.findProgramAddress(\n      [address.toBuffer()],\n      programId,\n    );\n\n    const poolToken = new PublicKey(tokenSwapData.tokenPool);\n    const feeAccount = new PublicKey(tokenSwapData.feeAccount);\n    const tokenAccountA = new PublicKey(tokenSwapData.tokenAccountA);\n    const tokenAccountB = new PublicKey(tokenSwapData.tokenAccountB);\n    const mintA = new PublicKey(tokenSwapData.mintA);\n    const mintB = new PublicKey(tokenSwapData.mintB);\n    const tokenProgramId = new PublicKey(tokenSwapData.tokenProgramId);\n\n    const tradeFeeNumerator = Numberu64.fromBuffer(\n      tokenSwapData.tradeFeeNumerator,\n    );\n    const tradeFeeDenominator = Numberu64.fromBuffer(\n      tokenSwapData.tradeFeeDenominator,\n    );\n    const ownerTradeFeeNumerator = Numberu64.fromBuffer(\n      tokenSwapData.ownerTradeFeeNumerator,\n    );\n    const ownerTradeFeeDenominator = Numberu64.fromBuffer(\n      tokenSwapData.ownerTradeFeeDenominator,\n    );\n    const ownerWithdrawFeeNumerator = Numberu64.fromBuffer(\n      tokenSwapData.ownerWithdrawFeeNumerator,\n    );\n    const ownerWithdrawFeeDenominator = Numberu64.fromBuffer(\n      tokenSwapData.ownerWithdrawFeeDenominator,\n    );\n    const hostFeeNumerator = Numberu64.fromBuffer(\n      tokenSwapData.hostFeeNumerator,\n    );\n    const hostFeeDenominator = Numberu64.fromBuffer(\n      tokenSwapData.hostFeeDenominator,\n    );\n    const curveType = tokenSwapData.curveType;\n\n    return new TokenSwap(\n      connection,\n      address,\n      programId,\n      tokenProgramId,\n      poolToken,\n      feeAccount,\n      authority,\n      tokenAccountA,\n      tokenAccountB,\n      mintA,\n      mintB,\n      tradeFeeNumerator,\n      tradeFeeDenominator,\n      ownerTradeFeeNumerator,\n      ownerTradeFeeDenominator,\n      ownerWithdrawFeeNumerator,\n      ownerWithdrawFeeDenominator,\n      hostFeeNumerator,\n      hostFeeDenominator,\n      curveType,\n      payer,\n    );\n  }\n\n  static async loadTokenFarm(\n    connection: Connection,\n    address: PublicKey,\n    programId: PublicKey,\n  ): Promise<Object> {\n    const data = await loadAccount(connection, address, programId);\n    const tokenSwapData = TokenFarmLayout.decode(data);\n    if (!tokenSwapData.isInitialized) {\n      throw new Error(`未初始化`);\n    }\n\n    const [authority] = await PublicKey.findProgramAddress(\n      [address.toBuffer()],\n      programId,\n    );\n    let poolInfo = {};\n    poolInfo['authority'] = authority;\n    poolInfo['tradeFeeNumerator'] = Numberu64.fromBuffer(\n      tokenSwapData.tradeFeeNumerator,\n    );\n    poolInfo['ownerTradeFeeNumerator'] = Numberu64.fromBuffer(\n      tokenSwapData.ownerTradeFeeNumerator,\n    );\n    poolInfo['tradeFeeDenominator'] = Numberu64.fromBuffer(\n      tokenSwapData.tradeFeeDenominator,\n    );\n    poolInfo['ownerTradeFeeDenominator'] = Numberu64.fromBuffer(\n      tokenSwapData.ownerTradeFeeDenominator,\n    );\n    poolInfo['ownerWithdrawFeeNumerator'] = Numberu64.fromBuffer(\n      tokenSwapData.ownerWithdrawFeeNumerator,\n    );\n    poolInfo['ownerWithdrawFeeDenominator'] = Numberu64.fromBuffer(\n      tokenSwapData.ownerWithdrawFeeDenominator,\n    );\n    poolInfo['hostFeeNumerator'] = Numberu64.fromBuffer(\n      tokenSwapData.hostFeeNumerator,\n    );\n    poolInfo['hostFeeDenominator'] = Numberu64.fromBuffer(\n      tokenSwapData.hostFeeDenominator,\n    );\n    poolInfo['nonce'] = tokenSwapData.nonce;\n    poolInfo['token_program_id'] = new PublicKey(tokenSwapData.tokenProgramId);\n    poolInfo['pool_farm_address'] = new PublicKey(tokenSwapData.poolFarmAddress);\n    poolInfo['pool_lp_address'] = new PublicKey(tokenSwapData.poolLpAddress);\n    poolInfo['pool_fee_lp_address'] = new PublicKey(tokenSwapData.poolFeeLpAddress);\n    poolInfo['last_update'] = Numberu64.fromBuffer(tokenSwapData.lastUpdate);\n    poolInfo['reward_per_second'] = Numberu64.fromBuffer(tokenSwapData.rewardPerSecond);\n    poolInfo['reward_per_share'] = Numberu128.fromBuffer(tokenSwapData.rewardPerShare);\n    poolInfo['total_supply'] = Numberu64.fromBuffer(tokenSwapData.totalSupply);\n    poolInfo['ray_per_share'] = Numberu128.fromBuffer(tokenSwapData.rayPerShare);\n    poolInfo['other_per_share'] = Numberu128.fromBuffer(tokenSwapData.otherPerShare);\n    poolInfo['ray_total_supply'] = Numberu64.fromBuffer(tokenSwapData.rayTotalSupply);\n    poolInfo['pool_ray_address'] = new PublicKey(tokenSwapData.poolRayAddress);\n    poolInfo['pool_id'] = new PublicKey(tokenSwapData.poolId);\n    poolInfo['pool_user_info'] = new PublicKey(tokenSwapData.poolUserInfo);\n    poolInfo['pool_other_address'] = new PublicKey(tokenSwapData.poolOtherAddress);\n    return poolInfo;\n  }\n\n  static async loadTokenFarmUser(\n    connection: Connection,\n    address: PublicKey,\n    programId: PublicKey,\n  ): Promise<Object> {\n      const data = await loadAccount(connection, address, programId);\n      const userData = TokenFarmUserLayout.decode(data);\n      if (!userData.isInitialized) {\n          throw new Error(`未初始化`);\n      }\n      let userInfo = {};\n      userInfo['amount'] = Numberu64.fromBuffer(\n          userData.amount,\n      );\n      userInfo['pool_id'] = new PublicKey(\n          userData.poolId,\n      );\n      userInfo['reward_debt'] = Numberu64.fromBuffer(\n          userData.rewardDebt,\n      );\n      userInfo['ray_debt'] = Numberu64.fromBuffer(\n          userData.rayDebt,\n      );\n      userInfo['other_debt'] = Numberu64.fromBuffer(\n          userData.rayDebt,\n      );\n      return userInfo;\n  }\n\n  static async loadRaydiumFarmUser(\n    connection: Connection,\n    address: PublicKey,\n    programId: PublicKey,\n  ): Promise<Object> {\n      const data = await loadAccount(connection, address, programId);\n      const userData = TokenRayUserLayout.decode(data);\n      if (!userData.isInitialized) {\n          throw new Error(`未初始化`);\n      }\n      let userInfo = {};\n      userInfo['amount'] = Numberu64.fromBuffer(\n          userData.amount,\n      );\n      userInfo['pool_id'] = new PublicKey(\n          userData.poolId,\n      );\n      userInfo['reward_debt'] = Numberu64.fromBuffer(\n          userData.rewardDebt,\n      );\n      userInfo['ray_debt'] = Numberu64.fromBuffer(\n          userData.rayDebt,\n      );\n      return userInfo;\n  }\n\n  /**\n   * Create a new Token Swap\n   *\n   * @param connection The connection to use\n   * @param payer Pays for the transaction\n   * @param tokenSwapAccount The token swap account\n   * @param authority The authority over the swap and accounts\n   * @param nonce The nonce used to generate the authority\n   * @param tokenAccountA: The token swap's Token A account\n   * @param tokenAccountB: The token swap's Token B account\n   * @param poolToken The pool token\n   * @param tokenAccountPool The token swap's pool token account\n   * @param tokenProgramId The program ID of the token program\n   * @param swapProgramId The program ID of the token-swap program\n   * @param feeNumerator Numerator of the fee ratio\n   * @param feeDenominator Denominator of the fee ratio\n   * @return Token object for the newly minted token, Public key of the account holding the total supply of new tokens\n   */\n  static async createTokenFarm(\n      raydium_stake_program_id: PublicKey,\n      connection: Connection,\n      payer: Account,\n      tokenProgramId: PublicKey,\n      farm_info: Account,\n      authority: PublicKey,\n      pool_farm_address: PublicKey,\n      pool_lp_address: PublicKey, //\n      pool_fee_lp_address: PublicKey, //\n      pool_ray_address: PublicKey, //\n      pool_id: PublicKey, //\n      pool_user_info: PublicKey, //\n      pool_other_address: PublicKey, //\n      swapProgramId: PublicKey,\n      nonce: number,\n      tradeFeeNumerator: number,\n      tradeFeeDenominator: number,\n      ownerTradeFeeNumerator: number,\n      ownerTradeFeeDenominator: number,\n      ownerWithdrawFeeNumerator: number,\n      ownerWithdrawFeeDenominator: number,\n      hostFeeNumerator: number,\n      hostFeeDenominator: number,\n      reward_per_second: number,\n      user_len: number,\n  ) {\n    let transaction;\n    // Allocate memory for the account\n    const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(\n      connection,\n    );\n    transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: farm_info.publicKey,\n        lamports: balanceNeeded,\n        space: TokenFarmLayout.span,\n        programId: swapProgramId,\n      }),\n    );\n    let signers = [];\n    if(!pool_id){\n        let pool = new Account();\n        pool_id = pool.publicKey;\n        signers.push(pool);\n        transaction.add(\n            SystemProgram.createAccount({\n                fromPubkey: payer.publicKey,\n                newAccountPubkey: pool_id,\n                lamports: balanceNeeded,\n                space: TokenFarmLayout.span,\n                programId: swapProgramId,\n            }),\n        );\n    }\n    if(!pool_other_address){\n        let poa = new Account();\n        pool_other_address = poa.publicKey;\n        signers.push(poa);\n        transaction.add(\n            SystemProgram.createAccount({\n                fromPubkey: payer.publicKey,\n                newAccountPubkey: pool_other_address,\n                lamports: balanceNeeded,\n                space: AccountLayout.span,\n                programId: swapProgramId,\n            }),\n        );\n    }\n    if(!pool_user_info){\n        let pui = new Account();\n        pool_user_info = pui.publicKey;\n        signers.push(pui);\n        transaction.add(\n            SystemProgram.createAccount({\n                fromPubkey: payer.publicKey,\n                newAccountPubkey: pool_user_info,\n                lamports: balanceNeeded,\n                space: user_len,\n                programId: raydium_stake_program_id,\n            }),\n        );\n    }\n    const instruction = TokenSwap.createInitFarmInstruction(\n        tokenProgramId, // 通用token 转账 的地址\n        farm_info, //\n        authority, //\n        pool_farm_address,\n        pool_lp_address, //\n        pool_fee_lp_address, //\n        pool_ray_address, //\n        pool_id, //\n        pool_user_info, //\n        pool_other_address,\n        swapProgramId,\n        nonce,\n        tradeFeeNumerator,\n        tradeFeeDenominator,\n        ownerTradeFeeNumerator,\n        ownerTradeFeeDenominator,\n        ownerWithdrawFeeNumerator,\n        ownerWithdrawFeeDenominator,\n        hostFeeNumerator,\n        hostFeeDenominator,\n        reward_per_second,\n    );\n\n    transaction.add(instruction);\n    let result = await sendAndConfirmTransaction(\n        'createAccount and InitializeFarm',\n        connection,\n        transaction,\n        payer,\n        farm_info,\n        ...signers\n    );\n    console.log(\"result:\", result)\n  }\n  static async updateTokenFarm(\n      raydium_stake_program_id: PublicKey,\n      connection: Connection,\n      payer: Account,\n      tokenProgramId: PublicKey,\n      farm_info: PublicKey,\n      authority: PublicKey,\n      pool_farm_address: PublicKey,\n      pool_lp_address: PublicKey, //\n      pool_fee_lp_address: PublicKey, //\n      pool_ray_address: PublicKey, //\n      pool_id: PublicKey, //\n      pool_user_info: PublicKey, //\n      pool_other_address: PublicKey, //\n      swapProgramId: PublicKey,\n      nonce: number,\n      tradeFeeNumerator: number,\n      tradeFeeDenominator: number,\n      ownerTradeFeeNumerator: number,\n      ownerTradeFeeDenominator: number,\n      ownerWithdrawFeeNumerator: number,\n      ownerWithdrawFeeDenominator: number,\n      hostFeeNumerator: number,\n      hostFeeDenominator: number,\n      reward_per_second: number,\n  ) {\n    let transaction = new Transaction();\n    let signers = [];\n    const instruction = TokenSwap.updateFarmInstruction(\n        tokenProgramId, // 通用token 转账 的地址\n        farm_info, //\n        authority, //\n        pool_farm_address,\n        pool_lp_address, //\n        pool_fee_lp_address, //\n        pool_ray_address, //\n        pool_id, //\n        pool_user_info, //\n        pool_other_address,\n        swapProgramId,\n        nonce,\n        tradeFeeNumerator,\n        tradeFeeDenominator,\n        ownerTradeFeeNumerator,\n        ownerTradeFeeDenominator,\n        ownerWithdrawFeeNumerator,\n        ownerWithdrawFeeDenominator,\n        hostFeeNumerator,\n        hostFeeDenominator,\n        reward_per_second,\n    );\n    console.log('日产币量:',((reward_per_second*86400)/1e9).toFixed(0),'tradeFeeNumerator',tradeFeeNumerator)\n    transaction.add(instruction);\n    let result = await sendAndConfirmTransaction(\n        'Update Farm',\n        connection,\n        transaction,\n        payer,\n        ...signers\n    );\n    console.log(\"result:\", result)\n  }\n  static async depositFarm(\n    connection: Connection,\n    payer: Account,\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户lp的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: Account,// 用户详情\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    user_transfer_authority_info: Account,// 委托方地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    amount: number,\n  ) {\n      let transaction = new Transaction();\n      const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(\n          connection,\n      );\n      // Todo 判断balanceNeeded是否存在\n      transaction.add(\n          SystemProgram.createAccount({\n              fromPubkey: payer.publicKey,\n              newAccountPubkey: user_info.publicKey,\n              lamports: balanceNeeded,\n              space: TokenFarmUserLayout.span,\n              programId: swapProgramId,\n          }),\n      );\n      const instruction = TokenSwap.depositFarmInstruction(\n          farm_info,\n          authority_info,// 矿池的owner账户\n          user_lp_address,// 用户接收farm奖励的地址\n          user_farm_address,// 用户接收farm奖励的地址\n          user_info.publicKey,// 矿池接收lp的地址\n          pool_lp_address,// 矿池接收lp的地址\n          user_transfer_authority_info.publicKey,// 委托方地址\n          tokenProgramId,\n          swapProgramId,\n          pool_farm_address,\n          pool_fee_lp_account,\n          amount,\n      );\n      transaction.add(instruction);\n      let result = await sendAndConfirmTransaction(\n          'deposit',\n          connection,\n          transaction,\n          payer,\n          user_transfer_authority_info,\n          // Todo 判断balanceNeeded是否存在,有的话不用传\n          user_info,\n      );\n    console.log(\"result:\", result)\n  }\n  static async depositFarmV2(\n    connection: Connection,\n    payer: Account,\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户lp的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: Account,// 用户详情\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    user_transfer_authority_info: Account,// 委托方地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    farm_fee_lp_address: PublicKey,\n    amount: number,\n  ) {\n      let transaction = new Transaction();\n      // const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(\n      //     connection,\n      // );\n      // // Todo 判断balanceNeeded是否存在\n      // transaction.add(\n      //     SystemProgram.createAccount({\n      //         fromPubkey: payer.publicKey,\n      //         newAccountPubkey: user_info.publicKey,\n      //         lamports: balanceNeeded,\n      //         space: TokenFarmUserLayout.span,\n      //         programId: swapProgramId,\n      //     }),\n      // );\n      const instruction = TokenSwap.depositFarmV2Instruction(\n          farm_info,\n          authority_info,// 矿池的owner账户\n          user_lp_address,// 用户接收farm奖励的地址\n          user_farm_address,// 用户接收farm奖励的地址\n          user_info.publicKey,// 矿池接收lp的地址\n          pool_lp_address,// 矿池接收lp的地址\n          user_transfer_authority_info.publicKey,// 委托方地址\n          tokenProgramId,\n          swapProgramId,\n          pool_farm_address,\n          pool_fee_lp_account,\n          pool_ray_account,\n          user_ray_account,\n          farm_program_id,\n          farm_pool_id,\n          farm_authority_info,\n          pool_user_info,\n          farm_farm_address,\n          farm_lp_address,\n          farm_fee_lp_address,\n          amount,\n      );\n      transaction.add(instruction);\n      let result = await sendAndConfirmTransaction(\n          'deposit',\n          connection,\n          transaction,\n          payer,\n          user_transfer_authority_info,\n          // Todo 判断balanceNeeded是否存在,有的话不用传\n          // user_info,\n      );\n    console.log(\"result:\", result)\n  }\n  static async depositRaydium(\n    connection: Connection,\n    payer: Account,\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户lp的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: Account,// 用户详情\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    user_transfer_authority_info: Account,// 委托方地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    amount: number,\n  ) {\n      let transaction = new Transaction();\n      const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(\n          connection,\n      );\n      // Todo 判断balanceNeeded是否存在\n      transaction.add(\n          SystemProgram.createAccount({\n              fromPubkey: payer.publicKey,\n              newAccountPubkey: user_info.publicKey,\n              lamports: balanceNeeded,\n              space: TokenFarmUserLayout.span,\n              programId: swapProgramId,\n          }),\n      );\n      const instruction = TokenSwap.depositRaydiumInstruction(\n          farm_info,\n          authority_info,// 矿池的owner账户\n          user_lp_address,// 用户接收farm奖励的地址\n          user_farm_address,// 用户接收farm奖励的地址\n          user_info.publicKey,// 矿池接收lp的地址\n          pool_lp_address,// 矿池接收lp的地址\n          user_transfer_authority_info.publicKey,// 委托方地址\n          tokenProgramId,\n          swapProgramId,\n          pool_farm_address,\n          pool_fee_lp_account,\n          pool_ray_account,\n          user_ray_account,\n          farm_program_id,\n          farm_pool_id,\n          farm_authority_info,\n          pool_user_info,\n          farm_farm_address,\n          farm_lp_address,\n          amount,\n      );\n      transaction.add(instruction);\n      let result = await sendAndConfirmTransaction(\n          'deposit',\n          connection,\n          transaction,\n          payer,\n          user_transfer_authority_info,\n          // Todo 判断balanceNeeded是否存在,有的话不用传\n          user_info,\n      );\n    console.log(\"result:\", result)\n  }\n  static async depositRaydiumV4(\n    connection: Connection,\n    payer: Account,\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户lp的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: Account,// 用户详情\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    user_transfer_authority_info: Account,// 委托方地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    pool_other_address:PublicKey,\n    farm_other_address:PublicKey,\n    user_other_address:PublicKey,\n    amount: number,\n  ) {\n      let transaction = new Transaction();\n      // const balanceNeeded = await TokenSwap.getMinBalanceRentForExemptTokenSwap(\n      //     connection,\n      // );\n      // // Todo 判断balanceNeeded是否存在\n      // transaction.add(\n      //     SystemProgram.createAccount({\n      //         fromPubkey: payer.publicKey,\n      //         newAccountPubkey: user_info.publicKey,\n      //         lamports: balanceNeeded,\n      //         space: TokenFarmUserLayout.span,\n      //         programId: swapProgramId,\n      //     }),\n      // );\n      const instruction = TokenSwap.depositRaydiumV4Instruction(\n          farm_info,\n          authority_info,// 矿池的owner账户\n          user_lp_address,// 用户接收farm奖励的地址\n          user_farm_address,// 用户接收farm奖励的地址\n          user_info.publicKey,// 矿池接收lp的地址\n          pool_lp_address,// 矿池接收lp的地址\n          user_transfer_authority_info.publicKey,// 委托方地址\n          tokenProgramId,\n          swapProgramId,\n          pool_farm_address,\n          pool_fee_lp_account,\n          pool_ray_account,\n          user_ray_account,\n          farm_program_id,\n          farm_pool_id,\n          farm_authority_info,\n          pool_user_info,\n          farm_farm_address,\n          farm_lp_address,\n          pool_other_address,\n          farm_other_address,\n          user_other_address,\n          amount,\n      );\n      transaction.add(instruction);\n      let result = await sendAndConfirmTransaction(\n          'deposit',\n          connection,\n          transaction,\n          payer,\n          user_transfer_authority_info,\n          // Todo 判断balanceNeeded是否存在,有的话不用传\n          // user_info,\n      );\n    console.log(\"result:\", result);\n  }\n  static async withdrawRaydiumV4(\n    connection: Connection,\n    payer: Account,\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户lp的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: Account,// 用户详情\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    pool_other_address:PublicKey,\n    farm_other_address:PublicKey,\n    user_other_address:PublicKey,\n    amount: number,\n  ) {\n      let transaction = new Transaction();\n      const instruction = TokenSwap.withdrawRaydiumV4Instruction(\n          farm_info,\n          authority_info,// 矿池的owner账户\n          user_lp_address,// 用户接收farm奖励的地址\n          user_farm_address,// 用户接收farm奖励的地址\n          user_info.publicKey,// 矿池接收lp的地址\n          pool_lp_address,// 矿池接收lp的地址\n          tokenProgramId,\n          swapProgramId,\n          pool_farm_address,\n          pool_fee_lp_account,\n          pool_ray_account,\n          user_ray_account,\n          farm_program_id,\n          farm_pool_id,\n          farm_authority_info,\n          pool_user_info,\n          farm_farm_address,\n          farm_lp_address,\n          pool_other_address,\n          farm_other_address,\n          user_other_address,\n          amount,\n      );\n      transaction.add(instruction);\n      let result = await sendAndConfirmTransaction(\n          'withdraw',\n          connection,\n          transaction,\n          payer,\n      );\n    console.log(\"result:\", result);\n  }\n  static async withdrawRaydium(\n    connection: Connection,\n    payer: Account,\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户lp的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: Account,// 用户详情\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    pool_ray_account: PublicKey,\n    user_ray_account: PublicKey,\n    farm_program_id: PublicKey,\n    farm_pool_id: PublicKey,\n    farm_authority_info: PublicKey,\n    pool_user_info: PublicKey,\n    farm_farm_address: PublicKey,\n    farm_lp_address: PublicKey,\n    amount: number,\n  ) {\n      let transaction = new Transaction();\n      const instruction = TokenSwap.withdrawRaydiumInstruction(\n          farm_info,\n          authority_info,// 矿池的owner账户\n          user_lp_address,// 用户接收farm奖励的地址\n          user_farm_address,// 用户接收farm奖励的地址\n          user_info.publicKey,// 矿池接收lp的地址\n          pool_lp_address,// 矿池接收lp的地址\n          tokenProgramId,\n          swapProgramId,\n          pool_farm_address,\n          pool_fee_lp_account,\n          pool_ray_account,\n          user_ray_account,\n          farm_program_id,\n          farm_pool_id,\n          farm_authority_info,\n          pool_user_info,\n          farm_farm_address,\n          farm_lp_address,\n          amount,\n      );\n      transaction.add(instruction);\n      let result = await sendAndConfirmTransaction(\n          'withdraw',\n          connection,\n          transaction,\n          payer,\n          // user_info,\n      );\n    console.log(\"result:\", result)\n  }\n  static async harvestFarmV2(\n      connection: Connection,\n      payer: Account,\n      farm_info: PublicKey,\n      authority_info: PublicKey,// 矿池的owner账户\n      user_lp_address: PublicKey,// 用户lp的地址\n      user_farm_address: PublicKey,// 用户接收farm奖励的地址\n      user_info: Account,// 用户详情\n      pool_lp_address: PublicKey,// 矿池接收lp的地址\n      user_transfer_authority_info: Account,// 委托方地址\n      tokenProgramId: PublicKey,\n      swapProgramId: PublicKey,\n      pool_farm_address: PublicKey,\n      pool_fee_lp_account: PublicKey,\n      pool_ray_account: PublicKey,\n      user_ray_account: PublicKey,\n      farm_program_id: PublicKey,\n      farm_pool_id: PublicKey,\n      farm_authority_info: PublicKey,\n      pool_user_info: PublicKey,\n      farm_farm_address: PublicKey,\n      farm_lp_address: PublicKey,\n      farm_fee_lp_address: PublicKey,\n      amount: number,\n  ) {\n    let transaction = new Transaction();\n    const instruction = TokenSwap.depositFarmV2Instruction(\n        farm_info,\n        authority_info,// 矿池的owner账户\n        user_lp_address,// 用户接收farm奖励的地址\n        user_farm_address,// 用户接收farm奖励的地址\n        user_info.publicKey,// 矿池接收lp的地址\n        pool_lp_address,// 矿池接收lp的地址\n        user_transfer_authority_info.publicKey,// 委托方地址\n        tokenProgramId,\n        swapProgramId,\n        pool_farm_address,\n        pool_fee_lp_account,\n        pool_ray_account,\n        user_ray_account,\n        farm_program_id,\n        farm_pool_id,\n        farm_authority_info,\n        pool_user_info,\n        farm_farm_address,\n        farm_lp_address,\n        farm_fee_lp_address,\n        amount,\n    );\n    transaction.add(instruction);\n    let result = await sendAndConfirmTransaction(\n        'deposit',\n        connection,\n        transaction,\n        payer,\n        user_transfer_authority_info,\n    );\n    console.log(\"result:\", result)\n  }\n  static async withdrawFarmV2(\n      connection: Connection,\n      payer: Account,\n      farm_info: PublicKey,\n      authority_info: PublicKey,// 矿池的owner账户\n      user_lp_address: PublicKey,// 用户lp的地址\n      user_farm_address: PublicKey,// 用户接收farm奖励的地址\n      user_info: Account,// 用户详情\n      pool_lp_address: PublicKey,// 矿池接收lp的地址\n      tokenProgramId: PublicKey,\n      swapProgramId: PublicKey,\n      pool_farm_address: PublicKey,\n      pool_fee_lp_account: PublicKey,\n      pool_ray_account: PublicKey,\n      user_ray_account: PublicKey,\n      farm_program_id: PublicKey,\n      farm_pool_id: PublicKey,\n      farm_authority_info: PublicKey,\n      pool_user_info: PublicKey,\n      farm_farm_address: PublicKey,\n      farm_lp_address: PublicKey,\n      farm_fee_lp_address: PublicKey,\n      amount: number,\n  ) {\n    let transaction = new Transaction();\n    const instruction = TokenSwap.withdrawFarmV2Instruction(\n        farm_info,\n        authority_info,// 矿池的owner账户\n        user_lp_address,// 用户接收farm奖励的地址\n        user_farm_address,// 用户接收farm奖励的地址\n        user_info.publicKey,// 矿池接收lp的地址\n        pool_lp_address,// 矿池接收lp的地址\n        tokenProgramId,\n        swapProgramId,\n        pool_farm_address,\n        pool_fee_lp_account,\n        pool_ray_account,\n        user_ray_account,\n        farm_program_id,\n        farm_pool_id,\n        farm_authority_info,\n        pool_user_info,\n        farm_farm_address,\n        farm_lp_address,\n        farm_fee_lp_address,\n        amount,\n    );\n    transaction.add(instruction);\n    let result = await sendAndConfirmTransaction(\n        'withdraw',\n        connection,\n        transaction,\n        payer,\n    );\n    console.log(\"result:\", result)\n  }\n\n  static async withdrawFarm(\n    connection: Connection,\n    payer: Account,\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户lp的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: Account,// 用户详情\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    amount: number,\n  ) {\n    let transaction = new Transaction();\n    const instruction = TokenSwap.withdrawFarmInstruction(\n      farm_info,\n      authority_info,// 矿池的owner账户\n      user_lp_address,// 用户接收farm奖励的地址\n      user_farm_address,// 用户接收farm奖励的地址\n      user_info.publicKey,// 矿池接收lp的地址\n      pool_lp_address,// 矿池接收lp的地址\n      tokenProgramId,\n      swapProgramId,\n      pool_farm_address,\n      pool_fee_lp_account,\n      amount,\n    );\n    transaction.add(instruction);\n    let result = await sendAndConfirmTransaction(\n      'deposit',\n      connection,\n      transaction,\n      payer,\n    );\n    console.log(\"result:\", result)\n  }\n  static async harvestFarm(\n    connection: Connection,\n    payer: Account,\n    farm_info: PublicKey,\n    authority_info: PublicKey,// 矿池的owner账户\n    user_lp_address: PublicKey,// 用户lp的地址\n    user_farm_address: PublicKey,// 用户接收farm奖励的地址\n    user_info: Account,// 用户详情\n    pool_lp_address: PublicKey,// 矿池接收lp的地址\n    user_transfer_authority_info: Account,// 委托方地址\n    tokenProgramId: PublicKey,\n    swapProgramId: PublicKey,\n    pool_farm_address: PublicKey,\n    pool_fee_lp_account: PublicKey,\n    amount: number,\n  ) {\n    let transaction = new Transaction();\n    const instruction = TokenSwap.depositFarmInstruction(\n      farm_info,\n      authority_info,// 矿池的owner账户\n      user_lp_address,// 用户接收farm奖励的地址\n      user_farm_address,// 用户接收farm奖励的地址\n      user_info.publicKey,// 矿池接收lp的地址\n      pool_lp_address,// 矿池接收lp的地址\n      user_transfer_authority_info.publicKey,// 委托方地址\n      tokenProgramId,\n      swapProgramId,\n      pool_farm_address,\n      pool_fee_lp_account,\n      amount,\n    );\n    transaction.add(instruction);\n    let result = await sendAndConfirmTransaction(\n      'harvest',\n      connection,\n      transaction,\n      payer,\n      user_transfer_authority_info,\n    );\n    console.log(\"result:\", result)\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622814637447
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/layout.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/layout.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/layout.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/layout.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/",
        "sourceFileName": "layout.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rustString = exports.uint128 = exports.uint64 = exports.publicKey = void 0;\n\nvar BufferLayout = _interopRequireWildcard(require(\"buffer-layout\"));\n\n/**\n * Layout for a public key\n */\nconst publicKey = (property = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n/**\n * Layout for a 64bit unsigned value\n */\n\n\nexports.publicKey = publicKey;\n\nconst uint64 = (property = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n/**\n * Layout for a 64bit unsigned value\n */\n\n\nexports.uint64 = uint64;\n\nconst uint128 = (property = 'uint128') => {\n  return BufferLayout.blob(16, property);\n};\n/**\n * Layout for a Rust String type\n */\n\n\nexports.uint128 = uint128;\n\nconst rustString = (property = 'string') => {\n  const rsl = BufferLayout.struct([BufferLayout.u32('length'), BufferLayout.u32('lengthPadding'), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars')], property);\n\n  const _decode = rsl.decode.bind(rsl);\n\n  const _encode = rsl.encode.bind(rsl);\n\n  rsl.decode = (buffer, offset) => {\n    const data = _decode(buffer, offset);\n\n    return data.chars.toString('utf8');\n  };\n\n  rsl.encode = (str, buffer, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8')\n    };\n    return _encode(data, buffer, offset);\n  };\n\n  return rsl;\n};\n\nexports.rustString = rustString;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxheW91dC5qcyJdLCJuYW1lcyI6WyJwdWJsaWNLZXkiLCJwcm9wZXJ0eSIsIkJ1ZmZlckxheW91dCIsImJsb2IiLCJ1aW50NjQiLCJ1aW50MTI4IiwicnVzdFN0cmluZyIsInJzbCIsInN0cnVjdCIsInUzMiIsIm9mZnNldCIsIl9kZWNvZGUiLCJkZWNvZGUiLCJiaW5kIiwiX2VuY29kZSIsImVuY29kZSIsImJ1ZmZlciIsImRhdGEiLCJjaGFycyIsInRvU3RyaW5nIiwic3RyIiwiQnVmZmVyIiwiZnJvbSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ08sTUFBTUEsU0FBUyxHQUFHLENBQUNDLFFBQWdCLEdBQUcsV0FBcEIsS0FBNEM7QUFDbkUsU0FBT0MsWUFBWSxDQUFDQyxJQUFiLENBQWtCLEVBQWxCLEVBQXNCRixRQUF0QixDQUFQO0FBQ0QsQ0FGTTtBQUlQO0FBQ0E7QUFDQTs7Ozs7QUFDTyxNQUFNRyxNQUFNLEdBQUcsQ0FBQ0gsUUFBZ0IsR0FBRyxRQUFwQixLQUF5QztBQUM3RCxTQUFPQyxZQUFZLENBQUNDLElBQWIsQ0FBa0IsQ0FBbEIsRUFBcUJGLFFBQXJCLENBQVA7QUFDRCxDQUZNO0FBSVA7QUFDQTtBQUNBOzs7OztBQUNPLE1BQU1JLE9BQU8sR0FBRyxDQUFDSixRQUFnQixHQUFHLFNBQXBCLEtBQTBDO0FBQy9ELFNBQU9DLFlBQVksQ0FBQ0MsSUFBYixDQUFrQixFQUFsQixFQUFzQkYsUUFBdEIsQ0FBUDtBQUNELENBRk07QUFJUDtBQUNBO0FBQ0E7Ozs7O0FBQ08sTUFBTUssVUFBVSxHQUFHLENBQUNMLFFBQWdCLEdBQUcsUUFBcEIsS0FBeUM7QUFDakUsUUFBTU0sR0FBRyxHQUFHTCxZQUFZLENBQUNNLE1BQWIsQ0FDVixDQUNFTixZQUFZLENBQUNPLEdBQWIsQ0FBaUIsUUFBakIsQ0FERixFQUVFUCxZQUFZLENBQUNPLEdBQWIsQ0FBaUIsZUFBakIsQ0FGRixFQUdFUCxZQUFZLENBQUNDLElBQWIsQ0FBa0JELFlBQVksQ0FBQ1EsTUFBYixDQUFvQlIsWUFBWSxDQUFDTyxHQUFiLEVBQXBCLEVBQXdDLENBQUMsQ0FBekMsQ0FBbEIsRUFBK0QsT0FBL0QsQ0FIRixDQURVLEVBTVZSLFFBTlUsQ0FBWjs7QUFRQSxRQUFNVSxPQUFPLEdBQUdKLEdBQUcsQ0FBQ0ssTUFBSixDQUFXQyxJQUFYLENBQWdCTixHQUFoQixDQUFoQjs7QUFDQSxRQUFNTyxPQUFPLEdBQUdQLEdBQUcsQ0FBQ1EsTUFBSixDQUFXRixJQUFYLENBQWdCTixHQUFoQixDQUFoQjs7QUFFQUEsRUFBQUEsR0FBRyxDQUFDSyxNQUFKLEdBQWEsQ0FBQ0ksTUFBRCxFQUFTTixNQUFULEtBQW9CO0FBQy9CLFVBQU1PLElBQUksR0FBR04sT0FBTyxDQUFDSyxNQUFELEVBQVNOLE1BQVQsQ0FBcEI7O0FBQ0EsV0FBT08sSUFBSSxDQUFDQyxLQUFMLENBQVdDLFFBQVgsQ0FBb0IsTUFBcEIsQ0FBUDtBQUNELEdBSEQ7O0FBS0FaLEVBQUFBLEdBQUcsQ0FBQ1EsTUFBSixHQUFhLENBQUNLLEdBQUQsRUFBTUosTUFBTixFQUFjTixNQUFkLEtBQXlCO0FBQ3BDLFVBQU1PLElBQUksR0FBRztBQUNYQyxNQUFBQSxLQUFLLEVBQUVHLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZRixHQUFaLEVBQWlCLE1BQWpCO0FBREksS0FBYjtBQUdBLFdBQU9OLE9BQU8sQ0FBQ0csSUFBRCxFQUFPRCxNQUFQLEVBQWVOLE1BQWYsQ0FBZDtBQUNELEdBTEQ7O0FBT0EsU0FBT0gsR0FBUDtBQUNELENBekJNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9mYW54dS93d3cvbm9kZS9zb2xhbmEtcHJvZ3JhbS1saWJyYXJ5L3Rva2VuLXN3YXAvanMvY2xpZW50LyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5cbmltcG9ydCAqIGFzIEJ1ZmZlckxheW91dCBmcm9tICdidWZmZXItbGF5b3V0JztcblxuLyoqXG4gKiBMYXlvdXQgZm9yIGEgcHVibGljIGtleVxuICovXG5leHBvcnQgY29uc3QgcHVibGljS2V5ID0gKHByb3BlcnR5OiBzdHJpbmcgPSAncHVibGljS2V5Jyk6IE9iamVjdCA9PiB7XG4gIHJldHVybiBCdWZmZXJMYXlvdXQuYmxvYigzMiwgcHJvcGVydHkpO1xufTtcblxuLyoqXG4gKiBMYXlvdXQgZm9yIGEgNjRiaXQgdW5zaWduZWQgdmFsdWVcbiAqL1xuZXhwb3J0IGNvbnN0IHVpbnQ2NCA9IChwcm9wZXJ0eTogc3RyaW5nID0gJ3VpbnQ2NCcpOiBPYmplY3QgPT4ge1xuICByZXR1cm4gQnVmZmVyTGF5b3V0LmJsb2IoOCwgcHJvcGVydHkpO1xufTtcblxuLyoqXG4gKiBMYXlvdXQgZm9yIGEgNjRiaXQgdW5zaWduZWQgdmFsdWVcbiAqL1xuZXhwb3J0IGNvbnN0IHVpbnQxMjggPSAocHJvcGVydHk6IHN0cmluZyA9ICd1aW50MTI4Jyk6IE9iamVjdCA9PiB7XG4gIHJldHVybiBCdWZmZXJMYXlvdXQuYmxvYigxNiwgcHJvcGVydHkpO1xufTtcblxuLyoqXG4gKiBMYXlvdXQgZm9yIGEgUnVzdCBTdHJpbmcgdHlwZVxuICovXG5leHBvcnQgY29uc3QgcnVzdFN0cmluZyA9IChwcm9wZXJ0eTogc3RyaW5nID0gJ3N0cmluZycpOiBPYmplY3QgPT4ge1xuICBjb25zdCByc2wgPSBCdWZmZXJMYXlvdXQuc3RydWN0KFxuICAgIFtcbiAgICAgIEJ1ZmZlckxheW91dC51MzIoJ2xlbmd0aCcpLFxuICAgICAgQnVmZmVyTGF5b3V0LnUzMignbGVuZ3RoUGFkZGluZycpLFxuICAgICAgQnVmZmVyTGF5b3V0LmJsb2IoQnVmZmVyTGF5b3V0Lm9mZnNldChCdWZmZXJMYXlvdXQudTMyKCksIC04KSwgJ2NoYXJzJyksXG4gICAgXSxcbiAgICBwcm9wZXJ0eSxcbiAgKTtcbiAgY29uc3QgX2RlY29kZSA9IHJzbC5kZWNvZGUuYmluZChyc2wpO1xuICBjb25zdCBfZW5jb2RlID0gcnNsLmVuY29kZS5iaW5kKHJzbCk7XG5cbiAgcnNsLmRlY29kZSA9IChidWZmZXIsIG9mZnNldCkgPT4ge1xuICAgIGNvbnN0IGRhdGEgPSBfZGVjb2RlKGJ1ZmZlciwgb2Zmc2V0KTtcbiAgICByZXR1cm4gZGF0YS5jaGFycy50b1N0cmluZygndXRmOCcpO1xuICB9O1xuXG4gIHJzbC5lbmNvZGUgPSAoc3RyLCBidWZmZXIsIG9mZnNldCkgPT4ge1xuICAgIGNvbnN0IGRhdGEgPSB7XG4gICAgICBjaGFyczogQnVmZmVyLmZyb20oc3RyLCAndXRmOCcpLFxuICAgIH07XG4gICAgcmV0dXJuIF9lbmNvZGUoZGF0YSwgYnVmZmVyLCBvZmZzZXQpO1xuICB9O1xuXG4gIHJldHVybiByc2w7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "layout.js"
      ],
      "names": [
        "publicKey",
        "property",
        "BufferLayout",
        "blob",
        "uint64",
        "uint128",
        "rustString",
        "rsl",
        "struct",
        "u32",
        "offset",
        "_decode",
        "decode",
        "bind",
        "_encode",
        "encode",
        "buffer",
        "data",
        "chars",
        "toString",
        "str",
        "Buffer",
        "from"
      ],
      "mappings": ";;;;;;;;;AAEA;;AAEA;AACA;AACA;AACO,MAAMA,SAAS,GAAG,CAACC,QAAgB,GAAG,WAApB,KAA4C;AACnE,SAAOC,YAAY,CAACC,IAAb,CAAkB,EAAlB,EAAsBF,QAAtB,CAAP;AACD,CAFM;AAIP;AACA;AACA;;;;;AACO,MAAMG,MAAM,GAAG,CAACH,QAAgB,GAAG,QAApB,KAAyC;AAC7D,SAAOC,YAAY,CAACC,IAAb,CAAkB,CAAlB,EAAqBF,QAArB,CAAP;AACD,CAFM;AAIP;AACA;AACA;;;;;AACO,MAAMI,OAAO,GAAG,CAACJ,QAAgB,GAAG,SAApB,KAA0C;AAC/D,SAAOC,YAAY,CAACC,IAAb,CAAkB,EAAlB,EAAsBF,QAAtB,CAAP;AACD,CAFM;AAIP;AACA;AACA;;;;;AACO,MAAMK,UAAU,GAAG,CAACL,QAAgB,GAAG,QAApB,KAAyC;AACjE,QAAMM,GAAG,GAAGL,YAAY,CAACM,MAAb,CACV,CACEN,YAAY,CAACO,GAAb,CAAiB,QAAjB,CADF,EAEEP,YAAY,CAACO,GAAb,CAAiB,eAAjB,CAFF,EAGEP,YAAY,CAACC,IAAb,CAAkBD,YAAY,CAACQ,MAAb,CAAoBR,YAAY,CAACO,GAAb,EAApB,EAAwC,CAAC,CAAzC,CAAlB,EAA+D,OAA/D,CAHF,CADU,EAMVR,QANU,CAAZ;;AAQA,QAAMU,OAAO,GAAGJ,GAAG,CAACK,MAAJ,CAAWC,IAAX,CAAgBN,GAAhB,CAAhB;;AACA,QAAMO,OAAO,GAAGP,GAAG,CAACQ,MAAJ,CAAWF,IAAX,CAAgBN,GAAhB,CAAhB;;AAEAA,EAAAA,GAAG,CAACK,MAAJ,GAAa,CAACI,MAAD,EAASN,MAAT,KAAoB;AAC/B,UAAMO,IAAI,GAAGN,OAAO,CAACK,MAAD,EAASN,MAAT,CAApB;;AACA,WAAOO,IAAI,CAACC,KAAL,CAAWC,QAAX,CAAoB,MAApB,CAAP;AACD,GAHD;;AAKAZ,EAAAA,GAAG,CAACQ,MAAJ,GAAa,CAACK,GAAD,EAAMJ,MAAN,EAAcN,MAAd,KAAyB;AACpC,UAAMO,IAAI,GAAG;AACXC,MAAAA,KAAK,EAAEG,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiB,MAAjB;AADI,KAAb;AAGA,WAAON,OAAO,CAACG,IAAD,EAAOD,MAAP,EAAeN,MAAf,CAAd;AACD,GALD;;AAOA,SAAOH,GAAP;AACD,CAzBM",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/",
      "sourcesContent": [
        "// @flow\n\nimport * as BufferLayout from 'buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey'): Object => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64'): Object => {\n  return BufferLayout.blob(8, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint128 = (property: string = 'uint128'): Object => {\n  return BufferLayout.blob(16, property);\n};\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (property: string = 'string'): Object => {\n  const rsl = BufferLayout.struct(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  rsl.decode = (buffer, offset) => {\n    const data = _decode(buffer, offset);\n    return data.chars.toString('utf8');\n  };\n\n  rsl.encode = (str, buffer, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, buffer, offset);\n  };\n\n  return rsl;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622733632492
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/send-and-confirm-transaction.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/send-and-confirm-transaction.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/send-and-confirm-transaction.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/send-and-confirm-transaction.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
        "sourceFileName": "send-and-confirm-transaction.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendAndConfirmTransaction = sendAndConfirmTransaction;\n\nvar _web = require(\"@solana/web3.js\");\n\nfunction sendAndConfirmTransaction(title, connection, transaction, ...signers) {\n  return (0, _web.sendAndConfirmTransaction)(connection, transaction, signers, {\n    skipPreflight: false,\n    commitment: 'recent',\n    preflightCommitment: 'recent'\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbmQtYW5kLWNvbmZpcm0tdHJhbnNhY3Rpb24uanMiXSwibmFtZXMiOlsic2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbiIsInRpdGxlIiwiY29ubmVjdGlvbiIsInRyYW5zYWN0aW9uIiwic2lnbmVycyIsInNraXBQcmVmbGlnaHQiLCJjb21taXRtZW50IiwicHJlZmxpZ2h0Q29tbWl0bWVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBOztBQVFPLFNBQVNBLHlCQUFULENBQ0xDLEtBREssRUFFTEMsVUFGSyxFQUdMQyxXQUhLLEVBSUwsR0FBR0MsT0FKRSxFQUswQjtBQUMvQixTQUFPLG9DQUE4QkYsVUFBOUIsRUFBMENDLFdBQTFDLEVBQXVEQyxPQUF2RCxFQUFnRTtBQUNyRUMsSUFBQUEsYUFBYSxFQUFFLEtBRHNEO0FBRXJFQyxJQUFBQSxVQUFVLEVBQUUsUUFGeUQ7QUFHckVDLElBQUFBLG1CQUFtQixFQUFFO0FBSGdELEdBQWhFLENBQVA7QUFLRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZmFueHUvd3d3L25vZGUvc29sYW5hLXByb2dyYW0tbGlicmFyeS90b2tlbi1zd2FwL2pzL2NsaWVudC91dGlsLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5cbmltcG9ydCB7c2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbiBhcyByZWFsU2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbn0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB0eXBlIHtcbiAgQWNjb3VudCxcbiAgQ29ubmVjdGlvbixcbiAgVHJhbnNhY3Rpb24sXG4gIFRyYW5zYWN0aW9uU2lnbmF0dXJlLFxufSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuXG5leHBvcnQgZnVuY3Rpb24gc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbihcbiAgdGl0bGU6IHN0cmluZyxcbiAgY29ubmVjdGlvbjogQ29ubmVjdGlvbixcbiAgdHJhbnNhY3Rpb246IFRyYW5zYWN0aW9uLFxuICAuLi5zaWduZXJzOiBBcnJheTxBY2NvdW50PlxuKTogUHJvbWlzZTxUcmFuc2FjdGlvblNpZ25hdHVyZT4ge1xuICByZXR1cm4gcmVhbFNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24oY29ubmVjdGlvbiwgdHJhbnNhY3Rpb24sIHNpZ25lcnMsIHtcbiAgICBza2lwUHJlZmxpZ2h0OiBmYWxzZSxcbiAgICBjb21taXRtZW50OiAncmVjZW50JyxcbiAgICBwcmVmbGlnaHRDb21taXRtZW50OiAncmVjZW50JyxcbiAgfSk7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "send-and-confirm-transaction.js"
      ],
      "names": [
        "sendAndConfirmTransaction",
        "title",
        "connection",
        "transaction",
        "signers",
        "skipPreflight",
        "commitment",
        "preflightCommitment"
      ],
      "mappings": ";;;;;;;AAEA;;AAQO,SAASA,yBAAT,CACLC,KADK,EAELC,UAFK,EAGLC,WAHK,EAIL,GAAGC,OAJE,EAK0B;AAC/B,SAAO,oCAA8BF,UAA9B,EAA0CC,WAA1C,EAAuDC,OAAvD,EAAgE;AACrEC,IAAAA,aAAa,EAAE,KADsD;AAErEC,IAAAA,UAAU,EAAE,QAFyD;AAGrEC,IAAAA,mBAAmB,EAAE;AAHgD,GAAhE,CAAP;AAKD",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
      "sourcesContent": [
        "// @flow\n\nimport {sendAndConfirmTransaction as realSendAndConfirmTransaction} from '@solana/web3.js';\nimport type {\n  Account,\n  Connection,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nexport function sendAndConfirmTransaction(\n  title: string,\n  connection: Connection,\n  transaction: Transaction,\n  ...signers: Array<Account>\n): Promise<TransactionSignature> {\n  return realSendAndConfirmTransaction(connection, transaction, signers, {\n    skipPreflight: false,\n    commitment: 'recent',\n    preflightCommitment: 'recent',\n  });\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622733632494
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/account.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/account.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/account.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/account.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
        "sourceFileName": "account.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadAccount = loadAccount;\n\nvar _web = require(\"@solana/web3.js\");\n\nasync function loadAccount(connection, address, programId) {\n  const accountInfo = await connection.getAccountInfo(address);\n\n  if (accountInfo === null) {\n    throw new Error('Failed to find account');\n  }\n\n  if (!accountInfo.owner.equals(programId)) {\n    throw new Error(`Invalid owner: ${JSON.stringify(accountInfo.owner)}`);\n  }\n\n  return Buffer.from(accountInfo.data);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnQuanMiXSwibmFtZXMiOlsibG9hZEFjY291bnQiLCJjb25uZWN0aW9uIiwiYWRkcmVzcyIsInByb2dyYW1JZCIsImFjY291bnRJbmZvIiwiZ2V0QWNjb3VudEluZm8iLCJFcnJvciIsIm93bmVyIiwiZXF1YWxzIiwiSlNPTiIsInN0cmluZ2lmeSIsIkJ1ZmZlciIsImZyb20iLCJkYXRhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBRU8sZUFBZUEsV0FBZixDQUNMQyxVQURLLEVBRUxDLE9BRkssRUFHTEMsU0FISyxFQUlHO0FBQ1IsUUFBTUMsV0FBVyxHQUFHLE1BQU1ILFVBQVUsQ0FBQ0ksY0FBWCxDQUEwQkgsT0FBMUIsQ0FBMUI7O0FBQ0EsTUFBSUUsV0FBVyxLQUFLLElBQXBCLEVBQTBCO0FBQ3hCLFVBQU0sSUFBSUUsS0FBSixDQUFVLHdCQUFWLENBQU47QUFDRDs7QUFFRCxNQUFJLENBQUNGLFdBQVcsQ0FBQ0csS0FBWixDQUFrQkMsTUFBbEIsQ0FBeUJMLFNBQXpCLENBQUwsRUFBMEM7QUFDeEMsVUFBTSxJQUFJRyxLQUFKLENBQVcsa0JBQWlCRyxJQUFJLENBQUNDLFNBQUwsQ0FBZU4sV0FBVyxDQUFDRyxLQUEzQixDQUFrQyxFQUE5RCxDQUFOO0FBQ0Q7O0FBRUQsU0FBT0ksTUFBTSxDQUFDQyxJQUFQLENBQVlSLFdBQVcsQ0FBQ1MsSUFBeEIsQ0FBUDtBQUNEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9mYW54dS93d3cvbm9kZS9zb2xhbmEtcHJvZ3JhbS1saWJyYXJ5L3Rva2VuLXN3YXAvanMvY2xpZW50L3V0aWwvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUge0Nvbm5lY3Rpb259IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XG5pbXBvcnQge1B1YmxpY0tleX0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvYWRBY2NvdW50KFxuICBjb25uZWN0aW9uOiBDb25uZWN0aW9uLFxuICBhZGRyZXNzOiBQdWJsaWNLZXksXG4gIHByb2dyYW1JZDogUHVibGljS2V5LFxuKTogQnVmZmVyIHtcbiAgY29uc3QgYWNjb3VudEluZm8gPSBhd2FpdCBjb25uZWN0aW9uLmdldEFjY291bnRJbmZvKGFkZHJlc3MpO1xuICBpZiAoYWNjb3VudEluZm8gPT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmaW5kIGFjY291bnQnKTtcbiAgfVxuXG4gIGlmICghYWNjb3VudEluZm8ub3duZXIuZXF1YWxzKHByb2dyYW1JZCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgb3duZXI6ICR7SlNPTi5zdHJpbmdpZnkoYWNjb3VudEluZm8ub3duZXIpfWApO1xuICB9XG5cbiAgcmV0dXJuIEJ1ZmZlci5mcm9tKGFjY291bnRJbmZvLmRhdGEpO1xufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "account.js"
      ],
      "names": [
        "loadAccount",
        "connection",
        "address",
        "programId",
        "accountInfo",
        "getAccountInfo",
        "Error",
        "owner",
        "equals",
        "JSON",
        "stringify",
        "Buffer",
        "from",
        "data"
      ],
      "mappings": ";;;;;;;AACA;;AAEO,eAAeA,WAAf,CACLC,UADK,EAELC,OAFK,EAGLC,SAHK,EAIG;AACR,QAAMC,WAAW,GAAG,MAAMH,UAAU,CAACI,cAAX,CAA0BH,OAA1B,CAA1B;;AACA,MAAIE,WAAW,KAAK,IAApB,EAA0B;AACxB,UAAM,IAAIE,KAAJ,CAAU,wBAAV,CAAN;AACD;;AAED,MAAI,CAACF,WAAW,CAACG,KAAZ,CAAkBC,MAAlB,CAAyBL,SAAzB,CAAL,EAA0C;AACxC,UAAM,IAAIG,KAAJ,CAAW,kBAAiBG,IAAI,CAACC,SAAL,CAAeN,WAAW,CAACG,KAA3B,CAAkC,EAA9D,CAAN;AACD;;AAED,SAAOI,MAAM,CAACC,IAAP,CAAYR,WAAW,CAACS,IAAxB,CAAP;AACD",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
      "sourcesContent": [
        "import type {Connection} from '@solana/web3.js';\nimport {PublicKey} from '@solana/web3.js';\n\nexport async function loadAccount(\n  connection: Connection,\n  address: PublicKey,\n  programId: PublicKey,\n): Buffer {\n  const accountInfo = await connection.getAccountInfo(address);\n  if (accountInfo === null) {\n    throw new Error('Failed to find account');\n  }\n\n  if (!accountInfo.owner.equals(programId)) {\n    throw new Error(`Invalid owner: ${JSON.stringify(accountInfo.owner)}`);\n  }\n\n  return Buffer.from(accountInfo.data);\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622733632494
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/new-account-with-lamports.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/new-account-with-lamports.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/new-account-with-lamports.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/new-account-with-lamports.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
        "sourceFileName": "new-account-with-lamports.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.newAccountWithLamports = newAccountWithLamports;\n\nvar _web = require(\"@solana/web3.js\");\n\nvar _sleep = require(\"./sleep\");\n\nasync function newAccountWithLamports(connection, lamports = 1000000) {\n  const account = new _web.Account();\n  let retries = 30;\n  await connection.requestAirdrop(account.publicKey, lamports);\n\n  for (;;) {\n    await (0, _sleep.sleep)(500);\n\n    if (lamports == (await connection.getBalance(account.publicKey))) {\n      return account;\n    }\n\n    if (--retries <= 0) {\n      break;\n    }\n  }\n\n  throw new Error(`Airdrop of ${lamports} failed`);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5ldy1hY2NvdW50LXdpdGgtbGFtcG9ydHMuanMiXSwibmFtZXMiOlsibmV3QWNjb3VudFdpdGhMYW1wb3J0cyIsImNvbm5lY3Rpb24iLCJsYW1wb3J0cyIsImFjY291bnQiLCJBY2NvdW50IiwicmV0cmllcyIsInJlcXVlc3RBaXJkcm9wIiwicHVibGljS2V5IiwiZ2V0QmFsYW5jZSIsIkVycm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUE7O0FBRUE7O0FBRU8sZUFBZUEsc0JBQWYsQ0FDTEMsVUFESyxFQUVMQyxRQUFnQixHQUFHLE9BRmQsRUFHYTtBQUNsQixRQUFNQyxPQUFPLEdBQUcsSUFBSUMsWUFBSixFQUFoQjtBQUVBLE1BQUlDLE9BQU8sR0FBRyxFQUFkO0FBQ0EsUUFBTUosVUFBVSxDQUFDSyxjQUFYLENBQTBCSCxPQUFPLENBQUNJLFNBQWxDLEVBQTZDTCxRQUE3QyxDQUFOOztBQUNBLFdBQVM7QUFDUCxVQUFNLGtCQUFNLEdBQU4sQ0FBTjs7QUFDQSxRQUFJQSxRQUFRLEtBQUssTUFBTUQsVUFBVSxDQUFDTyxVQUFYLENBQXNCTCxPQUFPLENBQUNJLFNBQTlCLENBQVgsQ0FBWixFQUFrRTtBQUNoRSxhQUFPSixPQUFQO0FBQ0Q7O0FBQ0QsUUFBSSxFQUFFRSxPQUFGLElBQWEsQ0FBakIsRUFBb0I7QUFDbEI7QUFDRDtBQUNGOztBQUNELFFBQU0sSUFBSUksS0FBSixDQUFXLGNBQWFQLFFBQVMsU0FBakMsQ0FBTjtBQUNEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9mYW54dS93d3cvbm9kZS9zb2xhbmEtcHJvZ3JhbS1saWJyYXJ5L3Rva2VuLXN3YXAvanMvY2xpZW50L3V0aWwvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQGZsb3dcblxuaW1wb3J0IHtBY2NvdW50LCBDb25uZWN0aW9ufSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuXG5pbXBvcnQge3NsZWVwfSBmcm9tICcuL3NsZWVwJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG5ld0FjY291bnRXaXRoTGFtcG9ydHMoXG4gIGNvbm5lY3Rpb246IENvbm5lY3Rpb24sXG4gIGxhbXBvcnRzOiBudW1iZXIgPSAxMDAwMDAwLFxuKTogUHJvbWlzZTxBY2NvdW50PiB7XG4gIGNvbnN0IGFjY291bnQgPSBuZXcgQWNjb3VudCgpO1xuXG4gIGxldCByZXRyaWVzID0gMzA7XG4gIGF3YWl0IGNvbm5lY3Rpb24ucmVxdWVzdEFpcmRyb3AoYWNjb3VudC5wdWJsaWNLZXksIGxhbXBvcnRzKTtcbiAgZm9yICg7Oykge1xuICAgIGF3YWl0IHNsZWVwKDUwMCk7XG4gICAgaWYgKGxhbXBvcnRzID09IChhd2FpdCBjb25uZWN0aW9uLmdldEJhbGFuY2UoYWNjb3VudC5wdWJsaWNLZXkpKSkge1xuICAgICAgcmV0dXJuIGFjY291bnQ7XG4gICAgfVxuICAgIGlmICgtLXJldHJpZXMgPD0gMCkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHRocm93IG5ldyBFcnJvcihgQWlyZHJvcCBvZiAke2xhbXBvcnRzfSBmYWlsZWRgKTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "new-account-with-lamports.js"
      ],
      "names": [
        "newAccountWithLamports",
        "connection",
        "lamports",
        "account",
        "Account",
        "retries",
        "requestAirdrop",
        "publicKey",
        "getBalance",
        "Error"
      ],
      "mappings": ";;;;;;;AAEA;;AAEA;;AAEO,eAAeA,sBAAf,CACLC,UADK,EAELC,QAAgB,GAAG,OAFd,EAGa;AAClB,QAAMC,OAAO,GAAG,IAAIC,YAAJ,EAAhB;AAEA,MAAIC,OAAO,GAAG,EAAd;AACA,QAAMJ,UAAU,CAACK,cAAX,CAA0BH,OAAO,CAACI,SAAlC,EAA6CL,QAA7C,CAAN;;AACA,WAAS;AACP,UAAM,kBAAM,GAAN,CAAN;;AACA,QAAIA,QAAQ,KAAK,MAAMD,UAAU,CAACO,UAAX,CAAsBL,OAAO,CAACI,SAA9B,CAAX,CAAZ,EAAkE;AAChE,aAAOJ,OAAP;AACD;;AACD,QAAI,EAAEE,OAAF,IAAa,CAAjB,EAAoB;AAClB;AACD;AACF;;AACD,QAAM,IAAII,KAAJ,CAAW,cAAaP,QAAS,SAAjC,CAAN;AACD",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
      "sourcesContent": [
        "// @flow\n\nimport {Account, Connection} from '@solana/web3.js';\n\nimport {sleep} from './sleep';\n\nexport async function newAccountWithLamports(\n  connection: Connection,\n  lamports: number = 1000000,\n): Promise<Account> {\n  const account = new Account();\n\n  let retries = 30;\n  await connection.requestAirdrop(account.publicKey, lamports);\n  for (;;) {\n    await sleep(500);\n    if (lamports == (await connection.getBalance(account.publicKey))) {\n      return account;\n    }\n    if (--retries <= 0) {\n      break;\n    }\n  }\n  throw new Error(`Airdrop of ${lamports} failed`);\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622133640579
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/sleep.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/sleep.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/sleep.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/sleep.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
        "sourceFileName": "sleep.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sleep = sleep;\n\n// zzz\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNsZWVwLmpzIl0sIm5hbWVzIjpbInNsZWVwIiwibXMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTtBQUNPLFNBQVNBLEtBQVQsQ0FBZUMsRUFBZixFQUEwQztBQUMvQyxTQUFPLElBQUlDLE9BQUosQ0FBWUMsT0FBTyxJQUFJQyxVQUFVLENBQUNELE9BQUQsRUFBVUYsRUFBVixDQUFqQyxDQUFQO0FBQ0QiLCJzb3VyY2VSb290IjoiL1VzZXJzL2Zhbnh1L3d3dy9ub2RlL3NvbGFuYS1wcm9ncmFtLWxpYnJhcnkvdG9rZW4tc3dhcC9qcy9jbGllbnQvdXRpbC8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuXG4vLyB6enpcbmV4cG9ydCBmdW5jdGlvbiBzbGVlcChtczogbnVtYmVyKTogUHJvbWlzZTx2b2lkPiB7XG4gIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "sleep.js"
      ],
      "names": [
        "sleep",
        "ms",
        "Promise",
        "resolve",
        "setTimeout"
      ],
      "mappings": ";;;;;;;AAEA;AACO,SAASA,KAAT,CAAeC,EAAf,EAA0C;AAC/C,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAAP;AACD",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/client/util/",
      "sourcesContent": [
        "// @flow\n\n// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1619844473301
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/url.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/url.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/url.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/url.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/",
        "sourceFileName": "url.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.walletUrl = exports.urlTls = exports.url = exports.cluster = void 0;\n\nvar _web = require(\"@solana/web3.js\");\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\n// To connect to a public cluster, set `export LIVE=1` in your\n// environment. By default, `LIVE=1` will connect to the devnet cluster.\nfunction chooseCluster() {\n  _dotenv.default.config();\n\n  if (!process.env.LIVE) return;\n\n  switch (process.env.CLUSTER) {\n    case 'devnet':\n    case 'testnet':\n    case 'mainnet-beta':\n      {\n        return process.env.CLUSTER;\n      }\n  }\n\n  throw 'Unknown cluster \"' + process.env.CLUSTER + '\", check the .env file';\n}\n\nconst cluster = chooseCluster();\nexports.cluster = cluster;\nconst url = 'https://api.mainnet-beta.solana.com'; // export const url =\n//   process.env.RPC_URL ||\n//   (process.env.LIVE ? clusterApiUrl(cluster, false) : 'http://localhost:8899');\n\nexports.url = url;\nconst urlTls = process.env.RPC_URL || (process.env.LIVE ? (0, _web.clusterApiUrl)(cluster, true) : 'http://localhost:8899');\nexports.urlTls = urlTls;\nlet walletUrl = process.env.WALLET_URL || 'https://solana-example-webwallet.herokuapp.com/';\nexports.walletUrl = walletUrl;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVybC5qcyJdLCJuYW1lcyI6WyJjaG9vc2VDbHVzdGVyIiwiZG90ZW52IiwiY29uZmlnIiwicHJvY2VzcyIsImVudiIsIkxJVkUiLCJDTFVTVEVSIiwiY2x1c3RlciIsInVybCIsInVybFRscyIsIlJQQ19VUkwiLCJ3YWxsZXRVcmwiLCJXQUxMRVRfVVJMIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFKQTtBQUNBO0FBS0EsU0FBU0EsYUFBVCxHQUE4QztBQUM1Q0Msa0JBQU9DLE1BQVA7O0FBQ0EsTUFBSSxDQUFDQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBakIsRUFBdUI7O0FBQ3ZCLFVBQVFGLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRSxPQUFwQjtBQUNFLFNBQUssUUFBTDtBQUNBLFNBQUssU0FBTDtBQUNBLFNBQUssY0FBTDtBQUFxQjtBQUNuQixlQUFPSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsT0FBbkI7QUFDRDtBQUxIOztBQU9BLFFBQU0sc0JBQXNCSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsT0FBbEMsR0FBNEMsd0JBQWxEO0FBQ0Q7O0FBRU0sTUFBTUMsT0FBTyxHQUFHUCxhQUFhLEVBQTdCOztBQUVBLE1BQU1RLEdBQUcsR0FBRyxxQ0FBWixDLENBQ1A7QUFDQTtBQUNBOzs7QUFFTyxNQUFNQyxNQUFNLEdBQ2pCTixPQUFPLENBQUNDLEdBQVIsQ0FBWU0sT0FBWixLQUNDUCxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixHQUFtQix3QkFBY0UsT0FBZCxFQUF1QixJQUF2QixDQUFuQixHQUFrRCx1QkFEbkQsQ0FESzs7QUFJQSxJQUFJSSxTQUFTLEdBQ2xCUixPQUFPLENBQUNDLEdBQVIsQ0FBWVEsVUFBWixJQUEwQixpREFEckIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2Zhbnh1L3d3dy9ub2RlL3NvbGFuYS1wcm9ncmFtLWxpYnJhcnkvdG9rZW4tc3dhcC9qcy8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUbyBjb25uZWN0IHRvIGEgcHVibGljIGNsdXN0ZXIsIHNldCBgZXhwb3J0IExJVkU9MWAgaW4geW91clxuLy8gZW52aXJvbm1lbnQuIEJ5IGRlZmF1bHQsIGBMSVZFPTFgIHdpbGwgY29ubmVjdCB0byB0aGUgZGV2bmV0IGNsdXN0ZXIuXG5cbmltcG9ydCB7Y2x1c3RlckFwaVVybCwgQ2x1c3Rlcn0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52JztcblxuZnVuY3Rpb24gY2hvb3NlQ2x1c3RlcigpOiBDbHVzdGVyIHwgdW5kZWZpbmVkIHtcbiAgZG90ZW52LmNvbmZpZygpO1xuICBpZiAoIXByb2Nlc3MuZW52LkxJVkUpIHJldHVybjtcbiAgc3dpdGNoIChwcm9jZXNzLmVudi5DTFVTVEVSKSB7XG4gICAgY2FzZSAnZGV2bmV0JzpcbiAgICBjYXNlICd0ZXN0bmV0JzpcbiAgICBjYXNlICdtYWlubmV0LWJldGEnOiB7XG4gICAgICByZXR1cm4gcHJvY2Vzcy5lbnYuQ0xVU1RFUjtcbiAgICB9XG4gIH1cbiAgdGhyb3cgJ1Vua25vd24gY2x1c3RlciBcIicgKyBwcm9jZXNzLmVudi5DTFVTVEVSICsgJ1wiLCBjaGVjayB0aGUgLmVudiBmaWxlJztcbn1cblxuZXhwb3J0IGNvbnN0IGNsdXN0ZXIgPSBjaG9vc2VDbHVzdGVyKCk7XG5cbmV4cG9ydCBjb25zdCB1cmwgPSAnaHR0cHM6Ly9hcGkubWFpbm5ldC1iZXRhLnNvbGFuYS5jb20nO1xuLy8gZXhwb3J0IGNvbnN0IHVybCA9XG4vLyAgIHByb2Nlc3MuZW52LlJQQ19VUkwgfHxcbi8vICAgKHByb2Nlc3MuZW52LkxJVkUgPyBjbHVzdGVyQXBpVXJsKGNsdXN0ZXIsIGZhbHNlKSA6ICdodHRwOi8vbG9jYWxob3N0Ojg4OTknKTtcblxuZXhwb3J0IGNvbnN0IHVybFRscyA9XG4gIHByb2Nlc3MuZW52LlJQQ19VUkwgfHxcbiAgKHByb2Nlc3MuZW52LkxJVkUgPyBjbHVzdGVyQXBpVXJsKGNsdXN0ZXIsIHRydWUpIDogJ2h0dHA6Ly9sb2NhbGhvc3Q6ODg5OScpO1xuXG5leHBvcnQgbGV0IHdhbGxldFVybCA9XG4gIHByb2Nlc3MuZW52LldBTExFVF9VUkwgfHwgJ2h0dHBzOi8vc29sYW5hLWV4YW1wbGUtd2Vid2FsbGV0Lmhlcm9rdWFwcC5jb20vJztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "url.js"
      ],
      "names": [
        "chooseCluster",
        "dotenv",
        "config",
        "process",
        "env",
        "LIVE",
        "CLUSTER",
        "cluster",
        "url",
        "urlTls",
        "RPC_URL",
        "walletUrl",
        "WALLET_URL"
      ],
      "mappings": ";;;;;;;;;AAGA;;AACA;;AAJA;AACA;AAKA,SAASA,aAAT,GAA8C;AAC5CC,kBAAOC,MAAP;;AACA,MAAI,CAACC,OAAO,CAACC,GAAR,CAAYC,IAAjB,EAAuB;;AACvB,UAAQF,OAAO,CAACC,GAAR,CAAYE,OAApB;AACE,SAAK,QAAL;AACA,SAAK,SAAL;AACA,SAAK,cAAL;AAAqB;AACnB,eAAOH,OAAO,CAACC,GAAR,CAAYE,OAAnB;AACD;AALH;;AAOA,QAAM,sBAAsBH,OAAO,CAACC,GAAR,CAAYE,OAAlC,GAA4C,wBAAlD;AACD;;AAEM,MAAMC,OAAO,GAAGP,aAAa,EAA7B;;AAEA,MAAMQ,GAAG,GAAG,qCAAZ,C,CACP;AACA;AACA;;;AAEO,MAAMC,MAAM,GACjBN,OAAO,CAACC,GAAR,CAAYM,OAAZ,KACCP,OAAO,CAACC,GAAR,CAAYC,IAAZ,GAAmB,wBAAcE,OAAd,EAAuB,IAAvB,CAAnB,GAAkD,uBADnD,CADK;;AAIA,IAAII,SAAS,GAClBR,OAAO,CAACC,GAAR,CAAYQ,UAAZ,IAA0B,iDADrB",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/",
      "sourcesContent": [
        "// To connect to a public cluster, set `export LIVE=1` in your\n// environment. By default, `LIVE=1` will connect to the devnet cluster.\n\nimport {clusterApiUrl, Cluster} from '@solana/web3.js';\nimport dotenv from 'dotenv';\n\nfunction chooseCluster(): Cluster | undefined {\n  dotenv.config();\n  if (!process.env.LIVE) return;\n  switch (process.env.CLUSTER) {\n    case 'devnet':\n    case 'testnet':\n    case 'mainnet-beta': {\n      return process.env.CLUSTER;\n    }\n  }\n  throw 'Unknown cluster \"' + process.env.CLUSTER + '\", check the .env file';\n}\n\nexport const cluster = chooseCluster();\n\nexport const url = 'https://api.mainnet-beta.solana.com';\n// export const url =\n//   process.env.RPC_URL ||\n//   (process.env.LIVE ? clusterApiUrl(cluster, false) : 'http://localhost:8899');\n\nexport const urlTls =\n  process.env.RPC_URL ||\n  (process.env.LIVE ? clusterApiUrl(cluster, true) : 'http://localhost:8899');\n\nexport let walletUrl =\n  process.env.WALLET_URL || 'https://solana-example-webwallet.herokuapp.com/';\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1621864945543
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/tokens.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/tokens.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/tokens.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/tokens.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/",
        "sourceFileName": "tokens.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.three = exports.two = exports.one = void 0;\nlet one = [{\n  poolid: '8Fdtxoe8EXL8soEBA98Ziyv1KevfwmdPae84UXdTs7P1',\n  name: 'FARMv1',\n  rewardType: 'one',\n  mintAddress: 'AP58G14hoy4GGgZS4L8TzZgqXnk3hBvciFKW2Cb1RQ2J'\n}, {\n  poolid: 'Hs9JHLVdJuQUg2JJSW117w6vFJv5CbUA1JrSL5wYWY7T',\n  name: 'FARMv1-USDC',\n  rewardType: 'one',\n  mintAddress: '5LGMkePVneEJoiCK7B5nHTYkYop1buS3STaDGupkGBjQ'\n}, {\n  poolid: 'DpYtuyhkTg75cH9eTPPkghPTZGVbLixNTrr7UfQXFWNs',\n  name: 'SRM',\n  rewardType: 'one',\n  mintAddress: 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt'\n}, {\n  poolid: '96MbmZwErMs5VWK6ZGneLTGfcTzd96vDp33uhDKxwoAw',\n  name: 'STEP',\n  rewardType: 'one',\n  mintAddress: 'StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT'\n}, {\n  poolid: 'ChyPvRdHwAwie17i4GzTv2D2F6aLqKDbW3JjuYJ3xGd9',\n  name: 'ETH',\n  rewardType: 'one',\n  mintAddress: '2FPyTwcZLUg1MDrwsyoP4D6s1tM7hAkHYRjkNb5w6Pxk'\n}];\nexports.one = one;\nlet two = [{\n  poolid: 'A8hzKH6BHFQbL76gWgRaiCGHsQHLrTM4BJv3Swi7Ke1z',\n  name: 'RAY',\n  rewardType: 'one',\n  threePoolId: \"4EwbZo8BZXP5313z5A2H11MRBP15M5n6YxfmkjXESKAW\",\n  threePoolAuthority: \"4qD717qKoj3Sm8YfHMSR7tSKjWn5An817nArA6nGdcUR\",\n  threePoolLpTokenAccount: '8tnpAECxAT9nHBqR1Ba494Ar5dQMPGhL31MmPJz1zZvY',\n  // lp vault\n  threePoolRewardTokenAccount: 'BihEG2r7hYax6EherbRmuLLrySBuSXx4PYGd9gAsktKY',\n  // reward vaultÏ\n  mintAddress: '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R'\n}, {\n  poolid: '8WbgZrZzf8eiTWsNxrteGgpkA6Zw6Rn3QiJjpVD8wLuv',\n  name: 'RAY-USDC',\n  rewardType: 'two',\n  threePoolId: \"8nEWqxeDNZ2yo1izbPzY4nwR55isBZRaQk7CM8ntwUwR\",\n  threePoolAuthority: \"6vQGZLsHgpJdqh1ER7q2q6mjZ43QwzhtTofTzb2sUhNh\",\n  threePoolLpTokenAccount: '77ujS15hjUfFZkM8QAw4HMLvMGZg95Gcm6ixjA1bnk3M',\n  // lp vault\n  threePoolRewardTokenAccount: '3ejmkn5HpXR9KdVWkai1Ngo87sQSUyKXrx8wSakipkno',\n  mintAddress: 'BZFGfXMrjG2sS7QT2eiCDEevPFnkYYF7kzJpWfYxPbcx'\n}, {\n  poolid: 'H63Togisp4ZsTS8i6zVAqSPXYFYLsCUvESeNfSmwAByR',\n  name: 'RAY-USDT',\n  rewardType: 'two',\n  threePoolId: \"AvbVWpBi2e4C9HPmZgShGdPoNydG4Yw8GJvG9HUcLgce\",\n  threePoolAuthority: \"8JYVFy3pYsPSpPRsqf43KSJFnJzn83nnRLQgG88XKB8q\",\n  threePoolLpTokenAccount: '4u4AnMBHXehdpP5tbD6qzB5Q4iZmvKKR5aUr2gavG7aw',\n  // lp vault\n  threePoolRewardTokenAccount: 'HCHNuGzkqSnw9TbwpPv1gTnoqnqYepcojHw9DAToBrUj',\n  // reward vaultÏ\n  mintAddress: 'C3sT1R3nsw4AVdepvLTLKr5Gvszr7jufyBWUCvy4TUvT'\n}, {\n  poolid: 'HJvyw1w8PCjF5Cvhs2wazpe7sn2LJts4PDVKnwUi5wAx',\n  name: 'RAY-SRM',\n  rewardType: 'two',\n  threePoolId: \"HwEgvS79S53yzYUTRHShU6EuNmhR3WTX5tTZPUzBmwky\",\n  threePoolAuthority: \"9B3XWm89zX7NwaBB8VmT5mrWvxVpd9eyfQMeqkuLkcCF\",\n  threePoolLpTokenAccount: 'F4zXXzqkyT1GP5CVdEgC7qTcDfR8ox5Akm6RCbBdBsRp',\n  // lp vault\n  threePoolRewardTokenAccount: 'FW7omPaCCvgBgUFKwvwU2jf1w1wJGjDrJqurr3SeXn14',\n  // reward vault\n  mintAddress: 'DSX5E21RE9FB9hM8Nh8xcXQfPK6SzRaJiywemHBSsfup'\n}, {\n  poolid: 'HXC9XsUj87YGmu3MqXNwkYEH3etLJSFqnszboak9YpaX',\n  name: 'RAY-SOL',\n  rewardType: 'two',\n  threePoolId: \"ECqG3sxwJiq9TTYsRBd7fPGsBKYF4fyogo6Df7c13qdJ\",\n  threePoolAuthority: \"4Wf4om12g9xzEeeD139ffCuXn4W2huMcXziiSAzf7Nig\",\n  threePoolLpTokenAccount: '9kWnkQtMAW2bzKeLQsTdan1rEoypDHaAVnZRcoBPDBfQ',\n  // lp vault\n  threePoolRewardTokenAccount: '8z4kQbgQFe4zXE4NSozWJTJV14gD4evNq4CKn5ryB6S3',\n  // reward vault\n  mintAddress: 'F5PPQHGcznZ2FxD9JaxJMXaf7XkaFFJ6zzTBcW8osQjw'\n}, {\n  poolid: 'FwSM7fwLdxNRKUvPMmcefL5XsJhnNxxjfY7sDAtWH4cB',\n  name: 'RAY-ETH',\n  rewardType: 'two',\n  threePoolId: \"CYKDTwojSLVFEShB3tcTTfMjtBxUNtYfCTM4PiMFGkio\",\n  threePoolAuthority: \"Azmucec2jdgWagFkbnqmwYcsrtKPf1v1kcM95v6s1zxu\",\n  threePoolLpTokenAccount: 'EncPBQhpc5KLmcgRD2PutQz7wBBNQkVN2s8jjFWEw9no',\n  // lp vault\n  threePoolRewardTokenAccount: '8q8BHw7fP7mitLrb2jzw78qcSEgCvM7GTB5PzbSQobUt',\n  // reward vault\n  mintAddress: '8Q6MKy5Yxb9vG1mWzppMtMb2nrhNuCRNUkJTeiE3fuwD'\n}];\nexports.two = two;\nlet three = [{\n  poolid: '99CBzAdpyoXFKwXF3Ydvr7zJqziNkFBtBw6moLkWvVJU',\n  name: 'FIDA-RAY',\n  rewardType: 'three',\n  threePoolId: \"8rAdapvcC5vYNLXzChMgt56s6HCQGE6Lbo469g3WRTUh\",\n  threePoolAuthority: \"EcCKf3mgPtL6dNNAVG4gQQtLkAoTAUdf5vzFukkrviWq\",\n  threePoolRewardTokenAccount: \"7vnPTB2HAXFUAV5iiVZTNHgAnVYjgXcdumbbqfeK6ugp\",\n  threePoolLpTokenAccount: 'H6kzwNNg9zbgC1YBjvCN4BdebtA4NusvgUhUSDZoz8rP',\n  // lp vault\n  threePoolRewardTokenAccountB: 'EGHdQm9KGLz6nw7W4rK13DyAMMJcGP9RpzCJaXiq75kQ',\n  // reward vault\n  threePoolUserInfo: \"6mRNC5ZHq6J1S9bCaxxRpYTYz366cfD1R237ZXAJNrgo\",\n  mintAddress: 'DsBuznXRTmzvEdb36Dx3aVLVo1XmH7r1PRZUFugLPTFv',\n  other: 'EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp'\n}, {\n  poolid: '2mgagJBfjagbHGBFaz4KEtu2aAYHHZ5ny4LXG8Mak1fM',\n  name: 'MAPS-RAY',\n  rewardType: 'three',\n  threePoolId: \"Chb6atEWGmH2NitCqrCEMHB8uKWYQiiVaBnmJQDudm87\",\n  threePoolAuthority: \"BcmgQZXCDPCduv3reT8LDQNqvGeGMZtFhBxyLYdrnCjE\",\n  threePoolLpTokenAccount: '5uaBAwu1Sff58KNKGTwfacsjsrMU3wg6jtGtMWwiZd5B',\n  // lp vault\n  threePoolRewardTokenAccount: \"4LVikvk3gZEHaTUNh7L8bsx5By6NNnkqpKfcdJTWTD7Z\",\n  threePoolRewardTokenAccountB: '3UWGpEe2NLD9oWPW1zdXGZRCvJxkNSC2puUWooNEugdS',\n  // reward vault\n  mintAddress: 'CcKK8srfVdTSsFGV3VLBb2YDbzF4T4NM2C3UEjC39RLP',\n  other: 'MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb'\n}, {\n  poolid: 'GFPTJrizm3B2CvEBKkNRv46SGhk4G49H7hdM81WTs87j',\n  name: 'OXY-RAY',\n  rewardType: 'three',\n  threePoolId: \"7Hug9fKfTrasG3hHonXTfSnvv37mDeyoBHbVwyDjw693\",\n  threePoolAuthority: \"q42hNDzfBDQ1WzKjxkueEtBzX1VPJ2hnikJXFjSYC91\",\n  threePoolLpTokenAccount: 'DgCSAJiicdEggHJxM7Vs2j59yM5wMJMCGzUHALiVDhtX',\n  // lp vault\n  threePoolRewardTokenAccount: \"3BGPPWYJMSFaWmq21x8Feqvgsii1fVmJiivRuPJSgXe1\",\n  threePoolRewardTokenAccountB: '5uX6ceRRxDRrcARddFkypCZV5MXz5KUQDr7Zf9ZnSSLf',\n  // reward vault\n  mintAddress: 'FwaX9W7iThTZH5MFeasxdLpxTVxRcM7ZHieTCnYog8Yb',\n  other: 'z3dn17yLaGMKffVogeFHQ9zWVcXgqgf3PQnDsNs2g6M'\n}, {\n  poolid: '21ky5u7evEWjAFDWXp3mYLqpejnjGcGthBneweHvfeca',\n  name: 'KIN-RAY',\n  rewardType: 'three',\n  threePoolId: \"FgApVk6mASrkuWNxmsFvsaAYkFKqdiwMTvYZK36A2DaC\",\n  threePoolAuthority: \"7kEx8qnkZPkRXV6f4ztf27zYjCACBHY3PUMfuiYJsoML\",\n  threePoolLpTokenAccount: '7fgDjhZn9GqRZbbCregr9tpkbWSKjibdCsJNBYbLhLir',\n  // lp vault\n  threePoolRewardTokenAccount: \"5XZjRyEo8Wr2CtSE5bpoKioThT9czK1dUebbK87Lqkaa\",\n  threePoolRewardTokenAccountB: '8jGJ3ST1j9eemfC6N2qQevtUdwxT7TpXW1NmvWyvLLVs',\n  // reward vault\n  mintAddress: 'CHT8sft3h3gpLYbCcZ9o27mT5s3Z6VifBVbUiDvprHPW',\n  other: 'kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6'\n}, {\n  poolid: '5D5XRdQ5XAaTj85oNUF6bXmZoS29EVbrERYFsHHqMb37',\n  name: 'STEP-USDC',\n  rewardType: 'three',\n  threePoolId: \"8xhjCzfzVcP79jE7jXR2xtNaSL6aJYoDRLVT9FMjpRTC\",\n  threePoolAuthority: \"6wRMPrHKFzj3qB4j5yj4y9mDF89fZ6w7gD1cEzCJwT9B\",\n  threePoolLpTokenAccount: 'DgCSAJiicdEggHJxM7Vs2j59yM5wMJMCGzUHALiVDhtX',\n  // lp vault\n  threePoolRewardTokenAccount: \"3zSiR4XrrRPhsom2hh9iigYZZ7uCpMucfJnZRgREgH8j\",\n  threePoolRewardTokenAccountB: '4n3vRUk3wdtbGWgMFSaxUcnGLKwa2wiWVhqw7kv9JDVS',\n  // reward vault\n  mintAddress: '3k8BDobgihmk72jVmXYLE168bxxQUhqqyESW4dQVktqC',\n  other: 'StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT'\n}, {\n  poolid: '81UGQATWUF27dZJHRbwp6acxdCbpjFMrJwbkt3yTjQmF',\n  name: 'MEDIA-USDC',\n  rewardType: 'three',\n  threePoolId: \"Ef1gD9JMzWF6PNw2uc4744zouh57GyWAeVTjHHbQ2nsu\",\n  threePoolAuthority: \"3dhU2g3MSHK3LwjuE1VsEJCsNeWKyBJUMHt4EUXepTjs\",\n  threePoolLpTokenAccount: 'DGjRtqsjeubLCLPD3yH8fj1d7TnrD3jKBpwa1UbVk7E6',\n  // lp vault\n  threePoolRewardTokenAccount: \"Uen8f9Rn42i8sDTK5vEttrnX9AUwXV3yf6DFU63mKDb\",\n  threePoolRewardTokenAccountB: 'Ek6n7Myojb6pSpQuqk5AyS7KXQdXkJyZT7ki9baYCxds',\n  // reward vault\n  mintAddress: 'A5zanvgtioZGiJMdEyaKN4XQmJsp1p7uVxaq2696REvQ',\n  other: 'ETAtLmCmsoiEEKfNrHKJ2kYy3MoABhU6NQvpSfij5tDs'\n}, {\n  poolid: '6WQYovXQWLAWxkBhjUpWJNuz9NwBsxL5qeh5CFKGqo77',\n  name: 'COPE-USDC',\n  rewardType: 'three',\n  threePoolId: \"AxVvbT9fDFEkmdLwKUJRY5HsG2RXAZbe1dRAgJ2bDDwg\",\n  threePoolAuthority: \"3n1Vdmqu1MBUpBYMpYbpJAVFv4MeNMEa82waruLy7BDu\",\n  threePoolLpTokenAccount: 'BHLzrd5MgQy4NgmUsn542yXRZWkz1iV5bfWg8s8D4tVL',\n  // lp vault\n  threePoolRewardTokenAccount: \"7nGY6xHCUR2MxJnHT1qvArRUEnpo2DsGGf6Pdu3tt9gv\",\n  threePoolRewardTokenAccountB: '6ezx1EivkxsJcZLYhSJFLc3nUs25iyubf8PPyRNEX3pL',\n  // reward vault\n  mintAddress: 'Cz1kUvHw98imKkrqqu95GQB9h1frY8RikxPojMwWKGXf',\n  other: '8HGyAAB1yoM1ttS7pXjHMa3dukTFGQggnFFH3hJZgzQh'\n}];\nexports.three = three;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRva2Vucy5qcyJdLCJuYW1lcyI6WyJvbmUiLCJwb29saWQiLCJuYW1lIiwicmV3YXJkVHlwZSIsIm1pbnRBZGRyZXNzIiwidHdvIiwidGhyZWVQb29sSWQiLCJ0aHJlZVBvb2xBdXRob3JpdHkiLCJ0aHJlZVBvb2xMcFRva2VuQWNjb3VudCIsInRocmVlUG9vbFJld2FyZFRva2VuQWNjb3VudCIsInRocmVlIiwidGhyZWVQb29sUmV3YXJkVG9rZW5BY2NvdW50QiIsInRocmVlUG9vbFVzZXJJbmZvIiwib3RoZXIiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLElBQUlBLEdBQUcsR0FBRyxDQUNiO0FBQ0lDLEVBQUFBLE1BQU0sRUFBRSw4Q0FEWjtBQUVJQyxFQUFBQSxJQUFJLEVBQUUsUUFGVjtBQUdJQyxFQUFBQSxVQUFVLEVBQUUsS0FIaEI7QUFJSUMsRUFBQUEsV0FBVyxFQUFFO0FBSmpCLENBRGEsRUFPYjtBQUNJSCxFQUFBQSxNQUFNLEVBQUUsOENBRFo7QUFFSUMsRUFBQUEsSUFBSSxFQUFFLGFBRlY7QUFHSUMsRUFBQUEsVUFBVSxFQUFFLEtBSGhCO0FBSUlDLEVBQUFBLFdBQVcsRUFBRTtBQUpqQixDQVBhLEVBYWI7QUFDSUgsRUFBQUEsTUFBTSxFQUFFLDhDQURaO0FBRUlDLEVBQUFBLElBQUksRUFBRSxLQUZWO0FBR0lDLEVBQUFBLFVBQVUsRUFBRSxLQUhoQjtBQUlJQyxFQUFBQSxXQUFXLEVBQUU7QUFKakIsQ0FiYSxFQW1CYjtBQUNJSCxFQUFBQSxNQUFNLEVBQUUsOENBRFo7QUFFSUMsRUFBQUEsSUFBSSxFQUFFLE1BRlY7QUFHSUMsRUFBQUEsVUFBVSxFQUFFLEtBSGhCO0FBSUlDLEVBQUFBLFdBQVcsRUFBRTtBQUpqQixDQW5CYSxFQXlCYjtBQUNJSCxFQUFBQSxNQUFNLEVBQUUsOENBRFo7QUFFSUMsRUFBQUEsSUFBSSxFQUFFLEtBRlY7QUFHSUMsRUFBQUEsVUFBVSxFQUFFLEtBSGhCO0FBSUlDLEVBQUFBLFdBQVcsRUFBRTtBQUpq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RlY7QUFHSUMsRUFBQUEsVUFBVSxFQUFFLE9BSGhCO0FBS0lHLEVBQUFBLFdBQVcsRUFBRSw4Q0FMakI7QUFNSUMsRUFBQUEsa0JBQWtCLEVBQUUsOENBTnhCO0FBT0lDLEVBQUFBLHVCQUF1QixFQUFFLDhDQVA3QjtBQU82RTtBQUN6RUMsRUFBQUEsMkJBQTJCLEVBQUUsOENBUmpDO0FBU0lFLEVBQUFBLDRCQUE0QixFQUFFLDhDQVRsQztBQVNrRjtBQUU5RVAsRUFBQUEsV0FBVyxFQUFFLDhDQVhqQjtBQWFJUyxFQUFBQSxLQUFLLEVBQUU7QUFiWCxDQXZGYyxDQUFYIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9mYW54dS93d3cvbm9kZS9zb2xhbmEtcHJvZ3JhbS1saWJyYXJ5L3Rva2VuLXN3YXAvanMvY2xpLyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBsZXQgb25lID0gW1xuICAgIHtcbiAgICAgICAgcG9vbGlkOiAnOEZkdHhvZThFWEw4c29FQkE5OFppeXYxS2V2ZndtZFBhZTg0VVhkVHM3UDEnLFxuICAgICAgICBuYW1lOiAnRkFSTXYxJyxcbiAgICAgICAgcmV3YXJkVHlwZTogJ29uZScsXG4gICAgICAgIG1pbnRBZGRyZXNzOiAnQVA1OEcxNGhveTRHR2daUzRMOFR6WmdxWG5rM2hCdmNpRktXMkNiMVJRMkonLFxuICAgIH0sXG4gICAge1xuICAgICAgICBwb29saWQ6ICdIczlKSExWZEp1UVVnMkpKU1cxMTd3NnZGSnY1Q2JVQTFKclNMNXdZV1k3VCcsXG4gICAgICAgIG5hbWU6ICdGQVJNdjEtVVNEQycsXG4gICAgICAgIHJld2FyZFR5cGU6ICdvbmUnLFxuICAgICAgICBtaW50QWRkcmVzczogJzVMR01rZVBWbmVFSm9pQ0s3QjVuSFRZa1lvcDFidVMzU1RhREd1cGtHQmpRJyxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcG9vbGlkOiAnRHBZdHV5aGtUZzc1Y0g5ZVRQUGtnaFBUWkdWYkxpeE5UcnI3VWZRWEZXTnMnLFxuICAgICAgICBuYW1lOiAnU1JNJyxcbiAgICAgICAgcmV3YXJkVHlwZTogJ29uZScsXG4gICAgICAgIG1pbnRBZGRyZXNzOiAnU1JNdUFwVk5keFhva2s1R1Q3WEQ1Y1VVZ1hNQkNvQXoyTEhldUFvS1dSdCcsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHBvb2xpZDogJzk2TWJtWndFck1zNVZXSzZaR25lTFRHZmNUemQ5NnZEcDMzdWhES3h3b0F3JyxcbiAgICAgICAgbmFtZTogJ1NURVAnLFxuICAgICAgICByZXdhcmRUeXBlOiAnb25lJyxcbiAgICAgICAgbWludEFkZHJlc3M6ICdTdGVwQXNjUW9FaW9GeHhXR25oMnNMQkRGcDlkOHJ2S3oyWXAzOWlEcHlUJyxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcG9vbGlkOiAnQ2h5UHZSZEh3QXdpZTE3aTRHelR2MkQyRjZhTHFLRGJXM0pqdVlKM3hHZDknLFxuICAgICAgICBuYW1lOiAnRVRIJyxcbiAgICAgICAgcmV3YXJkVHlwZTogJ29uZScsXG4gICAgICAgIG1pbnRBZGRyZXNzOiAnMkZQeVR3Y1pMVWcxTURyd3N5b1A0RDZzMXRNN2hBa0hZUmprTmI1dzZQeGsnLFxuICAgIH1cblxuXVxuXG5cbmV4cG9ydCBsZXQgdHdvID0gW1xuICAgIHtcbiAgICAgICAgcG9vbGlkOiAnQThoektINkJIRlFiTDc2Z1dnUmFpQ0dIc1FITHJUTTRCSnYzU3dpN0tlMXonLFxuICAgICAgICBuYW1lOiAnUkFZJyxcbiAgICAgICAgcmV3YXJkVHlwZTogJ29uZScsXG5cbiAgICAgICAgdGhyZWVQb29sSWQ6IFwiNEV3YlpvOEJaWFA1MzEzejVBMkgxMU1SQlAxNU01bjZZeGZta2pYRVNLQVdcIixcbiAgICAgICAgdGhyZWVQb29sQXV0aG9yaXR5OiBcIjRxRDcxN3FLb2ozU204WWZITVNSN3RTS2pXbjVBbjgxN25BckE2bkdkY1VSXCIsXG4gICAgICAgIHRocmVlUG9vbExwVG9rZW5BY2NvdW50OiAnOHRucEFFQ3hBVDluSEJxUjFCYTQ5NEFyNWRRTVBHaEwzMU1tUEp6MXpadlknLCAvLyBscCB2YXVsdFxuICAgICAgICB0aHJlZVBvb2xSZXdhcmRUb2tlbkFjY291bnQ6ICdCaWhFRzJyN2hZYXg2RWhlcmJSbXVMTHJ5U0J1U1h4NFBZR2Q5Z0Fza3RLWScsIC8vIHJld2FyZCB2YXVsdMOPXG4gICAgICAgIG1pbnRBZGRyZXNzOiAnNGszRHlqenZ6cDhlTVpXVVhiQkNqRXZ3U2trazU5UzVpQ05MWTNRcmtYNlInLFxuICAgIH0sXG4gICAge1xuICAgICAgICBwb29saWQ6ICc4V2JnWnJaemY4ZWlUV3NOeHJ0ZUdncGtBNlp3NlJuM1FpSmpwVkQ4d0x1dicsXG4gICAgICAgIG5hbWU6ICdSQVktVVNEQycsXG4gICAgICAgIHJld2FyZFR5cGU6ICd0d28nLFxuICAgICAgICB0aHJlZVBvb2xJZDogXCI4bkVXcXhlRE5aMnlvMWl6YlB6WTRud1I1NWlzQlpSYVFrN0NNOG50d1V3UlwiLFxuICAgICAgICB0aHJlZVBvb2xBdXRob3JpdHk6IFwiNnZRR1pMc0hncEpkcWgxRVI3cTJxNm1qWjQzUXd6aHRUb2ZUemIyc1VoTmhcIixcbiAgICAgICAgdGhyZWVQb29sTHBUb2tlbkFjY291bnQ6ICc3N3VqUzE1aGpVZkZaa004UUF3NEhNTHZNR1pnOTVHY202aXhqQTFibmszTScsIC8vIGxwIHZhdWx0XG4gICAgICAgIHRocmVlUG9vbFJld2FyZFRva2VuQWNjb3VudDogJzNlam1rbjVIcFhSOUtkVldrYWkxTmdvODdzUVNVeUtYcng4d1Nha2lwa25vJyxcbiAgICAgICAgbWludEFkZHJlc3M6ICdCWkZHZlhNcmpHMnNTN1FUMmVpQ0RFZXZQRm5rWVlGN2t6SnBXZll4UGJjeCcsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHBvb2xpZDogJ0g2M1RvZ2lzcDRac1RTOGk2elZBcVNQWFlGWUxzQ1V2RVNlTmZTbXdBQnlSJyxcbiAgICAgICAgbmFtZTogJ1JBWS1VU0RUJyxcbiAgICAgICAgcmV3YXJkVHlwZTogJ3R3bycsXG4gICAgICAgIHRocmVlUG9vbElkOiBcIkF2YlZXcEJpMmU0QzlIUG1aZ1NoR2RQb055ZEc0WXc4R0p2RzlIVWNMZ2NlXCIsXG4gICAgICAgIHRocmVlUG9vbEF1dGhvcml0eTogXCI4SllWRnkzcFlzUFNwUFJzcWY0M0tTSkZuSnpuODNublJMUWdHODhYS0I4cVwiLFxuICAgICAgICB0aHJlZVBvb2xMcFRva2VuQWNjb3VudDogJzR1NEFuTUJIWGVoZHBQNXRiRDZxekI1UTRpWm12S0tSNWFVcjJnYXZHN2F3JywgLy8gbHAgdmF1bHRcbiAgICAgICAgdGhyZWVQb29sUmV3YXJkVG9rZW5BY2NvdW50OiAnSENITnVHemtxU253OVRid3BQdjFnVG5vcW5xWWVwY29qSHc5REFUb0JyVWonLCAvLyByZXdhcmQgdmF1bHTDj1xuICAgICAgICBtaW50QWRkcmVzczogJ0Mzc1QxUjNuc3c0QVZkZXB2TFRMS3I1R3ZzenI3anVmeUJXVUN2eTRUVXZUJyxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcG9vbGlkOiAnSEp2eXcxdzhQQ2pGNUN2aHMyd2F6cGU3c24yTEp0czRQRFZLbndVaTV3QXgnLFxuICAgICAgICBuYW1lOiAnUkFZLVNSTScsXG4gICAgICAgIHJld2FyZFR5cGU6ICd0d28nLFxuICAgICAgICB0aHJlZVBvb2xJZDogXCJId0VndlM3OVM1M3l6WVVUUkhTaFU2RXVObWhSM1dUWDV0VFpQVXpCbXdreVwiLFxuICAgICAgICB0aHJlZVBvb2xBdXRob3JpdHk6IFwiOUIzWFdtODl6WDdOd2FCQjhWbVQ1bXJXdnhWcGQ5ZXlmUU1lcWt1TGtjQ0ZcIixcbiAgICAgICAgdGhyZWVQb29sTHBUb2tlbkFjY291bnQ6ICdGNHpYWHpxa3lUMUdQNUNWZEVnQzdxVGNEZlI4b3g1QWttNlJDYkJkQnNScCcsIC8vIGxwIHZhdWx0XG4gICAgICAgIHRocmVlUG9vbFJld2FyZFRva2VuQWNjb3VudDogJ0ZXN29tUGFDQ3ZnQmdVRkt3dndVMmpmMXcxd0pHakRySnF1cnIzU2VYbjE0JywgLy8gcmV3YXJkIHZhdWx0XG4gICAgICAgIG1pbnRBZGRyZXNzOiAnRFNYNUUyMVJFOUZCOWhNOE5oOHhjWFFmUEs2U3pSYUppeXdlbUhCU3NmdXAnLFxuICAgIH0sXG4gICAge1xuICAgICAgICBwb29saWQ6ICdIWEM5WHNVajg3WUdtdTNNcVhOd2tZRUgzZXRMSlNGcW5zemJvYWs5WXBhWCcsXG4gICAgICAgIG5hbWU6ICdSQVktU09MJyxcbiAgICAgICAgcmV3YXJkVHlwZTogJ3R3bycsXG4gICAgICAgIHRocmVlUG9vbElkOiBcIkVDcUczc3h3SmlxOVRUWXNSQmQ3ZlBHc0JLWUY0ZnlvZ282RGY3YzEzcWRKXCIsXG4gICAgICAgIHRocmVlUG9vbEF1dGhvcml0eTogXCI0V2Y0b20xMmc5eHpFZWVEMTM5ZmZDdVhuNFcyaHVNY1h6aWlTQXpmN05pZ1wiLFxuICAgICAgICB0aHJlZVBvb2xMcFRva2VuQWNjb3VudDogJzlrV25rUXRNQVcyYnpLZUxRc1RkYW4xckVveXBESGFBVm5aUmNvQlBEQmZRJywgLy8gbHAgdmF1bHRcbiAgICAgICAgdGhyZWVQb29sUmV3YXJkVG9rZW5BY2NvdW50OiAnOHo0a1FiZ1FGZTR6WEU0TlNveldKVEpWMTRnRDRldk5xNENLbjVyeUI2UzMnLCAvLyByZXdhcmQgdmF1bHRcbiAgICAgICAgbWludEFkZHJlc3M6ICdGNVBQUUhHY3puWjJGeEQ5SmF4Sk1YYWY3WGthRkZKNnp6VEJjVzhvc1FqdycsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHBvb2xpZDogJ0Z3U003ZndMZHhOUktVdlBNbWNlZkw1WHNKaG5OeHhqZlk3c0RBdFdINGNCJyxcbiAgICAgICAgbmFtZTogJ1JBWS1FVEgnLFxuICAgICAgICByZXdhcmRUeXBlOiAndHdvJyxcbiAgICAgICAgdGhyZWVQb29sSWQ6IFwiQ1lLRFR3b2pTTFZGRVNoQjN0Y1RUZk1qdEJ4VU50WWZDVE00UGlNRkdraW9cIixcbiAgICAgICAgdGhyZWVQb29sQXV0aG9yaXR5OiBcIkF6bXVjZWMyamRnV2FnRmtibnFtd1ljc3J0S1BmMXYxa2NNOTV2NnMxenh1XCIsXG4gICAgICAgIHRocmVlUG9vbExwVG9rZW5BY2NvdW50OiAnRW5jUEJRaHBjNUtMbWNnUkQyUHV0UXo3d0JCTlFrVk4yczhqakZXRXc5bm8nLCAvLyBscCB2YXVsdFxuICAgICAgICB0aHJlZVBvb2xSZXdhcmRUb2tlbkFjY291bnQ6ICc4cThCSHc3ZlA3bWl0THJiMmp6dzc4cWNTRWdDdk03R1RCNVB6YlNRb2JVdCcsIC8vIHJld2FyZCB2YXVsdFxuICAgICAgICBtaW50QWRkcmVzczogJzhRNk1LeTVZeGI5dkcxbVd6cHBNdE1iMm5yaE51Q1JOVWtKVGVpRTNmdXdEJyxcbiAgICB9LFxuXG5dXG5cbmV4cG9ydCBsZXQgdGhyZWUgPVtcbiAgICB7XG4gICAgICAgIHBvb2xpZDogJzk5Q0J6QWRweW9YRkt3WEYzWWR2cjd6SnF6aU5rRkJ0Qnc2bW9Ma1d2VkpVJyxcbiAgICAgICAgbmFtZTogJ0ZJREEtUkFZJyxcbiAgICAgICAgcmV3YXJkVHlwZTogJ3RocmVlJyxcbiAgICAgICAgdGhyZWVQb29sSWQ6IFwiOHJBZGFwdmNDNXZZTkxYekNoTWd0NTZzNkhDUUdFNkxibzQ2OWczV1JUVWhcIixcbiAgICAgICAgdGhyZWVQb29sQXV0aG9yaXR5OiBcIkVjQ0tmM21nUHRMNmROTkFWRzRnUVF0TGtBb1RBVWRmNXZ6RnVra3J2aVdxXCIsXG4gICAgICAgIHRocmVlUG9vbFJld2FyZFRva2VuQWNjb3VudDogXCI3dm5QVEIySEFYRlVBVjVpaVZaVE5IZ0FuVllqZ1hjZHVtYmJxZmVLNnVncFwiLFxuICAgICAgICB0aHJlZVBvb2xMcFRva2VuQWNjb3VudDogJ0g2a3p3Tk5nOXpiZ0MxWUJqdkNONEJkZWJ0QTROdXN2Z1VoVVNEWm96OHJQJywgLy8gbHAgdmF1bHRcbiAgICAgICAgdGhyZWVQb29sUmV3YXJkVG9rZW5BY2NvdW50QjogJ0VHSGRRbTlLR0x6Nm53N1c0cksxM0R5QU1NSmNHUDlScHpDSmFYaXE3NWtRJywgLy8gcmV3YXJkIHZhdWx0XG4gICAgICAgIHRocmVlUG9vbFVzZXJJbmZvOiBcIjZtUk5DNVpIcTZKMVM5YkNheHhScFlUWXozNjZjZkQxUjIzN1pYQUpOcmdvXCIsXG4gICAgICAgIG1pbnRBZGRyZXNzOiAnRHNCdXpuWFJUbXp2RWRiMzZEeDNhVkxWbzFYbUg3cjFQUlpVRnVnTFBURnYnLFxuICAgICAgICBvdGhlcjogJ0VjaGVzeWZYZVBLZEx0b2laU0w4cEJlOE15YWd5eThaUnFzQUNOQ0ZHbnZwJyxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcG9vbGlkOiAnMm1nYWdKQmZqYWdiSEdCRmF6NEtFdHUyYUFZSEhaNW55NExYRzhNYWsxZk0nLFxuICAgICAgICBuYW1lOiAnTUFQUy1SQVknLFxuICAgICAgICByZXdhcmRUeXBlOiAndGhyZWUnLFxuXG4gICAgICAgIHRocmVlUG9vbElkOiBcIkNoYjZhdEVXR21IMk5pdENxckNFTUhCOHVLV1lRaWlWYUJubUpRRHVkbTg3XCIsXG4gICAgICAgIHRocmVlUG9vbEF1dGhvcml0eTogXCJCY21nUVpYQ0RQQ2R1djNyZVQ4TERRTnF2R2VHTVp0RmhCeHlMWWRybkNqRVwiLFxuICAgICAgICB0aHJlZVBvb2xMcFRva2VuQWNjb3VudDogJzV1YUJBd3UxU2ZmNThLTktHVHdmYWNzanNyTVUzd2c2anRHdE1Xd2laZDVCJywgLy8gbHAgdmF1bHRcbiAgICAgICAgdGhyZWVQb29sUmV3YXJkVG9rZW5BY2NvdW50OiBcIjRMVmlrdmszZ1pFSGFUVU5oN0w4YnN4NUJ5Nk5ObmtxcEtmY2RKVFdURDdaXCIsXG4gICAgICAgIHRocmVlUG9vbFJld2FyZFRva2VuQWNjb3VudEI6ICczVVdHcEVlMk5MRDlvV1BXMXpkWEdaUkN2SnhrTlNDMnB1VVdvb05FdWdkUycsIC8vIHJld2FyZCB2YXVsdFxuXG4gICAgICAgIG1pbnRBZGRyZXNzOiAnQ2NLSzhzcmZWZFRTc0ZHVjNWTEJiMllEYnpGNFQ0Tk0yQzNVRWpDMzlSTFAnLFxuICAgICAgICBvdGhlcjogJ01BUFM0MU1EYWhaOVFkS1hoVmE0ZFdCOVJ1eWZWNFhxaHlBWjhYY1llcGInLFxuICAgIH0sXG4gICAge1xuICAgICAgICBwb29saWQ6ICdHRlBUSnJpem0zQjJDdkVCS2tOUnY0NlNHaGs0RzQ5SDdoZE04MVdUczg3aicsXG4gICAgICAgIG5hbWU6ICdPWFktUkFZJyxcbiAgICAgICAgcmV3YXJkVHlwZTogJ3RocmVlJyxcblxuICAgICAgICB0aHJlZVBvb2xJZDogXCI3SHVnOWZLZlRyYXNHM2hIb25YVGZTbnZ2MzdtRGV5b0JIYlZ3eURqdzY5M1wiLFxuICAgICAgICB0aHJlZVBvb2xBdXRob3JpdHk6IFwicTQyaE5EemZCRFExV3pLanhrdWVFdEJ6WDFWUEoyaG5pa0pYRmpTWUM5MVwiLFxuICAgICAgICB0aHJlZVBvb2xMcFRva2VuQWNjb3VudDogJ0RnQ1NBSmlpY2RFZ2dISnhNN1ZzMmo1OXlNNXdNSk1DR3pVSEFMaVZEaHRYJywgLy8gbHAgdmF1bHRcbiAgICAgICAgdGhyZWVQb29sUmV3YXJkVG9rZW5BY2NvdW50OiBcIjNCR1BQV1lKTVNGYVdtcTIxeDhGZXF2Z3NpaTFmVm1KaWl2UnVQSlNnWGUxXCIsXG4gICAgICAgIHRocmVlUG9vbFJld2FyZFRva2VuQWNjb3VudEI6ICc1dVg2Y2VSUnhEUnJjQVJkZEZreXBDWlY1TVh6NUtVUURyN1pmOVpuU1NMZicsIC8vIHJld2FyZCB2YXVsdFxuXG4gICAgICAgIG1pbnRBZGRyZXNzOiAnRndhWDlXN2lUaFRaSDVNRmVhc3hkTHB4VFZ4UmNNN1pIaWVUQ25Zb2c4WWInLFxuXG4gICAgICAgIG90aGVyOiAnejNkbjE3eUxhR01LZmZWb2dlRkhROXpXVmNYZ3FnZjNQUW5Ec05zMmc2TScsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHBvb2xpZDogJzIxa3k1dTdldkVXakFGRFdYcDNtWUxxcGVqbmpHY0d0aEJuZXdlSHZmZWNhJyxcbiAgICAgICAgbmFtZTogJ0tJTi1SQVknLFxuICAgICAgICByZXdhcmRUeXBlOiAndGhyZWUnLFxuXG4gICAgICAgIHRocmVlUG9vbElkOiBcIkZnQXBWazZtQVNya3VXTnhtc0Z2c2FBWWtGS3FkaXdNVHZZWkszNkEyRGFDXCIsXG4gICAgICAgIHRocmVlUG9vbEF1dGhvcml0eTogXCI3a0V4OHFua1pQa1JYVjZmNHp0ZjI3ellqQ0FDQkhZM1BVTWZ1aVlKc29NTFwiLFxuICAgICAgICB0aHJlZVBvb2xMcFRva2VuQWNjb3VudDogJzdmZ0RqaFpuOUdxUlpiYkNyZWdyOXRwa2JXU0tqaWJkQ3NKTkJZYkxoTGlyJywgLy8gbHAgdmF1bHRcbiAgICAgICAgdGhyZWVQb29sUmV3YXJkVG9rZW5BY2NvdW50OiBcIjVYWmpSeUVvOFdyMkN0U0U1YnBvS2lvVGhUOWN6SzFkVWViYks4N0xxa2FhXCIsXG4gICAgICAgIHRocmVlUG9vbFJld2FyZFRva2VuQWNjb3VudEI6ICc4akdKM1NUMWo5ZWVtZkM2TjJxUWV2dFVkd3hUN1RwWFcxTm12V3l2TExWcycsIC8vIHJld2FyZCB2YXVsdFxuXG4gICAgICAgIG1pbnRBZGRyZXNzOiAnQ0hUOHNmdDNoM2dwTFliQ2NaOW8yN21UNXMzWjZWaWZCVmJVaUR2cHJIUFcnLFxuICAgICAgICBvdGhlcjogJ2tpblhkRWNwRFFlSFBFdVFucW1VZ3RZeWtxS0dWRnE2Q2VWWDVpQUhKcTYnLFxuICAgIH0sXG4gICAge1xuICAgICAgICBwb29saWQ6ICc1RDVYUmRRNVhBYVRqODVvTlVGNmJYbVpvUzI5RVZickVSWUZzSEhxTWIzNycsXG4gICAgICAgIG5hbWU6ICdTVEVQLVVTREMnLFxuICAgICAgICByZXdhcmRUeXBlOiAndGhyZWUnLFxuXG4gICAgICAgIHRocmVlUG9vbElkOiBcIjh4aGpDemZ6VmNQNzlqRTdqWFIyeHROYVNMNmFKWW9EUkxWVDlGTWpwUlRDXCIsXG4gICAgICAgIHRocmVlUG9vbEF1dGhvcml0eTogXCI2d1JNUHJIS0Z6ajNxQjRqNXlqNHk5bURGODlmWjZ3N2dEMWNFekNKd1Q5QlwiLFxuICAgICAgICB0aHJlZVBvb2xMcFRva2VuQWNjb3VudDogJ0RnQ1NBSmlpY2RFZ2dISnhNN1ZzMmo1OXlNNXdNSk1DR3pVSEFMaVZEaHRYJywgLy8gbHAgdmF1bHRcbiAgICAgICAgdGhyZWVQb29sUmV3YXJkVG9rZW5BY2NvdW50OiBcIjN6U2lSNFhyclJQaHNvbTJoaDlpaWdZWlo3dUNwTXVjZkpuWlJnUkVnSDhqXCIsXG4gICAgICAgIHRocmVlUG9vbFJld2FyZFRva2VuQWNjb3VudEI6ICc0bjN2UlVrM3dkdGJHV2dNRlNheFVjbkdMS3dhMndpV1ZocXc3a3Y5SkRWUycsIC8vIHJld2FyZCB2YXVsdFxuXG4gICAgICAgIG1pbnRBZGRyZXNzOiAnM2s4QkRvYmdpaG1rNzJqVm1YWUxFMTY4Ynh4UVVocXF5RVNXNGRRVmt0cUMnLFxuXG4gICAgICAgIG90aGVyOiAnU3RlcEFzY1FvRWlvRnh4V0duaDJzTEJERnA5ZDhydkt6MllwMzlpRHB5VCcsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHBvb2xpZDogJzgxVUdRQVRXVUYyN2RaSkhSYndwNmFjeGRDYnBqRk1ySndia3QzeVRqUW1GJyxcbiAgICAgICAgbmFtZTogJ01FRElBLVVTREMnLFxuICAgICAgICByZXdhcmRUeXBlOiAndGhyZWUnLFxuXG4gICAgICAgIHRocmVlUG9vbElkOiBcIkVmMWdEOUpNeldGNlBOdzJ1YzQ3NDR6b3VoNTdHeVdBZVZUakhIYlEybnN1XCIsXG4gICAgICAgIHRocmVlUG9vbEF1dGhvcml0eTogXCIzZGhVMmczTVNISzNMd2p1RTFWc0VKQ3NOZVdLeUJKVU1IdDRFVVhlcFRqc1wiLFxuICAgICAgICB0aHJlZVBvb2xMcFRva2VuQWNjb3VudDogJ0RHalJ0cXNqZXViTENMUEQzeUg4ZmoxZDdUbnJEM2pLQnB3YTFVYlZrN0U2JywgLy8gbHAgdmF1bHRcbiAgICAgICAgdGhyZWVQb29sUmV3YXJkVG9rZW5BY2NvdW50OiBcIlVlbjhmOVJuNDJpOHNEVEs1dkV0dHJuWDlBVXdYVjN5ZjZERlU2M21LRGJcIixcbiAgICAgICAgdGhyZWVQb29sUmV3YXJkVG9rZW5BY2NvdW50QjogJ0VrNm43TXlvamI2cFNwUXVxazVBeVM3S1hRZFhrSnlaVDdraTliYVlDeGRzJywgLy8gcmV3YXJkIHZhdWx0XG5cbiAgICAgICAgbWludEFkZHJlc3M6ICdBNXphbnZndGlvWkdpSk1kRXlhS040WFFtSnNwMXA3dVZ4YXEyNjk2UkV2UScsXG5cbiAgICAgICAgb3RoZXI6ICdFVEF0TG1DbXNvaUVFS2ZOckhLSjJrWXkzTW9BQmhVNk5RdnBTZmlqNXREcycsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHBvb2xpZDogJzZXUVlvdlhRV0xBV3hrQmhqVXBXSk51ejlOd0JzeEw1cWVoNUNGS0dxbzc3JyxcbiAgICAgICAgbmFtZTogJ0NPUEUtVVNEQycsXG4gICAgICAgIHJld2FyZFR5cGU6ICd0aHJlZScsXG5cbiAgICAgICAgdGhyZWVQb29sSWQ6IFwiQXhWdmJUOWZERkVrbWRMd0tVSlJZNUhzRzJSWEFaYmUxZFJBZ0oyYkREd2dcIixcbiAgICAgICAgdGhyZWVQb29sQXV0aG9yaXR5OiBcIjNuMVZkbXF1MU1CVXBCWU1wWWJwSkFWRnY0TWVOTUVhODJ3YXJ1THk3QkR1XCIsXG4gICAgICAgIHRocmVlUG9vbExwVG9rZW5BY2NvdW50OiAnQkhMenJkNU1nUXk0TmdtVXNuNTQyeVhSWldrejFpVjViZldnOHM4RDR0VkwnLCAvLyBscCB2YXVsdFxuICAgICAgICB0aHJlZVBvb2xSZXdhcmRUb2tlbkFjY291bnQ6IFwiN25HWTZ4SENVUjJNeEpuSFQxcXZBclJVRW5wbzJEc0dHZjZQZHUzdHQ5Z3ZcIixcbiAgICAgICAgdGhyZWVQb29sUmV3YXJkVG9rZW5BY2NvdW50QjogJzZlengxRWl2a3hzSmNaTFloU0pGTGMzblVzMjVpeXViZjhQUHlSTkVYM3BMJywgLy8gcmV3YXJkIHZhdWx0XG5cbiAgICAgICAgbWludEFkZHJlc3M6ICdDejFrVXZIdzk4aW1La3JxcXU5NUdRQjloMWZyWThSaWt4UG9qTXdXS0dYZicsXG5cbiAgICAgICAgb3RoZXI6ICc4SEd5QUFCMXlvTTF0dFM3cFhqSE1hM2R1a1RGR1FnZ25GRkgzaEpaZ3pRaCcsXG4gICAgfSxcblxuXG5dIl19",
    "map": {
      "version": 3,
      "sources": [
        "tokens.js"
      ],
      "names": [
        "one",
        "poolid",
        "name",
        "rewardType",
        "mintAddress",
        "two",
        "threePoolId",
        "threePoolAuthority",
        "threePoolLpTokenAccount",
        "threePoolRewardTokenAccount",
        "three",
        "threePoolRewardTokenAccountB",
        "threePoolUserInfo",
        "other"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/",
      "sourcesContent": [
        "export let one = [\n    {\n        poolid: '8Fdtxoe8EXL8soEBA98Ziyv1KevfwmdPae84UXdTs7P1',\n        name: 'FARMv1',\n        rewardType: 'one',\n        mintAddress: 'AP58G14hoy4GGgZS4L8TzZgqXnk3hBvciFKW2Cb1RQ2J',\n    },\n    {\n        poolid: 'Hs9JHLVdJuQUg2JJSW117w6vFJv5CbUA1JrSL5wYWY7T',\n        name: 'FARMv1-USDC',\n        rewardType: 'one',\n        mintAddress: '5LGMkePVneEJoiCK7B5nHTYkYop1buS3STaDGupkGBjQ',\n    },\n    {\n        poolid: 'DpYtuyhkTg75cH9eTPPkghPTZGVbLixNTrr7UfQXFWNs',\n        name: 'SRM',\n        rewardType: 'one',\n        mintAddress: 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt',\n    },\n    {\n        poolid: '96MbmZwErMs5VWK6ZGneLTGfcTzd96vDp33uhDKxwoAw',\n        name: 'STEP',\n        rewardType: 'one',\n        mintAddress: 'StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT',\n    },\n    {\n        poolid: 'ChyPvRdHwAwie17i4GzTv2D2F6aLqKDbW3JjuYJ3xGd9',\n        name: 'ETH',\n        rewardType: 'one',\n        mintAddress: '2FPyTwcZLUg1MDrwsyoP4D6s1tM7hAkHYRjkNb5w6Pxk',\n    }\n\n]\n\n\nexport let two = [\n    {\n        poolid: 'A8hzKH6BHFQbL76gWgRaiCGHsQHLrTM4BJv3Swi7Ke1z',\n        name: 'RAY',\n        rewardType: 'one',\n\n        threePoolId: \"4EwbZo8BZXP5313z5A2H11MRBP15M5n6YxfmkjXESKAW\",\n        threePoolAuthority: \"4qD717qKoj3Sm8YfHMSR7tSKjWn5An817nArA6nGdcUR\",\n        threePoolLpTokenAccount: '8tnpAECxAT9nHBqR1Ba494Ar5dQMPGhL31MmPJz1zZvY', // lp vault\n        threePoolRewardTokenAccount: 'BihEG2r7hYax6EherbRmuLLrySBuSXx4PYGd9gAsktKY', // reward vaultÏ\n        mintAddress: '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n    },\n    {\n        poolid: '8WbgZrZzf8eiTWsNxrteGgpkA6Zw6Rn3QiJjpVD8wLuv',\n        name: 'RAY-USDC',\n        rewardType: 'two',\n        threePoolId: \"8nEWqxeDNZ2yo1izbPzY4nwR55isBZRaQk7CM8ntwUwR\",\n        threePoolAuthority: \"6vQGZLsHgpJdqh1ER7q2q6mjZ43QwzhtTofTzb2sUhNh\",\n        threePoolLpTokenAccount: '77ujS15hjUfFZkM8QAw4HMLvMGZg95Gcm6ixjA1bnk3M', // lp vault\n        threePoolRewardTokenAccount: '3ejmkn5HpXR9KdVWkai1Ngo87sQSUyKXrx8wSakipkno',\n        mintAddress: 'BZFGfXMrjG2sS7QT2eiCDEevPFnkYYF7kzJpWfYxPbcx',\n    },\n    {\n        poolid: 'H63Togisp4ZsTS8i6zVAqSPXYFYLsCUvESeNfSmwAByR',\n        name: 'RAY-USDT',\n        rewardType: 'two',\n        threePoolId: \"AvbVWpBi2e4C9HPmZgShGdPoNydG4Yw8GJvG9HUcLgce\",\n        threePoolAuthority: \"8JYVFy3pYsPSpPRsqf43KSJFnJzn83nnRLQgG88XKB8q\",\n        threePoolLpTokenAccount: '4u4AnMBHXehdpP5tbD6qzB5Q4iZmvKKR5aUr2gavG7aw', // lp vault\n        threePoolRewardTokenAccount: 'HCHNuGzkqSnw9TbwpPv1gTnoqnqYepcojHw9DAToBrUj', // reward vaultÏ\n        mintAddress: 'C3sT1R3nsw4AVdepvLTLKr5Gvszr7jufyBWUCvy4TUvT',\n    },\n    {\n        poolid: 'HJvyw1w8PCjF5Cvhs2wazpe7sn2LJts4PDVKnwUi5wAx',\n        name: 'RAY-SRM',\n        rewardType: 'two',\n        threePoolId: \"HwEgvS79S53yzYUTRHShU6EuNmhR3WTX5tTZPUzBmwky\",\n        threePoolAuthority: \"9B3XWm89zX7NwaBB8VmT5mrWvxVpd9eyfQMeqkuLkcCF\",\n        threePoolLpTokenAccount: 'F4zXXzqkyT1GP5CVdEgC7qTcDfR8ox5Akm6RCbBdBsRp', // lp vault\n        threePoolRewardTokenAccount: 'FW7omPaCCvgBgUFKwvwU2jf1w1wJGjDrJqurr3SeXn14', // reward vault\n        mintAddress: 'DSX5E21RE9FB9hM8Nh8xcXQfPK6SzRaJiywemHBSsfup',\n    },\n    {\n        poolid: 'HXC9XsUj87YGmu3MqXNwkYEH3etLJSFqnszboak9YpaX',\n        name: 'RAY-SOL',\n        rewardType: 'two',\n        threePoolId: \"ECqG3sxwJiq9TTYsRBd7fPGsBKYF4fyogo6Df7c13qdJ\",\n        threePoolAuthority: \"4Wf4om12g9xzEeeD139ffCuXn4W2huMcXziiSAzf7Nig\",\n        threePoolLpTokenAccount: '9kWnkQtMAW2bzKeLQsTdan1rEoypDHaAVnZRcoBPDBfQ', // lp vault\n        threePoolRewardTokenAccount: '8z4kQbgQFe4zXE4NSozWJTJV14gD4evNq4CKn5ryB6S3', // reward vault\n        mintAddress: 'F5PPQHGcznZ2FxD9JaxJMXaf7XkaFFJ6zzTBcW8osQjw',\n    },\n    {\n        poolid: 'FwSM7fwLdxNRKUvPMmcefL5XsJhnNxxjfY7sDAtWH4cB',\n        name: 'RAY-ETH',\n        rewardType: 'two',\n        threePoolId: \"CYKDTwojSLVFEShB3tcTTfMjtBxUNtYfCTM4PiMFGkio\",\n        threePoolAuthority: \"Azmucec2jdgWagFkbnqmwYcsrtKPf1v1kcM95v6s1zxu\",\n        threePoolLpTokenAccount: 'EncPBQhpc5KLmcgRD2PutQz7wBBNQkVN2s8jjFWEw9no', // lp vault\n        threePoolRewardTokenAccount: '8q8BHw7fP7mitLrb2jzw78qcSEgCvM7GTB5PzbSQobUt', // reward vault\n        mintAddress: '8Q6MKy5Yxb9vG1mWzppMtMb2nrhNuCRNUkJTeiE3fuwD',\n    },\n\n]\n\nexport let three =[\n    {\n        poolid: '99CBzAdpyoXFKwXF3Ydvr7zJqziNkFBtBw6moLkWvVJU',\n        name: 'FIDA-RAY',\n        rewardType: 'three',\n        threePoolId: \"8rAdapvcC5vYNLXzChMgt56s6HCQGE6Lbo469g3WRTUh\",\n        threePoolAuthority: \"EcCKf3mgPtL6dNNAVG4gQQtLkAoTAUdf5vzFukkrviWq\",\n        threePoolRewardTokenAccount: \"7vnPTB2HAXFUAV5iiVZTNHgAnVYjgXcdumbbqfeK6ugp\",\n        threePoolLpTokenAccount: 'H6kzwNNg9zbgC1YBjvCN4BdebtA4NusvgUhUSDZoz8rP', // lp vault\n        threePoolRewardTokenAccountB: 'EGHdQm9KGLz6nw7W4rK13DyAMMJcGP9RpzCJaXiq75kQ', // reward vault\n        threePoolUserInfo: \"6mRNC5ZHq6J1S9bCaxxRpYTYz366cfD1R237ZXAJNrgo\",\n        mintAddress: 'DsBuznXRTmzvEdb36Dx3aVLVo1XmH7r1PRZUFugLPTFv',\n        other: 'EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp',\n    },\n    {\n        poolid: '2mgagJBfjagbHGBFaz4KEtu2aAYHHZ5ny4LXG8Mak1fM',\n        name: 'MAPS-RAY',\n        rewardType: 'three',\n\n        threePoolId: \"Chb6atEWGmH2NitCqrCEMHB8uKWYQiiVaBnmJQDudm87\",\n        threePoolAuthority: \"BcmgQZXCDPCduv3reT8LDQNqvGeGMZtFhBxyLYdrnCjE\",\n        threePoolLpTokenAccount: '5uaBAwu1Sff58KNKGTwfacsjsrMU3wg6jtGtMWwiZd5B', // lp vault\n        threePoolRewardTokenAccount: \"4LVikvk3gZEHaTUNh7L8bsx5By6NNnkqpKfcdJTWTD7Z\",\n        threePoolRewardTokenAccountB: '3UWGpEe2NLD9oWPW1zdXGZRCvJxkNSC2puUWooNEugdS', // reward vault\n\n        mintAddress: 'CcKK8srfVdTSsFGV3VLBb2YDbzF4T4NM2C3UEjC39RLP',\n        other: 'MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb',\n    },\n    {\n        poolid: 'GFPTJrizm3B2CvEBKkNRv46SGhk4G49H7hdM81WTs87j',\n        name: 'OXY-RAY',\n        rewardType: 'three',\n\n        threePoolId: \"7Hug9fKfTrasG3hHonXTfSnvv37mDeyoBHbVwyDjw693\",\n        threePoolAuthority: \"q42hNDzfBDQ1WzKjxkueEtBzX1VPJ2hnikJXFjSYC91\",\n        threePoolLpTokenAccount: 'DgCSAJiicdEggHJxM7Vs2j59yM5wMJMCGzUHALiVDhtX', // lp vault\n        threePoolRewardTokenAccount: \"3BGPPWYJMSFaWmq21x8Feqvgsii1fVmJiivRuPJSgXe1\",\n        threePoolRewardTokenAccountB: '5uX6ceRRxDRrcARddFkypCZV5MXz5KUQDr7Zf9ZnSSLf', // reward vault\n\n        mintAddress: 'FwaX9W7iThTZH5MFeasxdLpxTVxRcM7ZHieTCnYog8Yb',\n\n        other: 'z3dn17yLaGMKffVogeFHQ9zWVcXgqgf3PQnDsNs2g6M',\n    },\n    {\n        poolid: '21ky5u7evEWjAFDWXp3mYLqpejnjGcGthBneweHvfeca',\n        name: 'KIN-RAY',\n        rewardType: 'three',\n\n        threePoolId: \"FgApVk6mASrkuWNxmsFvsaAYkFKqdiwMTvYZK36A2DaC\",\n        threePoolAuthority: \"7kEx8qnkZPkRXV6f4ztf27zYjCACBHY3PUMfuiYJsoML\",\n        threePoolLpTokenAccount: '7fgDjhZn9GqRZbbCregr9tpkbWSKjibdCsJNBYbLhLir', // lp vault\n        threePoolRewardTokenAccount: \"5XZjRyEo8Wr2CtSE5bpoKioThT9czK1dUebbK87Lqkaa\",\n        threePoolRewardTokenAccountB: '8jGJ3ST1j9eemfC6N2qQevtUdwxT7TpXW1NmvWyvLLVs', // reward vault\n\n        mintAddress: 'CHT8sft3h3gpLYbCcZ9o27mT5s3Z6VifBVbUiDvprHPW',\n        other: 'kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6',\n    },\n    {\n        poolid: '5D5XRdQ5XAaTj85oNUF6bXmZoS29EVbrERYFsHHqMb37',\n        name: 'STEP-USDC',\n        rewardType: 'three',\n\n        threePoolId: \"8xhjCzfzVcP79jE7jXR2xtNaSL6aJYoDRLVT9FMjpRTC\",\n        threePoolAuthority: \"6wRMPrHKFzj3qB4j5yj4y9mDF89fZ6w7gD1cEzCJwT9B\",\n        threePoolLpTokenAccount: 'DgCSAJiicdEggHJxM7Vs2j59yM5wMJMCGzUHALiVDhtX', // lp vault\n        threePoolRewardTokenAccount: \"3zSiR4XrrRPhsom2hh9iigYZZ7uCpMucfJnZRgREgH8j\",\n        threePoolRewardTokenAccountB: '4n3vRUk3wdtbGWgMFSaxUcnGLKwa2wiWVhqw7kv9JDVS', // reward vault\n\n        mintAddress: '3k8BDobgihmk72jVmXYLE168bxxQUhqqyESW4dQVktqC',\n\n        other: 'StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT',\n    },\n    {\n        poolid: '81UGQATWUF27dZJHRbwp6acxdCbpjFMrJwbkt3yTjQmF',\n        name: 'MEDIA-USDC',\n        rewardType: 'three',\n\n        threePoolId: \"Ef1gD9JMzWF6PNw2uc4744zouh57GyWAeVTjHHbQ2nsu\",\n        threePoolAuthority: \"3dhU2g3MSHK3LwjuE1VsEJCsNeWKyBJUMHt4EUXepTjs\",\n        threePoolLpTokenAccount: 'DGjRtqsjeubLCLPD3yH8fj1d7TnrD3jKBpwa1UbVk7E6', // lp vault\n        threePoolRewardTokenAccount: \"Uen8f9Rn42i8sDTK5vEttrnX9AUwXV3yf6DFU63mKDb\",\n        threePoolRewardTokenAccountB: 'Ek6n7Myojb6pSpQuqk5AyS7KXQdXkJyZT7ki9baYCxds', // reward vault\n\n        mintAddress: 'A5zanvgtioZGiJMdEyaKN4XQmJsp1p7uVxaq2696REvQ',\n\n        other: 'ETAtLmCmsoiEEKfNrHKJ2kYy3MoABhU6NQvpSfij5tDs',\n    },\n    {\n        poolid: '6WQYovXQWLAWxkBhjUpWJNuz9NwBsxL5qeh5CFKGqo77',\n        name: 'COPE-USDC',\n        rewardType: 'three',\n\n        threePoolId: \"AxVvbT9fDFEkmdLwKUJRY5HsG2RXAZbe1dRAgJ2bDDwg\",\n        threePoolAuthority: \"3n1Vdmqu1MBUpBYMpYbpJAVFv4MeNMEa82waruLy7BDu\",\n        threePoolLpTokenAccount: 'BHLzrd5MgQy4NgmUsn542yXRZWkz1iV5bfWg8s8D4tVL', // lp vault\n        threePoolRewardTokenAccount: \"7nGY6xHCUR2MxJnHT1qvArRUEnpo2DsGGf6Pdu3tt9gv\",\n        threePoolRewardTokenAccountB: '6ezx1EivkxsJcZLYhSJFLc3nUs25iyubf8PPyRNEX3pL', // reward vault\n\n        mintAddress: 'Cz1kUvHw98imKkrqqu95GQB9h1frY8RikxPojMwWKGXf',\n\n        other: '8HGyAAB1yoM1ttS7pXjHMa3dukTFGQggnFFH3hJZgzQh',\n    },\n\n\n]"
      ]
    },
    "sourceType": "script",
    "mtime": 1622814637446
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"filename\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/tokens.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fanxu/www/node/solana-program-library/token-swap/js\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/tokens.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fanxu/www/node/solana-program-library/token-swap/js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/tokens.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/tokens.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/",
        "sourceFileName": "tokens.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.three = exports.two = exports.one = void 0;\nlet one = [{\n  name: 'FARMv1',\n  rewardType: 'one',\n  mintAddress: 'CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d'\n}, {\n  name: 'FARMv1-USDC',\n  rewardType: 'one',\n  mintAddress: 'BzcQZAcGz1J4em1zX3PW9MTy7qsF7zWqeoj4eoXaHEDM'\n}, {\n  name: 'SRM',\n  rewardType: 'one',\n  mintAddress: 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt'\n}, {\n  name: 'RAY',\n  rewardType: 'one',\n  mintAddress: '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R'\n}, {\n  name: 'STEP',\n  rewardType: 'one',\n  mintAddress: 'StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT'\n}];\nexports.one = one;\nlet two = [{\n  name: 'RAY-USDC',\n  rewardType: 'two',\n  threePoolId: \"8nEWqxeDNZ2yo1izbPzY4nwR55isBZRaQk7CM8ntwUwR\",\n  threePoolAuthority: \"6vQGZLsHgpJdqh1ER7q2q6mjZ43QwzhtTofTzb2sUhNh\",\n  threePoolLpTokenAccount: '77ujS15hjUfFZkM8QAw4HMLvMGZg95Gcm6ixjA1bnk3M',\n  // lp vault\n  threePoolRewardTokenAccount: '3ejmkn5HpXR9KdVWkai1Ngo87sQSUyKXrx8wSakipkno',\n  // reward vaultÏ\n  mintAddress: 'BZFGfXMrjG2sS7QT2eiCDEevPFnkYYF7kzJpWfYxPbcx'\n}, {\n  name: 'RAY-USDT',\n  rewardType: 'two',\n  threePoolId: \"AvbVWpBi2e4C9HPmZgShGdPoNydG4Yw8GJvG9HUcLgce\",\n  threePoolAuthority: \"8JYVFy3pYsPSpPRsqf43KSJFnJzn83nnRLQgG88XKB8q\",\n  threePoolLpTokenAccount: '4u4AnMBHXehdpP5tbD6qzB5Q4iZmvKKR5aUr2gavG7aw',\n  // lp vault\n  threePoolRewardTokenAccount: 'HCHNuGzkqSnw9TbwpPv1gTnoqnqYepcojHw9DAToBrUj',\n  // reward vaultÏ\n  mintAddress: 'C3sT1R3nsw4AVdepvLTLKr5Gvszr7jufyBWUCvy4TUvT'\n}, {\n  name: 'RAY-SRM',\n  rewardType: 'two',\n  threePoolId: \"HwEgvS79S53yzYUTRHShU6EuNmhR3WTX5tTZPUzBmwky\",\n  threePoolAuthority: \"9B3XWm89zX7NwaBB8VmT5mrWvxVpd9eyfQMeqkuLkcCF\",\n  threePoolLpTokenAccount: 'F4zXXzqkyT1GP5CVdEgC7qTcDfR8ox5Akm6RCbBdBsRp',\n  // lp vault\n  threePoolRewardTokenAccount: 'FW7omPaCCvgBgUFKwvwU2jf1w1wJGjDrJqurr3SeXn14',\n  // reward vault\n  mintAddress: 'DSX5E21RE9FB9hM8Nh8xcXQfPK6SzRaJiywemHBSsfup'\n}, {\n  name: 'RAY-SOL',\n  rewardType: 'two',\n  threePoolId: \"ECqG3sxwJiq9TTYsRBd7fPGsBKYF4fyogo6Df7c13qdJ\",\n  threePoolAuthority: \"4Wf4om12g9xzEeeD139ffCuXn4W2huMcXziiSAzf7Nig\",\n  threePoolLpTokenAccount: '9kWnkQtMAW2bzKeLQsTdan1rEoypDHaAVnZRcoBPDBfQ',\n  // lp vault\n  threePoolRewardTokenAccount: '8z4kQbgQFe4zXE4NSozWJTJV14gD4evNq4CKn5ryB6S3',\n  // reward vault\n  mintAddress: 'F5PPQHGcznZ2FxD9JaxJMXaf7XkaFFJ6zzTBcW8osQjw'\n}, {\n  name: 'RAY-ETH',\n  rewardType: 'two',\n  threePoolId: \"CYKDTwojSLVFEShB3tcTTfMjtBxUNtYfCTM4PiMFGkio\",\n  threePoolAuthority: \"Azmucec2jdgWagFkbnqmwYcsrtKPf1v1kcM95v6s1zxu\",\n  threePoolLpTokenAccount: 'EncPBQhpc5KLmcgRD2PutQz7wBBNQkVN2s8jjFWEw9no',\n  // lp vault\n  threePoolRewardTokenAccount: '8q8BHw7fP7mitLrb2jzw78qcSEgCvM7GTB5PzbSQobUt',\n  // reward vault\n  mintAddress: '8Q6MKy5Yxb9vG1mWzppMtMb2nrhNuCRNUkJTeiE3fuwD'\n}];\nexports.two = two;\nlet three = [{\n  name: 'FIDA-RAY',\n  rewardType: 'three',\n  threePoolId: \"8rAdapvcC5vYNLXzChMgt56s6HCQGE6Lbo469g3WRTUh\",\n  threePoolAuthority: \"EcCKf3mgPtL6dNNAVG4gQQtLkAoTAUdf5vzFukkrviWq\",\n  threePoolRewardTokenAccount: \"7vnPTB2HAXFUAV5iiVZTNHgAnVYjgXcdumbbqfeK6ugp\",\n  threePoolLpTokenAccount: 'H6kzwNNg9zbgC1YBjvCN4BdebtA4NusvgUhUSDZoz8rP',\n  // lp vault\n  threePoolRewardTokenAccountB: 'EGHdQm9KGLz6nw7W4rK13DyAMMJcGP9RpzCJaXiq75kQ',\n  // reward vault\n  threePoolUserInfo: \"6mRNC5ZHq6J1S9bCaxxRpYTYz366cfD1R237ZXAJNrgo\",\n  mintAddress: 'DsBuznXRTmzvEdb36Dx3aVLVo1XmH7r1PRZUFugLPTFv',\n  other: 'EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp'\n}, {\n  name: 'MAPS-RAY',\n  rewardType: 'three',\n  threePoolId: \"Chb6atEWGmH2NitCqrCEMHB8uKWYQiiVaBnmJQDudm87\",\n  threePoolAuthority: \"BcmgQZXCDPCduv3reT8LDQNqvGeGMZtFhBxyLYdrnCjE\",\n  threePoolLpTokenAccount: '5uaBAwu1Sff58KNKGTwfacsjsrMU3wg6jtGtMWwiZd5B',\n  // lp vault\n  threePoolRewardTokenAccount: \"4LVikvk3gZEHaTUNh7L8bsx5By6NNnkqpKfcdJTWTD7Z\",\n  threePoolRewardTokenAccountB: '3UWGpEe2NLD9oWPW1zdXGZRCvJxkNSC2puUWooNEugdS',\n  // reward vault\n  mintAddress: 'CcKK8srfVdTSsFGV3VLBb2YDbzF4T4NM2C3UEjC39RLP',\n  other: 'MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb'\n}, {\n  name: 'KIN-RAY',\n  rewardType: 'three',\n  threePoolId: \"7RFY9eMaD3nsV7EBTzVzuKBr4X4cLuDh3JaoWZTcGiJK\",\n  threePoolAuthority: \"q42hNDzfBDQ1WzKjxkueEtBzX1VPJ2hnikJXFjSYC91\",\n  threePoolLpTokenAccount: 'DgCSAJiicdEggHJxM7Vs2j59yM5wMJMCGzUHALiVDhtX',\n  // lp vault\n  threePoolRewardTokenAccount: \"3BGPPWYJMSFaWmq21x8Feqvgsii1fVmJiivRuPJSgXe1\",\n  threePoolRewardTokenAccountB: '5uX6ceRRxDRrcARddFkypCZV5MXz5KUQDr7Zf9ZnSSLf',\n  // reward vault\n  mintAddress: 'CHT8sft3h3gpLYbCcZ9o27mT5s3Z6VifBVbUiDvprHPW',\n  other: 'kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6'\n}, {\n  name: 'OXY-RAY',\n  rewardType: 'three',\n  threePoolId: \"7Hug9fKfTrasG3hHonXTfSnvv37mDeyoBHbVwyDjw693\",\n  threePoolAuthority: \"q42hNDzfBDQ1WzKjxkueEtBzX1VPJ2hnikJXFjSYC91\",\n  threePoolLpTokenAccount: 'DgCSAJiicdEggHJxM7Vs2j59yM5wMJMCGzUHALiVDhtX',\n  // lp vault\n  threePoolRewardTokenAccount: \"3BGPPWYJMSFaWmq21x8Feqvgsii1fVmJiivRuPJSgXe1\",\n  threePoolRewardTokenAccountB: '5uX6ceRRxDRrcARddFkypCZV5MXz5KUQDr7Zf9ZnSSLf',\n  // reward vault\n  mintAddress: 'FwaX9W7iThTZH5MFeasxdLpxTVxRcM7ZHieTCnYog8Yb',\n  other: 'z3dn17yLaGMKffVogeFHQ9zWVcXgqgf3PQnDsNs2g6M'\n}];\nexports.three = three;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRva2Vucy5qcyJdLCJuYW1lcyI6WyJvbmUiLCJuYW1lIiwicmV3YXJkVHlwZSIsIm1pbnRBZGRyZXNzIiwidHdvIiwidGhyZWVQb29sSWQiLCJ0aHJlZVBvb2xBdXRob3JpdHkiLCJ0aHJlZVBvb2xMcFRva2VuQWNjb3VudCIsInRocmVlUG9vbFJld2FyZFRva2VuQWNjb3VudCIsInRocmVlIiwidGhyZWVQb29sUmV3YXJkVG9rZW5BY2NvdW50QiIsInRocmVlUG9vbFVzZXJJbmZvIiwib3RoZXIiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLElBQUlBLEdBQUcsR0FBRyxDQUNiO0FBQ0lDLEVBQUFBLElBQUksRUFBRSxRQURWO0FBRUlDLEVBQUFBLFVBQVUsRUFBRSxLQUZoQjtBQUdJQyxFQUFBQSxXQUFXLEVBQUU7QUFIakIsQ0FEYSxFQU1iO0FBQ0lGLEVBQUFBLElBQUksRUFBRSxhQURWO0FBRUlDLEVBQUFBLFVBQVUsRUFBRSxLQUZoQjtBQUdJQyxFQUFBQSxXQUFXLEVBQUU7QUFIakIsQ0FOYSxFQVdiO0FBQ0lGLEVBQUFBLElBQUksRUFBRSxLQURWO0FBRUlDLEVBQUFBLFVBQVUsRUFBRSxLQUZoQjtBQUdJQyxFQUFBQSxXQUFXLEVBQUU7QUFIakIsQ0FYYSxFQWdCYjtBQUNJRixFQUFBQSxJQUFJLEVBQUUsS0FEVjtBQUVJQyxFQUFBQSxVQUFVLEVBQUUsS0FGaEI7QUFHSUMsRUFBQUEsV0FBVyxFQUFFO0FBSGpCLENBaEJhLEVBcUJiO0FBQ0lGLEVBQUFBLElBQUksRUFBRSxNQURWO0FBRUlDLEVBQUFBLFVBQVUsRUFBRSxLQUZoQjtBQUdJQyxFQUFBQSxXQUFXLEVBQUU7QUFIakIsQ0FyQmEsQ0FBVjs7QUE4QkEsSUFBSUMsR0FBRyxHQUFHLENBQ2I7QUFDSUgsRUFBQUEsSUFBSSxFQUFFLFVBRFY7QUFFSUMsRUFBQUEsVUFBVSxFQUFFLEtBRmhCO0FBSUlHLEVBQUFBLFdBQVcsRUFBRSw4Q0FKakI7QUFLSUMsRUFBQUEsa0JBQWtCLEVBQUUs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RUFBQUEsdUJBQXVCLEVBQUUsOENBTjdCO0FBTTZFO0FBQ3pFQyxFQUFBQSwyQkFBMkIsRUFBRSw4Q0FQakM7QUFRSUUsRUFBQUEsNEJBQTRCLEVBQUUsOENBUmxDO0FBUWtGO0FBRTlFUCxFQUFBQSxXQUFXLEVBQUUsOENBVmpCO0FBV0lTLEVBQUFBLEtBQUssRUFBRTtBQVhYLENBNUJjLEVBeUNkO0FBQ0lYLEVBQUFBLElBQUksRUFBRSxTQURWO0FBRUlDLEVBQUFBLFVBQVUsRUFBRSxPQUZoQjtBQUlJRyxFQUFBQSxXQUFXLEVBQUUsOENBSmpCO0FBS0lDLEVBQUFBLGtCQUFrQixFQUFFLDZDQUx4QjtBQU1JQyxFQUFBQSx1QkFBdUIsRUFBRSw4Q0FON0I7QUFNNkU7QUFDekVDLEVBQUFBLDJCQUEyQixFQUFFLDhDQVBqQztBQVFJRSxFQUFBQSw0QkFBNEIsRUFBRSw4Q0FSbEM7QUFRa0Y7QUFFOUVQLEVBQUFBLFdBQVcsRUFBRSw4Q0FWakI7QUFZSVMsRUFBQUEsS0FBSyxFQUFFO0FBWlgsQ0F6Q2MsQ0FBWCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZmFueHUvd3d3L25vZGUvc29sYW5hLXByb2dyYW0tbGlicmFyeS90b2tlbi1zd2FwL2pzL2NsaS8iLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgbGV0IG9uZSA9IFtcbiAgICB7XG4gICAgICAgIG5hbWU6ICdGQVJNdjEnLFxuICAgICAgICByZXdhcmRUeXBlOiAnb25lJyxcbiAgICAgICAgbWludEFkZHJlc3M6ICdDdFZqUWpFeGFCVnNtSjNXWXJqRFp2UEtZZXNSVFpSU216UWlHajlUcW03ZCcsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6ICdGQVJNdjEtVVNEQycsXG4gICAgICAgIHJld2FyZFR5cGU6ICdvbmUnLFxuICAgICAgICBtaW50QWRkcmVzczogJ0J6Y1FaQWNHejFKNGVtMXpYM1BXOU1UeTdxc0Y3eldxZW9qNGVvWGFIRURNJyxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogJ1NSTScsXG4gICAgICAgIHJld2FyZFR5cGU6ICdvbmUnLFxuICAgICAgICBtaW50QWRkcmVzczogJ1NSTXVBcFZOZHhYb2trNUdUN1hENWNVVWdYTUJDb0F6MkxIZXVBb0tXUnQnLFxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnUkFZJyxcbiAgICAgICAgcmV3YXJkVHlwZTogJ29uZScsXG4gICAgICAgIG1pbnRBZGRyZXNzOiAnNGszRHlqenZ6cDhlTVpXVVhiQkNqRXZ3U2trazU5UzVpQ05MWTNRcmtYNlInLFxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnU1RFUCcsXG4gICAgICAgIHJld2FyZFR5cGU6ICdvbmUnLFxuICAgICAgICBtaW50QWRkcmVzczogJ1N0ZXBBc2NRb0Vpb0Z4eFdHbmgyc0xCREZwOWQ4cnZLejJZcDM5aURweVQnLFxuICAgIH1cblxuXVxuXG5cbmV4cG9ydCBsZXQgdHdvID0gW1xuICAgIHtcbiAgICAgICAgbmFtZTogJ1JBWS1VU0RDJyxcbiAgICAgICAgcmV3YXJkVHlwZTogJ3R3bycsXG5cbiAgICAgICAgdGhyZWVQb29sSWQ6IFwiOG5FV3F4ZUROWjJ5bzFpemJQelk0bndSNTVpc0JaUmFRazdDTThudHdVd1JcIixcbiAgICAgICAgdGhyZWVQb29sQXV0aG9yaXR5OiBcIjZ2UUdaTHNIZ3BKZHFoMUVSN3EycTZtalo0M1F3emh0VG9mVHpiMnNVaE5oXCIsXG4gICAgICAgIHRocmVlUG9vbExwVG9rZW5BY2NvdW50OiAnNzd1alMxNWhqVWZGWmtNOFFBdzRITUx2TUdaZzk1R2NtNml4akExYm5rM00nLCAvLyBscCB2YXVsdFxuICAgICAgICB0aHJlZVBvb2xSZXdhcmRUb2tlbkFjY291bnQ6ICczZWpta241SHBYUjlLZFZXa2FpMU5nbzg3c1FTVXlLWHJ4OHdTYWtpcGtubycsIC8vIHJld2FyZCB2YXVsdMOPXG5cbiAgICAgICAgbWludEFkZHJlc3M6ICdCWkZHZlhNcmpHMnNTN1FUMmVpQ0RFZXZQRm5rWVlGN2t6SnBXZll4UGJjeCcsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6ICdSQVktVVNEVCcsXG4gICAgICAgIHJld2FyZFR5cGU6ICd0d28nLFxuXG4gICAgICAgIHRocmVlUG9vbElkOiBcIkF2YlZXcEJpMmU0QzlIUG1aZ1NoR2RQb055ZEc0WXc4R0p2RzlIVWNMZ2NlXCIsXG4gICAgICAgIHRocmVlUG9vbEF1dGhvcml0eTogXCI4SllWRnkzcFlzUFNwUFJzcWY0M0tTSkZuSnpuODNublJMUWdHODhYS0I4cVwiLFxuICAgICAgICB0aHJlZVBvb2xMcFRva2VuQWNjb3VudDogJzR1NEFuTUJIWGVoZHBQNXRiRDZxekI1UTRpWm12S0tSNWFVcjJnYXZHN2F3JywgLy8gbHAgdmF1bHRcbiAgICAgICAgdGhyZWVQb29sUmV3YXJkVG9rZW5BY2NvdW50OiAnSENITnVHemtxU253OVRid3BQdjFnVG5vcW5xWWVwY29qSHc5REFUb0JyVWonLCAvLyByZXdhcmQgdmF1bHTDj1xuXG4gICAgICAgIG1pbnRBZGRyZXNzOiAnQzNzVDFSM25zdzRBVmRlcHZMVExLcjVHdnN6cjdqdWZ5QldVQ3Z5NFRVdlQnLFxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnUkFZLVNSTScsXG4gICAgICAgIHJld2FyZFR5cGU6ICd0d28nLFxuXG4gICAgICAgIHRocmVlUG9vbElkOiBcIkh3RWd2Uzc5UzUzeXpZVVRSSFNoVTZFdU5taFIzV1RYNXRUWlBVekJtd2t5XCIsXG4gICAgICAgIHRocmVlUG9vbEF1dGhvcml0eTogXCI5QjNYV204OXpYN053YUJCOFZtVDVtcld2eFZwZDlleWZRTWVxa3VMa2NDRlwiLFxuICAgICAgICB0aHJlZVBvb2xMcFRva2VuQWNjb3VudDogJ0Y0elhYenFreVQxR1A1Q1ZkRWdDN3FUY0RmUjhveDVBa202UkNiQmRCc1JwJywgLy8gbHAgdmF1bHRcbiAgICAgICAgdGhyZWVQb29sUmV3YXJkVG9rZW5BY2NvdW50OiAnRlc3b21QYUNDdmdCZ1VGS3d2d1UyamYxdzF3SkdqRHJKcXVycjNTZVhuMTQnLCAvLyByZXdhcmQgdmF1bHRcblxuICAgICAgICBtaW50QWRkcmVzczogJ0RTWDVFMjFSRTlGQjloTThOaDh4Y1hRZlBLNlN6UmFKaXl3ZW1IQlNzZnVwJyxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogJ1JBWS1TT0wnLFxuICAgICAgICByZXdhcmRUeXBlOiAndHdvJyxcblxuICAgICAgICB0aHJlZVBvb2xJZDogXCJFQ3FHM3N4d0ppcTlUVFlzUkJkN2ZQR3NCS1lGNGZ5b2dvNkRmN2MxM3FkSlwiLFxuICAgICAgICB0aHJlZVBvb2xBdXRob3JpdHk6IFwiNFdmNG9tMTJnOXh6RWVlRDEzOWZmQ3VYbjRXMmh1TWNYemlpU0F6ZjdOaWdcIixcbiAgICAgICAgdGhyZWVQb29sTHBUb2tlbkFjY291bnQ6ICc5a1dua1F0TUFXMmJ6S2VMUXNUZGFuMXJFb3lwREhhQVZuWlJjb0JQREJmUScsIC8vIGxwIHZhdWx0XG4gICAgICAgIHRocmVlUG9vbFJld2FyZFRva2VuQWNjb3VudDogJzh6NGtRYmdRRmU0elhFNE5Tb3pXSlRKVjE0Z0Q0ZXZOcTRDS241cnlCNlMzJywgLy8gcmV3YXJkIHZhdWx0XG5cbiAgICAgICAgbWludEFkZHJlc3M6ICdGNVBQUUhHY3puWjJGeEQ5SmF4Sk1YYWY3WGthRkZKNnp6VEJjVzhvc1FqdycsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6ICdSQVktRVRIJyxcbiAgICAgICAgcmV3YXJkVHlwZTogJ3R3bycsXG5cbiAgICAgICAgdGhyZWVQb29sSWQ6IFwiQ1lLRFR3b2pTTFZGRVNoQjN0Y1RUZk1qdEJ4VU50WWZDVE00UGlNRkdraW9cIixcbiAgICAgICAgdGhyZWVQb29sQXV0aG9yaXR5OiBcIkF6bXVjZWMyamRnV2FnRmtibnFtd1ljc3J0S1BmMXYxa2NNOTV2NnMxenh1XCIsXG4gICAgICAgIHRocmVlUG9vbExwVG9rZW5BY2NvdW50OiAnRW5jUEJRaHBjNUtMbWNnUkQyUHV0UXo3d0JCTlFrVk4yczhqakZXRXc5bm8nLCAvLyBscCB2YXVsdFxuICAgICAgICB0aHJlZVBvb2xSZXdhcmRUb2tlbkFjY291bnQ6ICc4cThCSHc3ZlA3bWl0THJiMmp6dzc4cWNTRWdDdk03R1RCNVB6YlNRb2JVdCcsIC8vIHJld2FyZCB2YXVsdFxuXG4gICAgICAgIG1pbnRBZGRyZXNzOiAnOFE2TUt5NVl4Yjl2RzFtV3pwcE10TWIybnJoTnVDUk5Va0pUZWlFM2Z1d0QnLFxuICAgIH0sXG5cbl1cblxuZXhwb3J0IGxldCB0aHJlZSA9W1xuICAgIHtcbiAgICAgICAgbmFtZTogJ0ZJREEtUkFZJyxcbiAgICAgICAgcmV3YXJkVHlwZTogJ3RocmVlJyxcblxuICAgICAgICB0aHJlZVBvb2xJZDogXCI4ckFkYXB2Y0M1dllOTFh6Q2hNZ3Q1NnM2SENRR0U2TGJvNDY5ZzNXUlRVaFwiLFxuICAgICAgICB0aHJlZVBvb2xBdXRob3JpdHk6IFwiRWNDS2YzbWdQdEw2ZE5OQVZHNGdRUXRMa0FvVEFVZGY1dnpGdWtrcnZpV3FcIixcbiAgICAgICAgdGhyZWVQb29sUmV3YXJkVG9rZW5BY2NvdW50OiBcIjd2blBUQjJIQVhGVUFWNWlpVlpUTkhnQW5WWWpnWGNkdW1iYnFmZUs2dWdwXCIsXG4gICAgICAgIHRocmVlUG9vbExwVG9rZW5BY2NvdW50OiAnSDZrendOTmc5emJnQzFZQmp2Q040QmRlYnRBNE51c3ZnVWhVU0Rab3o4clAnLCAvLyBscCB2YXVsdFxuICAgICAgICB0aHJlZVBvb2xSZXdhcmRUb2tlbkFjY291bnRCOiAnRUdIZFFtOUtHTHo2bnc3VzRySzEzRHlBTU1KY0dQOVJwekNKYVhpcTc1a1EnLCAvLyByZXdhcmQgdmF1bHRcbiAgICAgICAgdGhyZWVQb29sVXNlckluZm86IFwiNm1STkM1WkhxNkoxUzliQ2F4eFJwWVRZejM2NmNmRDFSMjM3WlhBSk5yZ29cIixcblxuICAgICAgICBtaW50QWRkcmVzczogJ0RzQnV6blhSVG16dkVkYjM2RHgzYVZMVm8xWG1IN3IxUFJaVUZ1Z0xQVEZ2JyxcbiAgICAgICAgb3RoZXI6ICdFY2hlc3lmWGVQS2RMdG9pWlNMOHBCZThNeWFneXk4WlJxc0FDTkNGR252cCcsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6ICdNQVBTLVJBWScsXG4gICAgICAgIHJld2FyZFR5cGU6ICd0aHJlZScsXG5cbiAgICAgICAgdGhyZWVQb29sSWQ6IFwiQ2hiNmF0RVdHbUgyTml0Q3FyQ0VNSEI4dUtXWVFpaVZhQm5tSlFEdWRtODdcIixcbiAgICAgICAgdGhyZWVQb29sQXV0aG9yaXR5OiBcIkJjbWdRWlhDRFBDZHV2M3JlVDhMRFFOcXZHZUdNWnRGaEJ4eUxZZHJuQ2pFXCIsXG4gICAgICAgIHRocmVlUG9vbExwVG9rZW5BY2NvdW50OiAnNXVhQkF3dTFTZmY1OEtOS0dUd2ZhY3Nqc3JNVTN3ZzZqdEd0TVd3aVpkNUInLCAvLyBscCB2YXVsdFxuICAgICAgICB0aHJlZVBvb2xSZXdhcmRUb2tlbkFjY291bnQ6IFwiNExWaWt2azNnWkVIYVRVTmg3TDhic3g1Qnk2Tk5ua3FwS2ZjZEpUV1REN1pcIixcbiAgICAgICAgdGhyZWVQb29sUmV3YXJkVG9rZW5BY2NvdW50QjogJzNVV0dwRWUyTkxEOW9XUFcxemRYR1pSQ3ZKeGtOU0MycHVVV29vTkV1Z2RTJywgLy8gcmV3YXJkIHZhdWx0XG5cbiAgICAgICAgbWludEFkZHJlc3M6ICdDY0tLOHNyZlZkVFNzRkdWM1ZMQmIyWURiekY0VDROTTJDM1VFakMzOVJMUCcsXG4gICAgICAgIG90aGVyOiAnTUFQUzQxTURhaFo5UWRLWGhWYTRkV0I5UnV5ZlY0WHFoeUFaOFhjWWVwYicsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6ICdLSU4tUkFZJyxcbiAgICAgICAgcmV3YXJkVHlwZTogJ3RocmVlJyxcblxuICAgICAgICB0aHJlZVBvb2xJZDogXCI3UkZZOWVNYUQzbnNWN0VCVHpWenVLQnI0WDRjTHVEaDNKYW9XWlRjR2lKS1wiLFxuICAgICAgICB0aHJlZVBvb2xBdXRob3JpdHk6IFwicTQyaE5EemZCRFExV3pLanhrdWVFdEJ6WDFWUEoyaG5pa0pYRmpTWUM5MVwiLFxuICAgICAgICB0aHJlZVBvb2xMcFRva2VuQWNjb3VudDogJ0RnQ1NBSmlpY2RFZ2dISnhNN1ZzMmo1OXlNNXdNSk1DR3pVSEFMaVZEaHRYJywgLy8gbHAgdmF1bHRcbiAgICAgICAgdGhyZWVQb29sUmV3YXJkVG9rZW5BY2NvdW50OiBcIjNCR1BQV1lKTVNGYVdtcTIxeDhGZXF2Z3NpaTFmVm1KaWl2UnVQSlNnWGUxXCIsXG4gICAgICAgIHRocmVlUG9vbFJld2FyZFRva2VuQWNjb3VudEI6ICc1dVg2Y2VSUnhEUnJjQVJkZEZreXBDWlY1TVh6NUtVUURyN1pmOVpuU1NMZicsIC8vIHJld2FyZCB2YXVsdFxuXG4gICAgICAgIG1pbnRBZGRyZXNzOiAnQ0hUOHNmdDNoM2dwTFliQ2NaOW8yN21UNXMzWjZWaWZCVmJVaUR2cHJIUFcnLFxuICAgICAgICBvdGhlcjogJ2tpblhkRWNwRFFlSFBFdVFucW1VZ3RZeWtxS0dWRnE2Q2VWWDVpQUhKcTYnLFxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnT1hZLVJBWScsXG4gICAgICAgIHJld2FyZFR5cGU6ICd0aHJlZScsXG5cbiAgICAgICAgdGhyZWVQb29sSWQ6IFwiN0h1ZzlmS2ZUcmFzRzNoSG9uWFRmU252djM3bURleW9CSGJWd3lEanc2OTNcIixcbiAgICAgICAgdGhyZWVQb29sQXV0aG9yaXR5OiBcInE0MmhORHpmQkRRMVd6S2p4a3VlRXRCelgxVlBKMmhuaWtKWEZqU1lDOTFcIixcbiAgICAgICAgdGhyZWVQb29sTHBUb2tlbkFjY291bnQ6ICdEZ0NTQUppaWNkRWdnSEp4TTdWczJqNTl5TTV3TUpNQ0d6VUhBTGlWRGh0WCcsIC8vIGxwIHZhdWx0XG4gICAgICAgIHRocmVlUG9vbFJld2FyZFRva2VuQWNjb3VudDogXCIzQkdQUFdZSk1TRmFXbXEyMXg4RmVxdmdzaWkxZlZtSmlpdlJ1UEpTZ1hlMVwiLFxuICAgICAgICB0aHJlZVBvb2xSZXdhcmRUb2tlbkFjY291bnRCOiAnNXVYNmNlUlJ4RFJyY0FSZGRGa3lwQ1pWNU1YejVLVVFEcjdaZjlablNTTGYnLCAvLyByZXdhcmQgdmF1bHRcblxuICAgICAgICBtaW50QWRkcmVzczogJ0Z3YVg5VzdpVGhUWkg1TUZlYXN4ZExweFRWeFJjTTdaSGllVENuWW9nOFliJyxcblxuICAgICAgICBvdGhlcjogJ3ozZG4xN3lMYUdNS2ZmVm9nZUZIUTl6V1ZjWGdxZ2YzUFFuRHNOczJnNk0nLFxuICAgIH0sXG5cblxuXSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "tokens.js"
      ],
      "names": [
        "one",
        "name",
        "rewardType",
        "mintAddress",
        "two",
        "threePoolId",
        "threePoolAuthority",
        "threePoolLpTokenAccount",
        "threePoolRewardTokenAccount",
        "three",
        "threePoolRewardTokenAccountB",
        "threePoolUserInfo",
        "other"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/fanxu/www/node/solana-program-library/token-swap/js/cli/",
      "sourcesContent": [
        "export let one = [\n    {\n        name: 'FARMv1',\n        rewardType: 'one',\n        mintAddress: 'CtVjQjExaBVsmJ3WYrjDZvPKYesRTZRSmzQiGj9Tqm7d',\n    },\n    {\n        name: 'FARMv1-USDC',\n        rewardType: 'one',\n        mintAddress: 'BzcQZAcGz1J4em1zX3PW9MTy7qsF7zWqeoj4eoXaHEDM',\n    },\n    {\n        name: 'SRM',\n        rewardType: 'one',\n        mintAddress: 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt',\n    },\n    {\n        name: 'RAY',\n        rewardType: 'one',\n        mintAddress: '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n    },\n    {\n        name: 'STEP',\n        rewardType: 'one',\n        mintAddress: 'StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT',\n    }\n\n]\n\n\nexport let two = [\n    {\n        name: 'RAY-USDC',\n        rewardType: 'two',\n\n        threePoolId: \"8nEWqxeDNZ2yo1izbPzY4nwR55isBZRaQk7CM8ntwUwR\",\n        threePoolAuthority: \"6vQGZLsHgpJdqh1ER7q2q6mjZ43QwzhtTofTzb2sUhNh\",\n        threePoolLpTokenAccount: '77ujS15hjUfFZkM8QAw4HMLvMGZg95Gcm6ixjA1bnk3M', // lp vault\n        threePoolRewardTokenAccount: '3ejmkn5HpXR9KdVWkai1Ngo87sQSUyKXrx8wSakipkno', // reward vaultÏ\n\n        mintAddress: 'BZFGfXMrjG2sS7QT2eiCDEevPFnkYYF7kzJpWfYxPbcx',\n    },\n    {\n        name: 'RAY-USDT',\n        rewardType: 'two',\n\n        threePoolId: \"AvbVWpBi2e4C9HPmZgShGdPoNydG4Yw8GJvG9HUcLgce\",\n        threePoolAuthority: \"8JYVFy3pYsPSpPRsqf43KSJFnJzn83nnRLQgG88XKB8q\",\n        threePoolLpTokenAccount: '4u4AnMBHXehdpP5tbD6qzB5Q4iZmvKKR5aUr2gavG7aw', // lp vault\n        threePoolRewardTokenAccount: 'HCHNuGzkqSnw9TbwpPv1gTnoqnqYepcojHw9DAToBrUj', // reward vaultÏ\n\n        mintAddress: 'C3sT1R3nsw4AVdepvLTLKr5Gvszr7jufyBWUCvy4TUvT',\n    },\n    {\n        name: 'RAY-SRM',\n        rewardType: 'two',\n\n        threePoolId: \"HwEgvS79S53yzYUTRHShU6EuNmhR3WTX5tTZPUzBmwky\",\n        threePoolAuthority: \"9B3XWm89zX7NwaBB8VmT5mrWvxVpd9eyfQMeqkuLkcCF\",\n        threePoolLpTokenAccount: 'F4zXXzqkyT1GP5CVdEgC7qTcDfR8ox5Akm6RCbBdBsRp', // lp vault\n        threePoolRewardTokenAccount: 'FW7omPaCCvgBgUFKwvwU2jf1w1wJGjDrJqurr3SeXn14', // reward vault\n\n        mintAddress: 'DSX5E21RE9FB9hM8Nh8xcXQfPK6SzRaJiywemHBSsfup',\n    },\n    {\n        name: 'RAY-SOL',\n        rewardType: 'two',\n\n        threePoolId: \"ECqG3sxwJiq9TTYsRBd7fPGsBKYF4fyogo6Df7c13qdJ\",\n        threePoolAuthority: \"4Wf4om12g9xzEeeD139ffCuXn4W2huMcXziiSAzf7Nig\",\n        threePoolLpTokenAccount: '9kWnkQtMAW2bzKeLQsTdan1rEoypDHaAVnZRcoBPDBfQ', // lp vault\n        threePoolRewardTokenAccount: '8z4kQbgQFe4zXE4NSozWJTJV14gD4evNq4CKn5ryB6S3', // reward vault\n\n        mintAddress: 'F5PPQHGcznZ2FxD9JaxJMXaf7XkaFFJ6zzTBcW8osQjw',\n    },\n    {\n        name: 'RAY-ETH',\n        rewardType: 'two',\n\n        threePoolId: \"CYKDTwojSLVFEShB3tcTTfMjtBxUNtYfCTM4PiMFGkio\",\n        threePoolAuthority: \"Azmucec2jdgWagFkbnqmwYcsrtKPf1v1kcM95v6s1zxu\",\n        threePoolLpTokenAccount: 'EncPBQhpc5KLmcgRD2PutQz7wBBNQkVN2s8jjFWEw9no', // lp vault\n        threePoolRewardTokenAccount: '8q8BHw7fP7mitLrb2jzw78qcSEgCvM7GTB5PzbSQobUt', // reward vault\n\n        mintAddress: '8Q6MKy5Yxb9vG1mWzppMtMb2nrhNuCRNUkJTeiE3fuwD',\n    },\n\n]\n\nexport let three =[\n    {\n        name: 'FIDA-RAY',\n        rewardType: 'three',\n\n        threePoolId: \"8rAdapvcC5vYNLXzChMgt56s6HCQGE6Lbo469g3WRTUh\",\n        threePoolAuthority: \"EcCKf3mgPtL6dNNAVG4gQQtLkAoTAUdf5vzFukkrviWq\",\n        threePoolRewardTokenAccount: \"7vnPTB2HAXFUAV5iiVZTNHgAnVYjgXcdumbbqfeK6ugp\",\n        threePoolLpTokenAccount: 'H6kzwNNg9zbgC1YBjvCN4BdebtA4NusvgUhUSDZoz8rP', // lp vault\n        threePoolRewardTokenAccountB: 'EGHdQm9KGLz6nw7W4rK13DyAMMJcGP9RpzCJaXiq75kQ', // reward vault\n        threePoolUserInfo: \"6mRNC5ZHq6J1S9bCaxxRpYTYz366cfD1R237ZXAJNrgo\",\n\n        mintAddress: 'DsBuznXRTmzvEdb36Dx3aVLVo1XmH7r1PRZUFugLPTFv',\n        other: 'EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp',\n    },\n    {\n        name: 'MAPS-RAY',\n        rewardType: 'three',\n\n        threePoolId: \"Chb6atEWGmH2NitCqrCEMHB8uKWYQiiVaBnmJQDudm87\",\n        threePoolAuthority: \"BcmgQZXCDPCduv3reT8LDQNqvGeGMZtFhBxyLYdrnCjE\",\n        threePoolLpTokenAccount: '5uaBAwu1Sff58KNKGTwfacsjsrMU3wg6jtGtMWwiZd5B', // lp vault\n        threePoolRewardTokenAccount: \"4LVikvk3gZEHaTUNh7L8bsx5By6NNnkqpKfcdJTWTD7Z\",\n        threePoolRewardTokenAccountB: '3UWGpEe2NLD9oWPW1zdXGZRCvJxkNSC2puUWooNEugdS', // reward vault\n\n        mintAddress: 'CcKK8srfVdTSsFGV3VLBb2YDbzF4T4NM2C3UEjC39RLP',\n        other: 'MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb',\n    },\n    {\n        name: 'KIN-RAY',\n        rewardType: 'three',\n\n        threePoolId: \"7RFY9eMaD3nsV7EBTzVzuKBr4X4cLuDh3JaoWZTcGiJK\",\n        threePoolAuthority: \"q42hNDzfBDQ1WzKjxkueEtBzX1VPJ2hnikJXFjSYC91\",\n        threePoolLpTokenAccount: 'DgCSAJiicdEggHJxM7Vs2j59yM5wMJMCGzUHALiVDhtX', // lp vault\n        threePoolRewardTokenAccount: \"3BGPPWYJMSFaWmq21x8Feqvgsii1fVmJiivRuPJSgXe1\",\n        threePoolRewardTokenAccountB: '5uX6ceRRxDRrcARddFkypCZV5MXz5KUQDr7Zf9ZnSSLf', // reward vault\n\n        mintAddress: 'CHT8sft3h3gpLYbCcZ9o27mT5s3Z6VifBVbUiDvprHPW',\n        other: 'kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6',\n    },\n    {\n        name: 'OXY-RAY',\n        rewardType: 'three',\n\n        threePoolId: \"7Hug9fKfTrasG3hHonXTfSnvv37mDeyoBHbVwyDjw693\",\n        threePoolAuthority: \"q42hNDzfBDQ1WzKjxkueEtBzX1VPJ2hnikJXFjSYC91\",\n        threePoolLpTokenAccount: 'DgCSAJiicdEggHJxM7Vs2j59yM5wMJMCGzUHALiVDhtX', // lp vault\n        threePoolRewardTokenAccount: \"3BGPPWYJMSFaWmq21x8Feqvgsii1fVmJiivRuPJSgXe1\",\n        threePoolRewardTokenAccountB: '5uX6ceRRxDRrcARddFkypCZV5MXz5KUQDr7Zf9ZnSSLf', // reward vault\n\n        mintAddress: 'FwaX9W7iThTZH5MFeasxdLpxTVxRcM7ZHieTCnYog8Yb',\n\n        other: 'z3dn17yLaGMKffVogeFHQ9zWVcXgqgf3PQnDsNs2g6M',\n    },\n\n\n]"
      ]
    },
    "sourceType": "script",
    "mtime": 1622018380277
  }
}